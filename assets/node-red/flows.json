[{"id":"92e5dfcb5c3552c2","type":"tab","label":"Immo24 Global","disabled":false,"info":"","env":[]},{"id":"b443cd6f4046fd9f","type":"tab","label":"[Modul] Produktionsbuch","disabled":false,"info":"","env":[]},{"id":"571c9add5c07840b","type":"tab","label":"[Modul] Pro Tools","disabled":false,"info":"","env":[]},{"id":"d57bee5e6ec8512e","type":"group","z":"92e5dfcb5c3552c2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e26be10f69baa19a","8a2acb12476d4853"],"x":68,"y":33,"w":1574,"h":700},{"id":"e09b23f59c044bf8","type":"group","z":"b443cd6f4046fd9f","name":"Formular","style":{"label":true},"nodes":["b04e57b948e77106","899e35cf49d5ba54","8ca467f1f76f9a4d","86131ee14f613e3e","68d4f6662ecbfeb3","175a674c11285c85","a5b3212ee0a897af","45b8aaec67b9454d","1d2f2c031ccf07cb","530d5ce378abe4a4","8f60e803a9417da9","6c009de142b00a69","465673bffca4e0d2","33e7012a8455dcea","a5cbafaa75b73c7c","a077f771503b109f","03462b00bd70668a","1301b6fbc4bf55ad","08f8137fd2a41a4d","29a3309d34314c7e","e76960526db64fc2","3d6f9168757f7650","6081efcfefcbc92f","312cfa25ef98de9e","7ee3c33896935646","f5930766aa85876a","3890f6f8ca6ac208","4890dfe41d974f67","73545854ec411151","5850040864838c78","80b78c3e4e6b59d9","81057573ebad6e60","af7c4fbadcc8f62d","42889590e1925a96","005adac3f0dbf505","3a2458c69f992c7a","fc39c9a148bef52e","4b5fca601da3958f","cecafe4be4e250a0","6d11f8df05045052","16cb66e38510f820","f5da02b2bd8d63a6","f82475d3c09d70a2","1941045c90a03f2e","e494e48fd35f1809","78f6564684f6027e","2abf4b17d6827b67","3e7fc290994492cd","0a7761f43773cf50","25db702b7507e6dd","fec6c59f3697b0bb","13f3227b56812c1a","fa9d2fac02be4c9f","c1e5c60f79c68184","905fc9e0315efe87","1eea91f2906456bc","bf4d8a80d210b362","37e19dd539506efd","14eb4bbb946eedea","b0aef2d54e9d0ec3","3d95844779504430","c5fffcd9f46b8088","fae7008938358c26","fdda2860dcf92acb","cd5a7e2c5f413a15","1b8047b4f7bffd73","2263fe1373d37763","b5beb7b68b78ac15"],"x":84,"y":299,"w":2022,"h":862},{"id":"3f6058c22847f23d","type":"group","z":"b443cd6f4046fd9f","name":"Produktionsbuch Konfiguration","style":{"label":true},"nodes":["c7c63d9da47f6330","06890dbd0ddb32d1","f322ce6d99617ac1","67af028cf4902c3b","c1a5bf97fed12c8e","84aaa7768b35b614","16c39c9787c5e86a","0b27b340710ad717","61a3214f46913f99","982aee71ef376314","6081010839cfde97","68315e4aba959bdb","cb039b699fc21347","e287150e58beba8a","20e99138b5cd274c","eab2a44bcc617ca6","ba32e21ec53a2058","ece0d0ac8ed6cace","30980fd66698fc76","558546a2166b9fc4","6def80d52e32e182","5e6494b51e4bbbe6","7420c56cee57c5d7","a3e6ebddc5560381","ea6f8b41f86d94b7","935f3405d1b6c545","8873ff9592fb74b5","6498337a42ac4708","178729bcb1696a28","ff0ec88e1758989e","c2fdd508c29a6e17","84efea7c0d88ffb7","20521b5881333392","c509de18850164b0","dd02220b3b926222","81aa04d0874e7fc1","54a0892021b03209","6a60c6a3a31b9730","2a975bed9f1c26f8","73132ec65021d6c8","86e19856caed2870","074a3033d0cdef60","be22b8537011645a","fb011e055c200531","c6f16956f997e7af","1e540ddc04291a32","9cbe00b36e920c42","f079b5a2de22c71a","36ed84ccc9d35759","75c5fbafa4446ee5","cd99fbc23bfa41b0","3d38c4563478a24c","b37885c9be6e0c33","7bebdb3370022b2f","25b39abb2c577e54","20d6df6b06396c8d","b49b21837662227a","00aa34757e5184b5","20a9d9b4af147904","e7ccf4e57b055790","2e2a317d13f0f6ff","476e40734497434f","24d85613a2d37961","a4f9ae49b73f0cd9","689c9849faf696d0","41d72cc3699da9b1","870631ee4c8bea42","10dedfe4a11fd2a8","a34dbfbbd8ddf807","aa99e61cb52b1c59","7f40bd72d3f44bbc","e75a53394b693fa8","658b042552cc1076","6850eb948f460b8c","d925a649ad7c9ebc","484c35d9dc6013e8","a3cd16f95075bd4a","3d1947c407ecb362","f05fc0e58ddcff85","48e33377f76de751","a00da8a35639dbd8","3be16e807066c9f4","0cdcc1e9ef5f3e29","b8cfaa564f921f12","bd31b537d98d1d41"],"x":74,"y":1179,"w":2112,"h":802},{"id":"844ea0e2d48407a4","type":"group","z":"92e5dfcb5c3552c2","name":"Admin PW Konfig-Panel","style":{"label":true},"nodes":["1fc8a67db0883fbf","965b3c8fd920c952","be5f366354440cc0","78cb3432ecd585b4","bc4d2fcb1292f184","9e6d05ed3a7e1f73","2efc0cbd79d32843","c269273b6151b3ba","0b64a9434672861a","92cfee7ee2b864cf","1e33850e291001d2","7ccfa3d0c632af77","2c200baaf42378a1"],"x":74,"y":779,"w":1352,"h":322},{"id":"682d5ba9e57c89d0","type":"group","z":"92e5dfcb5c3552c2","name":"Initialisierung","style":{"label":true},"nodes":["0b4443336c7bd8ae","22c77170bc28046b","7935cf731073a570","104b571128586e5f","c0aa387d8488293b","3d5bcef0e3e1d8e1","67df1612aa33160e","0b59bc840a6c75b4","f850bc0fb4445945","6a158b47a9a44d52","abfb2e6ff7c827c4","26e136e20196659a","3bbddc1103541fb2","57c334d6f88aa377","ccab7051afe7c5f9","f53e549a1caa1a0c","37482b60c823466e","e8cb1eed06d4aec7","371415d6fbdf5e40","dfa9f04d367b077b","8094f26a5cf99161","3c02b3520300b376"],"x":134,"y":2039,"w":1232,"h":442},{"id":"843cd62abaaec61f","type":"group","z":"571c9add5c07840b","name":"Track Data","style":{"label":true},"nodes":["edce99a5cffcc7e5","4b4b88c1be70ec42","eecef021cf5ea5f9","67bd53b720f256d8","b20e0716bb69c289","b777a94f111ff071","9bdaf0d4392acc21","b45c327d585b78b2","a553c31ecabc9da0","3794b8b88a124018","51858e71739fe5f0","e406fa5e851023e7","4e89fbef3af60f1c","0df45444bc06051c","aa88ebcbb973c6d3","6d456d2a0be0d42d","7add7f28bc5bf8dd","e96c8725de1a8e8f","963ca3740f921cf8"],"x":474,"y":1519,"w":1752,"h":202},{"id":"b1253b63671bc6bf","type":"group","z":"571c9add5c07840b","name":"Memory Location","style":{"label":true},"nodes":["39d13a464431d31b","fafc7a55859a7190","05d86ab1ea26b37b","81215275a16d8c68","970f9fc0808ec60f","0b70528cdccb53e7","73306ab970c38caf","2c990ce67e5034a6","0dbec11db74424cd","a278233615cac6e0","b0fb0ad905b35602","25bc3768c7ae50d3","c53ffd5c163eadcb","d60bb26669de3657","32f7122ac9fe151b","e83c364cfbd30d42","a4ad4a34a821d771","46ac2dd8fba3cbd0","facd8f20ee00818d"],"x":474,"y":1279,"w":1792,"h":222},{"id":"8946011e70d4ed9e","type":"group","z":"571c9add5c07840b","name":"Clip Effects Presets","style":{"label":true},"nodes":["404d5678657dac10","338d50cd66e07956","e6c214decef4eadd","c80234e5017b0a98","1066641335f87e3b","2a28990d8768c2bf","bfc6384b6602ee8c","e3fc98cad4c5a589","3e07cec2c354b562","b8b13e0434601759","98b18cba1d87bf68","9d5687462b806359","02b22dc642dc2fef","7723b0bc17fd7e13","d3407d76b6b96bd9","6f1bdfeeef1718e0","59542c4cb71f0d92","d19e7fada3c78c77","b838cce695308516"],"x":474,"y":1039,"w":1752,"h":222},{"id":"f2c7b2760eb46d43","type":"group","z":"571c9add5c07840b","name":"Keyboard Shortcuts","style":{"label":true},"nodes":["dec159441b93f814","126ecdd30c809417","4190da9a9792cbcc","57085a5e232a9565","563eea3d7ff40ed2","9ccfc5bdc5b504f8","1e1ceeb243c3e34b","b08666bf6d1a972b","cb04caf391cac468","d95b6caced6d8123","eecbec774963fbb5","08170b3dbaac1481","d48d6bfe020662f4","f1e3f6051c6ae603","056065ca8f0d9a0c","49b6df07bce631a3","13cf5781fe9bad4b","2ed8480660f224f9","3d51bf9aaaa43479"],"x":474,"y":1739,"w":1752,"h":222},{"id":"6be4880a2368c056","type":"group","z":"571c9add5c07840b","name":"Templates","style":{"label":true},"nodes":["026123ed6fbfbff9","03c50850773c2cb2","a2992087464cfb1c","5df36f9d8643344d","8a745d4f06ab7d74","be000d24df49fdf0","a35593c5dcda4bb3","9a3c9241d9bdb9dd"],"x":614,"y":259,"w":1172,"h":162},{"id":"24b94f8f5582405c","type":"group","z":"571c9add5c07840b","name":"Track Presets","style":{"label":true},"nodes":["5a142e72217b90d9","2614347baa37cc3e","71a251e7b77b506b","09bcc4b2263e608f","5f59f44b2aac691e","dd5b551627f9f46d","201c4cbdc53b4b05","c34217e5aaba2b25"],"x":614,"y":439,"w":1192,"h":162},{"id":"c228aba48bf6fd27","type":"group","z":"571c9add5c07840b","name":"Fade Presets","style":{"label":true},"nodes":["d8eab152f365a0df","9151b0e0d234cf6b","c133d90e649a5ff2","16b240c5ebff9643","399704b1bba9111c","4cd228b5b1ec067e","77cfbeec620abcd6","97c972e18dacc01e","b8a6163e7afb5acf","1b55abfd770dda78","5ee9d6d3e3c4f2bd","efcec27fd6452b4e","312b4db1c260c987","e940af9352af930c","9ee5da509d5220c9","ccb723d0652e28eb","9bf63010af8c1d3b","570bac17347d885f","897d2cccd85f4c90","03d2b25b9bdaa836"],"x":474,"y":839,"w":1892,"h":182},{"id":"fc811062d1cbf27f","type":"group","z":"571c9add5c07840b","name":"Plug-In Settings","style":{"label":true},"nodes":["3118fab255283b8b","c18f456a0f791f42","929b5b35d429bd73","8a66e0bb62460b38","2b31b10a748b6d64","9078dc5bb0f1fcb5","a2619de64e762d39","c3ed416bf7cc8c57","780f8b7b325e3923","71a4fd4af2c51838","a77776b195ab0290","74dfc0289041bfab","f6530849f84ba28d","ea1bb40fdd31379f","0aff157563034614"],"x":474,"y":619,"w":2172,"h":202},{"id":"e26be10f69baa19a","type":"group","z":"92e5dfcb5c3552c2","g":"d57bee5e6ec8512e","name":"Konfiguration - Pfade","style":{"label":true},"nodes":["64fcfd417c2d2c3f","0a04cc918e1099a3","16f984c570189fdb","38a319aec097873b","686120e0242c6e78","3b9ce4a5ce885716","b376e9b9b273d316","a49a99f318f8c8a9","8a1867e72a7d1cdf","975bba0b013c6913","ac0bdf33d3ceac64","3efc42592dbe14c5","17d495e513099ccd","3acd3a13433e546d","d8f01b3cc92d1167","c525012d8c78c4b7","9836651176dc7871","afd6dde2e8c6d1d9","69fe897a581205d9","e6896f1d2f3f231c","2c2fc7116e19afc6"],"x":94,"y":59,"w":1522,"h":342},{"id":"8a2acb12476d4853","type":"group","z":"92e5dfcb5c3552c2","g":"d57bee5e6ec8512e","name":"Konfiguration - Datei/Ordnerschema","style":{"label":true},"nodes":["81c6e148c989ba15"],"x":268,"y":313,"w":1244,"h":394},{"id":"81c6e148c989ba15","type":"group","z":"92e5dfcb5c3552c2","g":"8a2acb12476d4853","name":"API: Schema (GET/PUT)","style":{"label":true},"nodes":["4ffc5daf677ec631","8fabcb73dec928c3","34d4dff87db069a4","6b575f053cf737f1","5da5a2a98450f900","72f7fe6d9db4a64b","1809518017dbcabf","c95b6a77fbecb357","84a54dfd32c09623","506c4fe8083fcac7","1d16bbe8cc72169d","02a64ed83e42b932","dfc5ab4c5825958b","3dcdb1f1d4539178","148040fcc730ca47"],"x":294,"y":339,"w":1192,"h":342},{"id":"1fc8a67db0883fbf","type":"http in","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"","url":"/api/check-password","method":"post","upload":false,"swaggerDoc":"","x":220,"y":840,"wires":[["9e6d05ed3a7e1f73"]]},{"id":"965b3c8fd920c952","type":"function","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"Passwort-Check","func":"const given = (msg.givenPassword ?? '').toString();\n\n// Datei-Inhalt steckt jetzt in msg.payload (utf8-String)\nlet stored = '';\nconst raw = (msg.payload ?? '').toString().trim();\n\nif (!raw) {\n    // Kein gespeichertes PW vorhanden -> Zugriff verweigern\n    msg.statusCode = 401;\n    msg.payload = { ok: false };\n    return msg;\n}\n\n// Erst versuchen, JSON zu lesen { \"password\": \"...\" }\ntry {\n    const obj = JSON.parse(raw);\n    if (obj && typeof obj.password === 'string') {\n        stored = obj.password;\n    } else {\n        // Kein Feld \"password\" -> treat as plain\n        stored = raw;\n    }\n} catch {\n    // Nicht-JSON -> treat as plain string\n    stored = raw;\n}\n\nif (given && stored && given === stored) {\n    msg.statusCode = 200;\n    msg.payload = { ok: true };\n} else {\n    msg.statusCode = 401;\n    msg.payload = { ok: false };\n}\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1170,"y":820,"wires":[["be5f366354440cc0"]]},{"id":"be5f366354440cc0","type":"http response","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"","statusCode":"","headers":{},"x":1350,"y":820,"wires":[]},{"id":"78cb3432ecd585b4","type":"debug","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"adminpw","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":440,"y":900,"wires":[]},{"id":"64fcfd417c2d2c3f","type":"http in","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"GET /api/paths","url":"/api/paths","method":"get","upload":false,"swaggerDoc":"","x":200,"y":100,"wires":[["0a04cc918e1099a3"]]},{"id":"0a04cc918e1099a3","type":"function","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"Pfad setzen","func":"// Function-Node (Sandbox) → KEIN process.env!\n// Richtig: env.get('IMMO24_USERDATA')\nconst base =\n    env.get('IMMO24_USERDATA') ||\n    global.get('IMMO24_USERDATA') ||   // Fallback, falls du es global setzt\n    '';\n\nif (!base) {\n    // optionales Logging hilft beim Debuggen\n    node.warn('IMMO24_USERDATA ist leer – verwende Fallback im UserData-Verzeichnis?');\n    // Wenn du willst, kannst du hier noch einen Default setzen:\n    // msg.filename = '/tmp/path.json'; return msg;\n}\n\nmsg.filename = base + '/path.json';\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":100,"wires":[["16f984c570189fdb","afd6dde2e8c6d1d9"]]},{"id":"16f984c570189fdb","type":"fs-ops-access","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"existiert Datei?","path":"","pathType":"str","filename":"filename","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":620,"y":100,"wires":[["38a319aec097873b"],["3b9ce4a5ce885716"]]},{"id":"38a319aec097873b","type":"file in","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"lesen (utf8)","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":true,"x":820,"y":100,"wires":[["686120e0242c6e78"]]},{"id":"686120e0242c6e78","type":"json","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"parse","property":"payload","action":"","pretty":false,"x":990,"y":100,"wires":[["b376e9b9b273d316"]]},{"id":"3b9ce4a5ce885716","type":"function","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"Fallback: {}","func":"msg.payload = {};\nreturn msg;","outputs":1,"noerr":0,"x":830,"y":160,"wires":[["b376e9b9b273d316"]]},{"id":"b376e9b9b273d316","type":"function","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"Version anhängen + Globals","func":"let ver = global.get('paths_version');\nif (!ver) { ver = String(Date.now()); global.set('paths_version', ver); }\nconst data = typeof msg.payload === 'object' && msg.payload ? msg.payload : {};\nif (data.PathMitarbeiter !== undefined) global.set('PathMitarbeiter', data.PathMitarbeiter);\nif (data.PathProduktionen !== undefined) global.set('PathProduktionen', data.PathProduktionen);\nif (data.PathStammdaten !== undefined) global.set('PathStammdaten', data.PathStammdaten);\nif (data.PathPTUser !== undefined) global.set('PathPTUser', data.PathPTUser);\nmsg.payload = { data, version: ver };\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1220,"y":130,"wires":[["a49a99f318f8c8a9"]]},{"id":"a49a99f318f8c8a9","type":"http response","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"200","statusCode":"","headers":{},"x":1410,"y":130,"wires":[]},{"id":"8a1867e72a7d1cdf","type":"http in","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"PUT /api/paths","url":"/api/paths","method":"put","upload":false,"swaggerDoc":"","x":200,"y":260,"wires":[["975bba0b013c6913","2c2fc7116e19afc6"]]},{"id":"975bba0b013c6913","type":"function","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"Body parsen + prüfen","func":"// Robust parse helper\nfunction safeParse(x) {\n  if (x == null) return null;\n  if (Buffer.isBuffer(x)) { try { return JSON.parse(x.toString('utf8')); } catch { return null; } }\n  if (typeof x === 'string') { try { return JSON.parse(x); } catch { return null; } }\n  if (typeof x === 'object') return x;\n  return null;\n}\n\nconst body = safeParse(msg.payload);\n\n// Grundprüfung\nif (!body || typeof body.version !== 'string' || typeof body.data !== 'object' || body.data === null || Array.isArray(body.data)) {\n  msg.statusCode = 400;\n  msg.payload = { error: 'bad_payload' };\n  return [null, msg];\n}\n\n// Felder whitelisten/normalisieren\nconst d = body.data;\nconst normalized = {\n  PathMitarbeiter: typeof d.PathMitarbeiter === 'string' ? d.PathMitarbeiter : '',\n  PathProduktionen: typeof d.PathProduktionen === 'string' ? d.PathProduktionen : '',\n  PathStammdaten: typeof d.PathStammdaten === 'string' ? d.PathStammdaten : '',\n  PathPTUser: typeof d.PathPTUser === 'string' ? d.PathPTUser : ''\n};\n\n// Ergebnis für die weiteren Nodes bereitstellen\nmsg.body = { data: normalized, version: body.version };\nreturn [msg, null];","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":260,"wires":[["3efc42592dbe14c5","69fe897a581205d9"],["ac0bdf33d3ceac64","e6896f1d2f3f231c"]]},{"id":"ac0bdf33d3ceac64","type":"http response","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"400 bad payload","statusCode":"400","headers":{},"x":670,"y":300,"wires":[]},{"id":"3efc42592dbe14c5","type":"function","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"Pfad setzen","func":"// Function-Node (Sandbox) → KEIN process.env!\n// Richtig: env.get('IMMO24_USERDATA')\nconst base =\n    env.get('IMMO24_USERDATA') ||\n    global.get('IMMO24_USERDATA') ||   // Fallback, falls du es global setzt\n    '';\n\nif (!base) {\n    // optionales Logging hilft beim Debuggen\n    node.warn('IMMO24_USERDATA ist leer – verwende Fallback im UserData-Verzeichnis?');\n    // Wenn du willst, kannst du hier noch einen Default setzen:\n    // msg.filename = '/tmp/path.json'; return msg;\n}\n\nmsg.filename = base + '/path.json';\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":260,"wires":[["17d495e513099ccd"]]},{"id":"17d495e513099ccd","type":"function","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"Version vergleichen","func":"const cur = global.get('paths_version') || '0';\nconst cli = String(msg.body?.version || '');\nif (cli !== cur) {\n  msg.statusCode = 409;\n  msg.payload = { error: 'version_conflict', currentVersion: cur };\n  return [null, msg];\n}\nconst next = msg.body.data || {};\nmsg.payload = JSON.stringify(next, null, 2);\nmsg.nextVersion = String(Date.now());\nreturn [msg, null];","outputs":2,"noerr":0,"x":910,"y":260,"wires":[["d8f01b3cc92d1167"],["3acd3a13433e546d"]]},{"id":"3acd3a13433e546d","type":"http response","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"409 conflict","statusCode":"409","headers":{},"x":1120,"y":300,"wires":[]},{"id":"d8f01b3cc92d1167","type":"file","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"path.json schreiben","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":1120,"y":260,"wires":[["c525012d8c78c4b7"]]},{"id":"c525012d8c78c4b7","type":"function","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"Globals setzen + Antwort","func":"try { var data = JSON.parse(msg.payload); } catch(e) { data = {}; }\nif (data.PathMitarbeiter !== undefined) global.set('PathMitarbeiter', data.PathMitarbeiter);\nif (data.PathProduktionen !== undefined) global.set('PathProduktionen', data.PathProduktionen);\nif (data.PathStammdaten !== undefined) global.set('PathStammdaten', data.PathStammdaten);\nif (data.PathPTUser !== undefined) global.set('PathPTUser', data.PathPTUser);\nif (msg.nextVersion) global.set('paths_version', msg.nextVersion);\nmsg.statusCode = 200;\nmsg.payload = { ok: true, version: global.get('paths_version') || '0' };\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1340,"y":260,"wires":[["9836651176dc7871"]]},{"id":"9836651176dc7871","type":"http response","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"200 ok","statusCode":"200","headers":{},"x":1540,"y":260,"wires":[]},{"id":"afd6dde2e8c6d1d9","type":"debug","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"debug 3","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":530,"y":160,"wires":[]},{"id":"69fe897a581205d9","type":"debug","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"debug 4","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":480,"y":320,"wires":[]},{"id":"e6896f1d2f3f231c","type":"debug","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"debug 6","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":480,"y":360,"wires":[]},{"id":"bc4d2fcb1292f184","type":"file in","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"adminpw.json lesen","filename":"${IMMO24_USERDATA}/adminpw.json","filenameType":"env","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":940,"y":820,"wires":[["965b3c8fd920c952"]]},{"id":"9e6d05ed3a7e1f73","type":"function","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"Body sichern + Pfad setzen","func":"const body = (typeof msg.payload === 'object' && msg.payload) ? msg.payload : {};\nconst given = (body.password ?? '').toString();\n\nif (!given) {\n    msg.statusCode = 400;\n    msg.payload = { ok: false, error: 'missing_password' };\n    return [null, msg];\n}\n\n// Passwort für später parken\nmsg.givenPassword = given;\n\n// Datei-Pfad setzen (hier über den File-Node einfacher per ENV!)\n// -> im nachfolgenden \"file in\" Node dann Filename = ${IMMO24_USERDATA}/adminpw.json (Typ: env)\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":680,"y":840,"wires":[["bc4d2fcb1292f184"],["be5f366354440cc0"]]},{"id":"2efc0cbd79d32843","type":"http in","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"","url":"/api/adminpw","method":"post","upload":false,"skipBodyParsing":false,"swaggerDoc":"","x":200,"y":1000,"wires":[["c269273b6151b3ba","78cb3432ecd585b4"]]},{"id":"c269273b6151b3ba","type":"function","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"validate fields","func":"const body = (typeof msg.payload === 'object' && msg.payload) ? msg.payload : {};\nconst newPassword = (body.newPassword ?? '').toString();\nconst repeatPassword = (body.repeatPassword ?? '').toString();\n\nif (!newPassword || !repeatPassword) {\n  msg.statusCode = 400;\n  msg.payload = { ok:false, error:'missing_fields' };\n  return [null, msg];\n}\nif (newPassword !== repeatPassword) {\n  msg.statusCode = 422;\n  msg.payload = { ok:false, error:'password_mismatch' };\n  return [null, msg];\n}\n// ok → für File-Node String vorbereiten\nmsg.payload = JSON.stringify({ password: newPassword }, null, 2);\nreturn [msg, null];","outputs":2,"noerr":0,"x":590,"y":1000,"wires":[["0b64a9434672861a","2c200baaf42378a1"],["1e33850e291001d2","2c200baaf42378a1"]]},{"id":"0b64a9434672861a","type":"file","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"write ${IMMO24_USERDATA}/adminpw.json","filename":"${IMMO24_USERDATA}/adminpw.json","filenameType":"env","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":890,"y":1000,"wires":[["92cfee7ee2b864cf"]]},{"id":"92cfee7ee2b864cf","type":"function","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"200 OK","func":"msg.statusCode = 200;\nmsg.payload = { ok: true };\nreturn msg;","outputs":1,"noerr":0,"x":1120,"y":1000,"wires":[["7ccfa3d0c632af77"]]},{"id":"1e33850e291001d2","type":"http response","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"error response","statusCode":"","headers":{},"x":820,"y":1060,"wires":[]},{"id":"7ccfa3d0c632af77","type":"http response","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"response","statusCode":"","headers":{},"x":1280,"y":1000,"wires":[]},{"id":"2c200baaf42378a1","type":"debug","z":"92e5dfcb5c3552c2","g":"844ea0e2d48407a4","name":"debug 7","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":880,"y":920,"wires":[]},{"id":"4ffc5daf677ec631","type":"http in","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"","url":"/api/schema","method":"get","upload":false,"swaggerDoc":"","x":400,"y":460,"wires":[["84a54dfd32c09623"]]},{"id":"8fabcb73dec928c3","type":"file in","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"schemes.json lesen","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":850,"y":540,"wires":[["34d4dff87db069a4"]]},{"id":"34d4dff87db069a4","type":"json","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"parse (tolerant)","property":"payload","action":"","pretty":false,"x":830,"y":460,"wires":[["02a64ed83e42b932"]]},{"id":"6b575f053cf737f1","type":"http response","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"200","statusCode":"","headers":{},"x":1260,"y":460,"wires":[]},{"id":"5da5a2a98450f900","type":"http in","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"","url":"/api/schema","method":"put","upload":false,"swaggerDoc":"","x":400,"y":580,"wires":[["72f7fe6d9db4a64b","dfc5ab4c5825958b"]]},{"id":"72f7fe6d9db4a64b","type":"function","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"Validate + toWrite","func":"// Body robust ermitteln ({schema:{…}}, {data:{…}} oder flach)\nconst body = (typeof msg.payload === 'object' && msg.payload) ? msg.payload : {};\nconst container =\n  (body.schema && typeof body.schema === 'object') ? body.schema :\n    (body.data && typeof body.data === 'object') ? body.data :\n      body;\n\nconst projekt = container?.projektordnerSchema;\nconst session = container?.sessionSchema;\nconst version = body?.version;\n\n// Validierung\nif (typeof version !== 'string' || typeof projekt !== 'string' || typeof session !== 'string') {\n  msg.statusCode = 400;\n  msg.payload = { error: 'bad_payload' };\n  return [null, msg];\n}\n\n// Für File-Node (schreibt nur die Schemes, ohne Version)\nmsg.payload = JSON.stringify({\n  projektordnerSchema: projekt,\n  sessionSchema: session\n}, null, 2);\n\nmsg.clientVersion = version;\nreturn [msg, null];","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":640,"wires":[["1d16bbe8cc72169d"],["c95b6a77fbecb357"]],"outputLabels":["okay","error"]},{"id":"1809518017dbcabf","type":"file","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"schemes.json schreiben","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":1110,"y":560,"wires":[["c95b6a77fbecb357"]]},{"id":"c95b6a77fbecb357","type":"http response","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"Reply","statusCode":"","headers":{},"x":1410,"y":620,"wires":[],"info":"Bei Erfolg sendet der vorangehende http response (200) schon –\ndieser Knoten dient als Fallback für Fehlerausgänge."},{"id":"84a54dfd32c09623","type":"function","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"schemes.json Verzeichnis","func":"// Pfad sicher zusammensetzen\nconst base = (global.get('PathStammdaten') || '').replace(/[\\\\/]+$/, '');\nmsg.filename = base + '/schemes.json';\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":500,"wires":[["3dcdb1f1d4539178"]]},{"id":"506c4fe8083fcac7","type":"debug","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"debug 9","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1360,"y":500,"wires":[]},{"id":"1d16bbe8cc72169d","type":"function","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"schemes.json Verzeichnis","func":"const base = global.get('PathStammdaten');\nif (!base) {\n    msg.statusCode = 400;\n    msg.payload = { error: 'no_stammdaten_path' };\n    return [null, msg];\n}\nmsg.filename = base + '/schemes.json';\nreturn [msg, null];","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":580,"wires":[["1809518017dbcabf"]]},{"id":"493257847a89607c","type":"change","z":"92e5dfcb5c3552c2","name":"global.activeUser = payload.user","rules":[{"t":"set","p":"activeUser","pt":"global","to":"payload.user","tot":"msg"}],"x":520,"y":1400,"wires":[["e72a4595efabe9de","f9ffa4cff5e42b6c"]]},{"id":"4d0412ea662244b2","type":"http response","z":"92e5dfcb5c3552c2","name":"200 OK","statusCode":"200","headers":{},"x":1320,"y":1400,"wires":[]},{"id":"21ec615fa112d830","type":"http in","z":"92e5dfcb5c3552c2","name":"","url":"/api/logout","method":"post","upload":false,"skipBodyParsing":false,"swaggerDoc":"","x":150,"y":1500,"wires":[["099c10320de220de"]]},{"id":"099c10320de220de","type":"change","z":"92e5dfcb5c3552c2","name":"global.activeUser = null","rules":[{"t":"set","p":"activeUser","pt":"global","to":"null","tot":"json"}],"x":430,"y":1500,"wires":[["b323d5d8aaef30c7"]]},{"id":"5e9e7b80f7ec109e","type":"http response","z":"92e5dfcb5c3552c2","name":"200 OK","statusCode":"200","headers":{},"x":980,"y":1500,"wires":[]},{"id":"43ba9389b11d92fa","type":"inject","z":"92e5dfcb5c3552c2","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":500,"y":1740,"wires":[["1a86fd43dc214f2e"]]},{"id":"1a86fd43dc214f2e","type":"fs-ops-dir","z":"92e5dfcb5c3552c2","name":"MA-Ordner lesen","path":"PathMitarbeiter","pathType":"global","filter":"","filterType":"str","dir":"payload","dirType":"msg","x":810,"y":1740,"wires":[["52b1a396d290f184","45276387807e7873"]]},{"id":"52b1a396d290f184","type":"function","z":"92e5dfcb5c3552c2","name":"Unsichtbare filtern","func":"if(!Array.isArray(msg.payload)) msg.payload=[];\nmsg.payload = msg.payload.filter(n => typeof n === 'string' && !n.startsWith('.'));\nreturn msg;","outputs":1,"noerr":0,"x":1010,"y":1740,"wires":[["24a5473359171122"]]},{"id":"24a5473359171122","type":"function","z":"92e5dfcb5c3552c2","name":"zu Pfaden konvertieren","func":"const base = global.get('PathMitarbeiter') || '';\nmsg.payload = (msg.payload || []).map(n => base + '/' + n);\nreturn msg;","outputs":1,"noerr":0,"x":1230,"y":1740,"wires":[["135b0f9e7062482a"]]},{"id":"b9e241fc311d4a8e","type":"fs-ops-stats","z":"92e5dfcb5c3552c2","name":"Statistiken (Array)","path":"","pathType":"str","filename":"payload","filenameType":"msg","stats":"stats","sizeType":"msg","x":1530,"y":1680,"wires":[["011503d41e3558fb"]]},{"id":"011503d41e3558fb","type":"function","z":"92e5dfcb5c3552c2","name":"Nur Ordnernamen (Array)","func":"const pfade = msg.payload || [];\nconst stats = msg.stats || [];\nconst out = [];\nfor (let i = 0; i < pfade.length; i++) {\n  const s = stats[i];\n  let isDir = false;\n  if (s) {\n    if (typeof s.isDirectory === 'function') {\n      isDir = s.isDirectory();\n    } else if (typeof s.mode === 'number') {\n      isDir = (s.mode & 0o170000) === 0o040000;\n    }\n  }\n  if (isDir) {\n    const teile = pfade[i].split(/[\\\\/]/);\n    const name = teile[teile.length - 1];\n    if (name && !name.startsWith('.')) out.push(name);\n  }\n}\nmsg.payload = out;\nreturn msg;","outputs":1,"noerr":0,"x":1670,"y":1740,"wires":[["f12d625b1efdeba0"]]},{"id":"8ce945730cd5d01d","type":"split","z":"92e5dfcb5c3552c2","name":"pro Ordner","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":610,"y":1800,"wires":[["db07b5ab350e85bb"]]},{"id":"db07b5ab350e85bb","type":"function","z":"92e5dfcb5c3552c2","name":"Pfad zu immo24/immo24-user.json","func":"const PathMitarbeiter = global.get('PathMitarbeiter') || '';\nconst userName = msg.payload; // einzelner Ordnername\nmsg.userName = userName;\nmsg.filename = `${PathMitarbeiter}/${userName}/immo24/immo24-user.json`;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1800,"wires":[["2a61d62257f7adba"]]},{"id":"2a61d62257f7adba","type":"fs-ops-access","z":"92e5dfcb5c3552c2","name":"Datei vorhanden?","path":"","pathType":"str","filename":"filename","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":1090,"y":1800,"wires":[["11da59bf9c49b269"],["38643e44f98a6583"]]},{"id":"11da59bf9c49b269","type":"file in","z":"92e5dfcb5c3552c2","name":"JSON lesen","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":1290,"y":1800,"wires":[["f512e915f1bef756"]]},{"id":"38643e44f98a6583","type":"function","z":"92e5dfcb5c3552c2","name":"leer markieren","func":"msg.payload = null;\nreturn msg;","outputs":1,"noerr":0,"x":1300,"y":1840,"wires":[["18f6220e38521937"]]},{"id":"18f6220e38521937","type":"join","z":"92e5dfcb5c3552c2","name":"Array sammeln","mode":"auto","build":"array","property":"payload","propertyType":"msg","useparts":true,"x":1500,"y":1840,"wires":[["a8652c7098e651f4"]]},{"id":"a8652c7098e651f4","type":"function","z":"92e5dfcb5c3552c2","name":"Nulls entfernen + sortieren","func":"// Erwartet msg.payload = Array aus Objekten oder nulls\n// Format: { name: \"<ordnername>\", kuerzel: \"<string>\" }\n\n// Nulls entfernen\nlet arr = Array.isArray(msg.payload)\n    ? msg.payload.filter(v => v && typeof v === 'object')\n    : [];\n\n// Sortieren nach 'name'\narr.sort((a, b) => String(a.name).localeCompare(String(b.name), 'de'));\n\n// sauberes msg zurückgeben\nmsg.payload = arr;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1720,"y":1840,"wires":[["754cdbbc16d2588d","61816f910386b34c"]]},{"id":"754cdbbc16d2588d","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 16","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1860,"y":1900,"wires":[]},{"id":"f512e915f1bef756","type":"function","z":"92e5dfcb5c3552c2","name":"Kürzel extrahieren (nie droppen)","func":"// Erwartet msg.payload = String-Inhalt der Datei (vom file in / utf8)\n// msg.userName = Name des User-Ordners\n// Gibt { name: <username>, kuerzel: <string> } oder null zurück\n\nlet text = (msg.payload || \"\").trim();\n\nif (!text) {\n  msg.payload = null;   // leer → kein Eintrag\n} else {\n  msg.payload = { name: msg.userName, kuerzel: text };\n}\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1510,"y":1800,"wires":[["18f6220e38521937"]]},{"id":"5036f285ad308641","type":"http in","z":"92e5dfcb5c3552c2","name":"GET /api/user","url":"/api/user","method":"get","upload":false,"swaggerDoc":"","x":610,"y":1940,"wires":[["32033b1942a816ca","0c24b8a8ef6115f1"]]},{"id":"32033b1942a816ca","type":"link call","z":"92e5dfcb5c3552c2","name":"Scan-Flow aufrufen","links":["7f0afda97c05ab7f"],"linkType":"static","timeout":"30","x":810,"y":1940,"wires":[["f76642bcb1764cca","3b041d48768ccf10"]]},{"id":"f76642bcb1764cca","type":"http response","z":"92e5dfcb5c3552c2","name":"200 JSON","statusCode":"200","headers":{"Content-Type":"application/json"},"x":1030,"y":1940,"wires":[]},{"id":"61816f910386b34c","type":"link out","z":"92e5dfcb5c3552c2","name":"Return an Caller","mode":"return","links":[],"x":1905,"y":1840,"wires":[]},{"id":"7f0afda97c05ab7f","type":"link in","z":"92e5dfcb5c3552c2","name":"Scan-Flow Eingang","links":[],"x":655,"y":1740,"wires":[["1a86fd43dc214f2e","877d69b3951bac0d"]]},{"id":"452e7f1fce6cd35e","type":"http in","z":"92e5dfcb5c3552c2","name":"","url":"/api/login","method":"post","upload":false,"skipBodyParsing":false,"swaggerDoc":"","x":150,"y":1400,"wires":[["493257847a89607c"]]},{"id":"07041f344aea141d","type":"http in","z":"92e5dfcb5c3552c2","name":"","url":"/api/user","method":"post","upload":false,"skipBodyParsing":false,"swaggerDoc":"","x":160,"y":1200,"wires":[["a29b45ce8662063f","5a15ba0489a10be1"]]},{"id":"a29b45ce8662063f","type":"link call","z":"92e5dfcb5c3552c2","name":"run user worker","links":["d1380deb997605f5"],"timeout":"120","x":520,"y":1200,"wires":[["84239da3ef9920ba","f6a83708b92761ec"]]},{"id":"84239da3ef9920ba","type":"http response","z":"92e5dfcb5c3552c2","name":"HTTP 200","statusCode":"","headers":{"Content-Type":"application/json"},"x":700,"y":1200,"wires":[]},{"id":"d1380deb997605f5","type":"link in","z":"92e5dfcb5c3552c2","name":"Worker In","links":[],"x":305,"y":1260,"wires":[["9594938aa57ba1e4"]]},{"id":"9594938aa57ba1e4","type":"function","z":"92e5dfcb5c3552c2","name":"validate payload","func":"const p = msg.payload || {};\nconst list = Array.isArray(p.mitarbeiter) ? p.mitarbeiter : [];\nif (!Array.isArray(list) || list.length === 0) {\n    msg.statusCode = 400;\n    msg.payload = { error: 'mitarbeiter array required' };\n    return msg;\n}\nconst base = global.get('PathMitarbeiter') || '';\nmsg.base = base;\nmsg.payload = list.map(x => ({ name: String(x?.name ?? ''), kuerzel: String(x?.kuerzel ?? '') }));\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":505,"y":1260,"wires":[["798096a61f91b326","088e9ece0a1e107c"]]},{"id":"798096a61f91b326","type":"split","z":"92e5dfcb5c3552c2","name":"per user","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":685,"y":1260,"wires":[["897b0239ea7136a4","088e9ece0a1e107c"]]},{"id":"897b0239ea7136a4","type":"function","z":"92e5dfcb5c3552c2","name":"build paths","func":"const base = msg.base || '';\nconst name = msg.payload.name;\nconst kuerzel = msg.payload.kuerzel;\nif (!name) { msg.payload = { name, action: 'skipped:name-missing' }; return msg; }\nmsg.user = { name, kuerzel };\nmsg.paths = {\n  userDir: `${base}/${name}`,\n  metaDir: `${base}/${name}/immo24`,\n  metaFile: `${base}/${name}/immo24/immo24-user.json`\n};\nreturn msg;","outputs":1,"noerr":0,"x":845,"y":1260,"wires":[["6e1e460999059bbc"]]},{"id":"6e1e460999059bbc","type":"fs-ops-access","z":"92e5dfcb5c3552c2","name":"userDir exists?","path":"","pathType":"str","filename":"paths.userDir","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":1045,"y":1260,"wires":[["a4056ba0f72c5e5a"],["0ae5b94a4fdaabd9"]]},{"id":"0ae5b94a4fdaabd9","type":"fs-ops-mkdir","z":"92e5dfcb5c3552c2","name":"mkdir userDir","path":"","pathType":"str","dirname":"paths.userDir","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"dir","fullpathType":"msg","x":1240,"y":1280,"wires":[["a4056ba0f72c5e5a"]]},{"id":"a4056ba0f72c5e5a","type":"fs-ops-access","z":"92e5dfcb5c3552c2","name":"metaDir exists?","path":"","pathType":"str","filename":"paths.metaDir","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":1445,"y":1260,"wires":[["ce86d3ee96f10372"],["d06d9a5d2e099b86"]]},{"id":"d06d9a5d2e099b86","type":"fs-ops-mkdir","z":"92e5dfcb5c3552c2","name":"mkdir metaDir","path":"","pathType":"str","dirname":"paths.metaDir","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"dir","fullpathType":"msg","x":1800,"y":1300,"wires":[["ce86d3ee96f10372","cfde9cbf7130a7bb"]]},{"id":"ce86d3ee96f10372","type":"function","z":"92e5dfcb5c3552c2","name":"payload/filename setzen","func":"msg.filename = msg.paths.metaFile;\nmsg.payload = msg.user.kuerzel; // exakt wie geliefert\nreturn msg;","outputs":1,"noerr":0,"x":1810,"y":1160,"wires":[["7b2d14455bd6e85f"]]},{"id":"7b2d14455bd6e85f","type":"file","z":"92e5dfcb5c3552c2","name":"write immo24-user.json","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":2035,"y":1260,"wires":[["02a0f39c7026dc2c"]]},{"id":"02a0f39c7026dc2c","type":"function","z":"92e5dfcb5c3552c2","name":"result entry","func":"msg.payload = { name: msg.user.name, action: 'written' };\nreturn msg;","outputs":1,"noerr":0,"x":2225,"y":1260,"wires":[["91978a0f8d70300f"]]},{"id":"91978a0f8d70300f","type":"join","z":"92e5dfcb5c3552c2","name":"collect results","mode":"auto","build":"array","property":"payload","propertyType":"msg","x":2395,"y":1260,"wires":[["eebd44240de5fb71"]]},{"id":"eebd44240de5fb71","type":"function","z":"92e5dfcb5c3552c2","name":"200 summary","func":"const arr = Array.isArray(msg.payload) ? msg.payload : [];\nmsg.statusCode = 200;\nmsg.payload = { ok: true, results: arr, count: arr.length };\nreturn msg;","outputs":1,"noerr":0,"x":2575,"y":1260,"wires":[["7f3c436b70327156"]]},{"id":"7f3c436b70327156","type":"link out","z":"92e5dfcb5c3552c2","name":"Worker Return","mode":"return","links":[],"x":2755,"y":1260,"wires":[]},{"id":"5a15ba0489a10be1","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 13","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":490,"y":1160,"wires":[]},{"id":"f6a83708b92761ec","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 14","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":700,"y":1160,"wires":[]},{"id":"088e9ece0a1e107c","type":"debug","z":"92e5dfcb5c3552c2","name":"db","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":780,"y":1320,"wires":[]},{"id":"e72a4595efabe9de","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 17","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":300,"y":1440,"wires":[]},{"id":"f9ffa4cff5e42b6c","type":"function","z":"92e5dfcb5c3552c2","name":"Kürzel-Pfad festlegen","func":"let activeUser = msg.payload.user;\nlet PathMitarbeiter = global.get('PathMitarbeiter') || '';\nmsg.PathKuerzel = `${PathMitarbeiter}/${activeUser}/immo24/immo24-user.json`;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":1460,"wires":[["839a98d79f088090"]]},{"id":"839a98d79f088090","type":"file in","z":"92e5dfcb5c3552c2","name":"immo24-user.json lesen","filename":"PathKuerzel","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":1030,"y":1460,"wires":[["3aa9611b4da07733"]]},{"id":"3aa9611b4da07733","type":"function","z":"92e5dfcb5c3552c2","name":"setze global.activeUserKuerzel","func":"global.set('activeUserKuerzel', msg.payload.trim());\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1290,"y":1460,"wires":[["4d0412ea662244b2"]]},{"id":"d30dfe6c1a9a0ec2","type":"http in","z":"92e5dfcb5c3552c2","name":"","url":"/api/activeUser","method":"get","upload":false,"swaggerDoc":"","x":150,"y":1560,"wires":[["e6e5edd1e7c1104b"]]},{"id":"e6e5edd1e7c1104b","type":"change","z":"92e5dfcb5c3552c2","name":"msg.payload = global.activeUser","rules":[{"t":"set","p":"payload","pt":"msg","to":"activeUser","tot":"global"}],"x":400,"y":1560,"wires":[["eaf345ce67077f77","a404a37370712c0d"]]},{"id":"eaf345ce67077f77","type":"http response","z":"92e5dfcb5c3552c2","name":"200 OK","statusCode":"200","headers":{},"x":620,"y":1560,"wires":[]},{"id":"b323d5d8aaef30c7","type":"change","z":"92e5dfcb5c3552c2","name":"global.activeUser = null","rules":[{"t":"set","p":"activeUserKuerzel","pt":"global","to":"null","tot":"json"}],"x":670,"y":1500,"wires":[["5e9e7b80f7ec109e"]]},{"id":"0c24b8a8ef6115f1","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":760,"y":2000,"wires":[]},{"id":"3b041d48768ccf10","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 8","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":980,"y":1700,"wires":[]},{"id":"a404a37370712c0d","type":"debug","z":"92e5dfcb5c3552c2","name":"ACTUSER","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":560,"y":1600,"wires":[]},{"id":"02a64ed83e42b932","type":"function","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"Globals setzen + Antwort","func":"\nlet ver = global.get('scheme_version');\nif (!ver) { ver = String(Date.now()); global.set('scheme_version', ver); }\nconst data = typeof msg.payload === 'object' && msg.payload ? msg.payload : {};\nif (data.projektordnerSchema !== undefined) global.set('projektordnerSchema', data.projektordnerSchema);\nif (data.sessionSchema !== undefined) global.set('sessionSchema', data.sessionSchema);\nmsg.payload = { data, version: ver };\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1090,"y":500,"wires":[["6b575f053cf737f1","506c4fe8083fcac7"]]},{"id":"0b4443336c7bd8ae","type":"http in","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"","url":"/api/initialize","method":"get","upload":false,"swaggerDoc":"","x":240,"y":2120,"wires":[["abfb2e6ff7c827c4","f53e549a1caa1a0c"]]},{"id":"22c77170bc28046b","type":"http request","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"GET Schema","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://127.0.0.1:59593/api/schema","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":650,"y":2120,"wires":[["3d5bcef0e3e1d8e1","dfa9f04d367b077b"]]},{"id":"7935cf731073a570","type":"http request","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"GET User","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://127.0.0.1:59593/api/user","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":640,"y":2180,"wires":[["3d5bcef0e3e1d8e1","8094f26a5cf99161"]]},{"id":"104b571128586e5f","type":"change","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"schema","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":460,"y":2120,"wires":[["22c77170bc28046b"]]},{"id":"c0aa387d8488293b","type":"change","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"user","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":460,"y":2180,"wires":[["7935cf731073a570"]]},{"id":"3d5bcef0e3e1d8e1","type":"join","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":850,"y":2140,"wires":[["67df1612aa33160e","371415d6fbdf5e40"]]},{"id":"67df1612aa33160e","type":"function","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"Globals setzen, Finalize","func":"// payload vom join: { schema: <obj/ {data:{...}} oder {initialize:{...}} >, user: [...] }\n// ggf. msg.paths aus \"Check path.json\" → \"Set Path Globals & Fan-out\"\n\nconst all = msg.payload || {};\nlet schemaIn = all.schema || {};\nconst user = all.user || [];\n\n// Bestehendes initialize (vom Schema-Endpoint oder Check path) übernehmen\nconst upstreamInit =\n    (schemaIn && typeof schemaIn === \"object\" && schemaIn.initialize && typeof schemaIn.initialize === \"object\")\n        ? schemaIn.initialize\n        : {};\n\n// Schema normalisieren (falls {data:{...}})\nconst schemaObj = (schemaIn && typeof schemaIn === \"object\" && schemaIn.data)\n    ? schemaIn.data\n    : schemaIn;\n\n// Schema-Felder extrahieren als Strings\nconst schemaOut = {\n    sessionSchema: typeof schemaObj?.sessionSchema === \"string\" ? schemaObj.sessionSchema : \"\",\n    projektordnerSchema: typeof schemaObj?.projektordnerSchema === \"string\" ? schemaObj.projektordnerSchema : \"\"\n};\n\n// Paths aus msg.paths ODER aus Globals\nconst fromGlobals = {\n    PathProduktionen: global.get(\"PathProduktionen\") || \"\",\n    PathMitarbeiter: global.get(\"PathMitarbeiter\") || \"\",\n    PathStammdaten: global.get(\"PathStammdaten\") || \"\",\n    PathPTUser: global.get(\"PathPTUser\") || \"\"\n};\nconst paths = (msg.paths && typeof msg.paths === \"object\") ? msg.paths : fromGlobals;\n\n// Eigene Bewertung (nur für Felder, die wir beisteuern)\nconst schemaOK = !!(schemaOut.sessionSchema || schemaOut.projektordnerSchema);\n\n// Initialize zusammenführen – vorhandene Felder aus upstreamInit werden respektiert\nconst initialize = {\n    // Falls upstream etwas gesetzt hat, übernehmen; sonst sinnvolle Defaults\n    paths_json_present: upstreamInit.paths_json_present ?? true,\n    required_keys_ok: upstreamInit.required_keys_ok ?? true,\n\n    // Unser aktueller Stand zum Schema\n    schema_ok: upstreamInit.schema_ok ?? schemaOK,\n\n    // Weitere Felder durchreichen, wenn vorhanden\n    dirs_exist: upstreamInit.dirs_exist ?? null,\n    missingKeys: Array.isArray(upstreamInit.missingKeys) ? upstreamInit.missingKeys : [],\n    emptyKeys: Array.isArray(upstreamInit.emptyKeys) ? upstreamInit.emptyKeys : [],\n    notFoundDirs: upstreamInit.notFoundDirs ?? null,\n\n    // needsUserAction: bleibt true, sobald irgendein Schritt das verlangt\n    needsUserAction: !!upstreamInit.needsUserAction\n};\n\n// === Vorgabe: ready immer true ===\nconst ready = true;\n\n// Globale Flags setzen\ntry { global.set(\"configReady\", ready, \"file\"); } catch { global.set(\"configReady\", ready); }\ntry { global.set(\"configReadyAt\", Date.now(), \"file\"); } catch { global.set(\"configReadyAt\", Date.now()); }\n\n// HTTP-Status immer 200\nmsg.statusCode = 200;\n\n// Antwort zusammensetzen: ready, initialize, paths, schema\nmsg.payload = {\n    ready,\n    initialize,\n    paths,\n    schema: schemaOut\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1050,"y":2120,"wires":[["0b59bc840a6c75b4","f850bc0fb4445945"]]},{"id":"0b59bc840a6c75b4","type":"http response","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"","statusCode":"","headers":{},"x":1290,"y":2120,"wires":[]},{"id":"f850bc0fb4445945","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 25","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1260,"y":2220,"wires":[]},{"id":"2c2fc7116e19afc6","type":"debug","z":"92e5dfcb5c3552c2","g":"e26be10f69baa19a","name":"PUT PATH","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":320,"y":220,"wires":[]},{"id":"dfc5ab4c5825958b","type":"debug","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"PUT SCHEMA","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":460,"y":540,"wires":[]},{"id":"6a158b47a9a44d52","type":"file in","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":520,"y":2300,"wires":[["26e136e20196659a","3bbddc1103541fb2"]]},{"id":"abfb2e6ff7c827c4","type":"function","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"Pfad setzen","func":"// Function-Node (Sandbox) → KEIN process.env!\n// Richtig: env.get('IMMO24_USERDATA')\nconst base =\n    env.get('IMMO24_USERDATA') ||\n    global.get('IMMO24_USERDATA') ||   // Fallback, falls du es global setzt\n    '';\n\nif (!base) {\n    // optionales Logging hilft beim Debuggen\n    node.warn('IMMO24_USERDATA ist leer – verwende Fallback im UserData-Verzeichnis?');\n    // Wenn du willst, kannst du hier noch einen Default setzen:\n    // msg.filename = '/tmp/path.json'; return msg;\n}\n\nmsg.filename = base + '/path.json';\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":2300,"wires":[["6a158b47a9a44d52","37482b60c823466e"]]},{"id":"26e136e20196659a","type":"function","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"Check path.json","func":"// OUTPUTS: [ OK-Weiterleitung, Early-FAIL-Response ]\n\nfunction isPlainObject(v) {\n    return v !== null && typeof v === \"object\" && !Array.isArray(v);\n}\n\nlet parsed = null;\ntry {\n    parsed = msg.payload ? JSON.parse(msg.payload) : null;\n} catch {\n    parsed = null; // kaputte JSON => wie leer behandeln\n}\n\nlet paths = isPlainObject(parsed) && isPlainObject(parsed.data) ? parsed.data : parsed;\n\n// ungültig/leeres Objekt?\nconst isEmptyOrInvalid = !isPlainObject(paths) || Object.keys(paths).length === 0;\n\nconst requiredPathKeys = [\"PathProduktionen\", \"PathMitarbeiter\"];\nconst missingKeys = isEmptyOrInvalid ? requiredPathKeys : requiredPathKeys.filter(k => !(k in paths));\nconst emptyKeys = isEmptyOrInvalid ? requiredPathKeys : requiredPathKeys.filter(k => typeof paths[k] !== \"string\" || paths[k].trim() === \"\");\n\nconst requiredKeysOk = !isEmptyOrInvalid && missingKeys.length === 0 && emptyKeys.length === 0;\n\nif (isEmptyOrInvalid || !requiredKeysOk) {\n    const initialize = {\n        paths_json_present: !isEmptyOrInvalid,\n        required_keys_ok: requiredKeysOk,\n        schema_ok: false,\n        dirs_exist: null,\n        missingKeys,\n        emptyKeys,\n        notFoundDirs: null,\n        needsUserAction: true\n    };\n\n    global.set(\"configReady\", false);\n    global.set(\"configReadyAt\", Date.now());\n\n    // WICHTIG: bestehendes msg wiederverwenden!\n    msg.statusCode = 503;\n    msg.payload = { ready: true, initialize };\n    return [null, msg]; // Out2 -> http response\n}\n\n// OK → Pfade weiterreichen\nmsg.paths = paths;\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":2300,"wires":[["ccab7051afe7c5f9","3c02b3520300b376"],["0b59bc840a6c75b4","57c334d6f88aa377"]],"outputLabels":["Ok","Abbruch"]},{"id":"3bbddc1103541fb2","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":670,"y":2440,"wires":[]},{"id":"57c334d6f88aa377","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"FAIL","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":880,"y":2340,"wires":[]},{"id":"ccab7051afe7c5f9","type":"function","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"Set Path Globals & Fan-out","func":"// Erwartet: msg.paths = validiertes, normalisiertes Paths-Objekt (aus \"Check path.json\")\n// Wirkung: setzt die Global-Variablen synchron, dann gleicher msg weiter\n\nconst paths = msg.paths || {};\nconst set = (k, v) => { try { global.set(k, v, \"file\"); } catch { global.set(k, v); } };\n\n// Nur setzen, was existiert\nif (paths.PathProduktionen) set(\"PathProduktionen\", paths.PathProduktionen);\nif (paths.PathMitarbeiter) set(\"PathMitarbeiter\", paths.PathMitarbeiter);\nif (paths.PathStammdaten) set(\"PathStammdaten\", paths.PathStammdaten);\nif (paths.PathPTUser) set(\"PathPTUser\", paths.PathPTUser);\n\n// Optional hilfreiche Flags/Logs\nset(\"configReady\", false); // noch nicht fertig – Schema fehlt ja noch\nset(\"configReadyAt\", Date.now());\n\n// WICHTIG: denselben msg weitergeben (HTTP-Kopplung erhalten)\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":2240,"wires":[["104b571128586e5f","c0aa387d8488293b","e8cb1eed06d4aec7"]]},{"id":"2b04c4bfa896aa7c","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 12","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2220,"y":1700,"wires":[]},{"id":"f12d625b1efdeba0","type":"function","z":"92e5dfcb5c3552c2","name":"Leer Abbruch","func":"// Out1 = normal weiter (es gibt Ordner)\n// Out2 = sofort [] zurück (keine Ordner) – gleiches msg behalten!\nif (!Array.isArray(msg.payload) || msg.payload.length === 0) {\n    msg.payload = [];\n    return [null, msg];   // <— gleiches msg!\n}\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1920,"y":1740,"wires":[["8ce945730cd5d01d"],["61816f910386b34c"]],"outputLabels":["Ok","Abbruch"]},{"id":"135b0f9e7062482a","type":"function","z":"92e5dfcb5c3552c2","name":"Leer Abbruch","func":"// Out1 = normal weiter (nicht leer)\n// Out2 = sofort [] zurück (leer) – WICHTIG: dasselbe msg weiterreichen!\nif (!Array.isArray(msg.payload) || msg.payload.length === 0) {\n    msg.payload = [];\n    return [null, msg];   // <— nicht { payload: [] }, sondern dasselbe msg!\n}\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1280,"y":1640,"wires":[["b9e241fc311d4a8e"],["61816f910386b34c"]],"outputLabels":["Ok","Abbruch"]},{"id":"cbb4b8942696bb9d","type":"fs-ops-mkdir","z":"92e5dfcb5c3552c2","name":"Pro Tools Ordner anlegen","path":"dir","pathType":"msg","dirname":"payload","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":2610,"y":1340,"wires":[[]]},{"id":"cfde9cbf7130a7bb","type":"function","z":"92e5dfcb5c3552c2","name":"PT Modul aktiv?","func":"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":1340,"wires":[["202dfb827bd90aa1"]]},{"id":"202dfb827bd90aa1","type":"function","z":"92e5dfcb5c3552c2","name":"Ordnerliste","func":"\nmsg.payload = [\n    \"clipeffectspresets\",\n    \"fadepresets\",\n    \"keyboardshortcuts\",\n    \"memorylocationpresets\",\n    \"pluginsettings\",\n    \"templates\",\n    \"trackdatapresets\",\n    \"trackdatarecallpresets\",\n    \"trackpresets\"\n];\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2190,"y":1340,"wires":[["dfe946a1c6b4afd3"]]},{"id":"dfe946a1c6b4afd3","type":"split","z":"92e5dfcb5c3552c2","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":2370,"y":1340,"wires":[["cbb4b8942696bb9d"]]},{"id":"f53e549a1caa1a0c","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 15","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":440,"y":2080,"wires":[]},{"id":"3dcdb1f1d4539178","type":"fs-ops-access","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"schemes.json vorhanden?","path":"","pathType":"str","filename":"filename","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":740,"y":380,"wires":[["8fabcb73dec928c3"],["148040fcc730ca47"]]},{"id":"148040fcc730ca47","type":"function","z":"92e5dfcb5c3552c2","g":"81c6e148c989ba15","name":"Schema fehlt","func":"// schema fehlt → sofortige Fehlerantwort\nmsg.statusCode = 404;\nmsg.payload = {\n    data: {},\n    version: null,\n    initialize: {\n        paths_json_present: true,   // Pfade waren da\n        required_keys_ok: true,     // Pfade ok\n        schema_ok: false,           // aber kein Schema\n        dirs_exist: null,\n        missingKeys: [],\n        emptyKeys: [],\n        notFoundDirs: null,\n        needsUserAction: true       // <--- wichtig\n    }\n};\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":400,"wires":[["6b575f053cf737f1"]]},{"id":"877d69b3951bac0d","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 10","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":890,"y":1660,"wires":[]},{"id":"37482b60c823466e","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 22","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":430,"y":2380,"wires":[]},{"id":"e8cb1eed06d4aec7","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 26","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1190,"y":2300,"wires":[]},{"id":"371415d6fbdf5e40","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 27","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":910,"y":2080,"wires":[]},{"id":"dfa9f04d367b077b","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 28","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":710,"y":2080,"wires":[]},{"id":"8094f26a5cf99161","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 29","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":710,"y":2220,"wires":[]},{"id":"45276387807e7873","type":"debug","z":"92e5dfcb5c3552c2","name":"debug 30","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1070,"y":1600,"wires":[]},{"id":"3c02b3520300b376","type":"debug","z":"92e5dfcb5c3552c2","g":"682d5ba9e57c89d0","name":"debug 32","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1050,"y":2320,"wires":[]},{"id":"c7c63d9da47f6330","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Kunde hinzufügen","func":"// Erwartet: msg.payload = { kunde: \"Name\" }\n// Liest bestehende Kunden aus dem Flow-Kontext, ergänzt bei Erfolg und liefert JSON-String zurück.\n\n// 1) Eingabe validieren\nconst body = msg.payload && typeof msg.payload === 'object' ? msg.payload : {};\nconst nameRaw = (body.kunde || '').trim();\n\nif (!nameRaw) {\n    msg.statusCode = 400;                    // Bad Request\n    msg.payload = { error: 'kunde fehlt' };\n    msg.topic = 'error';\n    return [null, msg];                      // → Fehler-Output\n}\n\n// 2) Bestehende Liste holen\nlet kunden = flow.get('kundenStammdaten') || [];\n\n// 3) Duplikat-Check (case-insensitive)\nconst exists = kunden.some(k => (k.kunde || '').trim().toLowerCase() === nameRaw.toLowerCase());\nif (exists) {\n    msg.statusCode = 409;                    // Conflict\n    msg.payload = { error: 'Kunde existiert bereits' };\n    msg.topic = 'error';\n    return [null, msg];                      // → Fehler-Output\n}\n\n// 4) Neuen Kunden einfügen\nconst neuerKunde = { kunde: nameRaw, ordner: [] };\nkunden.push(neuerKunde);\n\n// 5) Liste im Flow aktualisieren (optional, falls du das woanders machst, kannst du’s weglassen)\n// flow.set('kundenStammdaten', kunden);\n\n// 6) Für File-Write vorbereiten & Metadaten setzen\nmsg.payload = JSON.stringify(kunden, null, 2);\nmsg.topic = 'ok';\nmsg.neukunde = neuerKunde;\nmsg.statusCode = 201;                      // Created (falls direkt an HTTP Response)\n\nreturn [msg, null];                        // → Erfolg-Output","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":490,"y":1400,"wires":[["f322ce6d99617ac1","67af028cf4902c3b"],["eab2a44bcc617ca6"]],"outputLabels":["Kunde anlegen","Fehler: Kunde vorhanden"]},{"id":"06890dbd0ddb32d1","type":"file","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"kunden_stammdaten.json schreiben","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"utf8","x":1150,"y":1400,"wires":[["20e99138b5cd274c","41d72cc3699da9b1"]]},{"id":"f322ce6d99617ac1","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Stammdaten Verzeichnis","func":"msg.filename = global.get('PathStammdaten') + \"/kunden_stammdaten.json\";\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":1400,"wires":[["06890dbd0ddb32d1"]]},{"id":"67af028cf4902c3b","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"PathProduktionen abfragen","func":"msg.payload = global.get('PathProduktionen');\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1320,"y":1260,"wires":[["c1a5bf97fed12c8e"]]},{"id":"c1a5bf97fed12c8e","type":"fs-ops-dir","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Ordner abfragen","path":"payload","pathType":"msg","filter":"","filterType":"str","dir":"files","dirType":"msg","x":1560,"y":1260,"wires":[["84aaa7768b35b614"]]},{"id":"84aaa7768b35b614","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Ordner filtern","func":"// msg.files = Liste aller Ordnernamen (Strings), msg.neukunde.kunde = gewünschter Name\nconst wanted = (msg.neukunde.kunde || '').toLowerCase();\nconst found = (msg.files || []).some(dir => dir.toLowerCase() === wanted);\n\nif (found) {\n    msg.payload = \"Achtung: Ordner existiert bereits (ggf. mit anderer Groß-/Kleinschreibung)!\";\n    return [null, msg]; // Output 2: Info\n} else {\n    msg.payload = global.get('PathProduktionen') + '/' + msg.neukunde.kunde;\n    return [msg, null]; // Output 1: Ordner anlegen\n}\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":1260,"wires":[["16c39c9787c5e86a"],[]],"outputLabels":["Kundenordner anlegen","Kundenordner bereits vorhanden"]},{"id":"16c39c9787c5e86a","type":"fs-ops-mkdir","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Kundenordner anlegen","path":"","pathType":"str","dirname":"payload","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1940,"y":1220,"wires":[[]]},{"id":"0b27b340710ad717","type":"http in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","url":"/api/pb/customers","method":"get","upload":false,"swaggerDoc":"","x":220,"y":1360,"wires":[["61a3214f46913f99"]]},{"id":"61a3214f46913f99","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Stammdaten-Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":490,"y":1360,"wires":[["982aee71ef376314"]]},{"id":"982aee71ef376314","type":"file in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":720,"y":1360,"wires":[["6081010839cfde97"]]},{"id":"6081010839cfde97","type":"json","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","property":"payload","action":"","pretty":false,"x":890,"y":1360,"wires":[["68315e4aba959bdb"]]},{"id":"68315e4aba959bdb","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1050,"y":1360,"wires":[]},{"id":"cb039b699fc21347","type":"http in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","url":"/api/pb/customers","method":"post","upload":false,"swaggerDoc":"","x":230,"y":1400,"wires":[["c7c63d9da47f6330"]]},{"id":"e287150e58beba8a","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1590,"y":1320,"wires":[]},{"id":"20e99138b5cd274c","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Status","func":"msg.statusCode = 201;\nmsg.payload = { ok: true };\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1450,"y":1320,"wires":[["e287150e58beba8a"]]},{"id":"eab2a44bcc617ca6","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":690,"y":1420,"wires":[]},{"id":"ba32e21ec53a2058","type":"http in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","url":"/api/pb/customers/:kunde","method":"delete","upload":false,"swaggerDoc":"","x":260,"y":1440,"wires":[["ece0d0ac8ed6cace"]]},{"id":"ece0d0ac8ed6cace","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Stammdaten-Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":1440,"wires":[["30980fd66698fc76"]]},{"id":"30980fd66698fc76","type":"file in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":760,"y":1440,"wires":[["ea6f8b41f86d94b7"]]},{"id":"558546a2166b9fc4","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Kunde loeschen","func":"const param = (msg.req.params.kunde || '').trim();\nif (!param) { msg.statusCode = 400; msg.payload = { error: 'kunde fehlt' }; return [null, msg]; }\n\nlet arr = Array.isArray(msg.payload) ? msg.payload : [];\nconst before = arr.length;\narr = arr.filter(k => (k.kunde || '').toLowerCase() !== param.toLowerCase());\nif (arr.length === before) { msg.statusCode = 404; msg.payload = { error: 'nicht gefunden' }; return [null, msg]; }\n\nmsg.payload = JSON.stringify(arr, null, 2);\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":1440,"wires":[["6def80d52e32e182"],["7420c56cee57c5d7"]],"outputLabels":["Speichern","Fehler"]},{"id":"6def80d52e32e182","type":"file","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"kunden_stammdaten.json schreiben","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"utf8","x":1450,"y":1440,"wires":[["5e6494b51e4bbbe6"]]},{"id":"5e6494b51e4bbbe6","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1610,"y":1420,"wires":[]},{"id":"7420c56cee57c5d7","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1310,"y":1460,"wires":[]},{"id":"a3e6ebddc5560381","type":"http in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","url":"/api/pb/customers/:kunde/folders","method":"get","upload":false,"swaggerDoc":"","x":270,"y":1500,"wires":[["935f3405d1b6c545"]]},{"id":"ea6f8b41f86d94b7","type":"json","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","property":"payload","action":"","pretty":false,"x":930,"y":1440,"wires":[["558546a2166b9fc4"]]},{"id":"935f3405d1b6c545","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Stammdaten-Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":1500,"wires":[["8873ff9592fb74b5"]]},{"id":"8873ff9592fb74b5","type":"file in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":780,"y":1500,"wires":[["6498337a42ac4708"]]},{"id":"6498337a42ac4708","type":"json","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","property":"payload","action":"","pretty":false,"x":950,"y":1500,"wires":[["178729bcb1696a28"]]},{"id":"178729bcb1696a28","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Ordnerliste","func":"const name = (msg.req.params.kunde || '').toLowerCase();\nconst arr = Array.isArray(msg.payload) ? msg.payload : [];\nconst k = arr.find(x => (x.kunde || '').toLowerCase() === name);\nif (!k) { msg.statusCode = 404; msg.payload = { error: 'kunde nicht gefunden' }; return msg; }\nmsg.payload = Array.isArray(k.ordner) ? k.ordner : [];\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":1500,"wires":[["ff0ec88e1758989e"]]},{"id":"ff0ec88e1758989e","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1270,"y":1500,"wires":[]},{"id":"c2fdd508c29a6e17","type":"http in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","url":"/api/pb/customers/:kunde/folders","method":"post","upload":false,"swaggerDoc":"","x":270,"y":1540,"wires":[["84efea7c0d88ffb7"]]},{"id":"84efea7c0d88ffb7","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Stammdaten-Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":1540,"wires":[["20521b5881333392"]]},{"id":"20521b5881333392","type":"file in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":780,"y":1540,"wires":[["c509de18850164b0"]]},{"id":"c509de18850164b0","type":"json","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","property":"payload","action":"","pretty":false,"x":950,"y":1540,"wires":[["dd02220b3b926222"]]},{"id":"dd02220b3b926222","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Ordner hinzufügen, Duplikate prüfen","func":"// expects: msg.req.params.kunde, msg.payload (array aus datei), msg.req.body {name,label,ist_Produktionsstufe}\n\nconst kundeParam = (msg.req.params.kunde || '').trim().toLowerCase();\nconst body = msg.req.body || {};\nconst name = (body.name || '').trim();\nconst label = (body.label || '').trim();\nconst flag = !!body.ist_Produktionsstufe;\n\nif (!kundeParam) {\n    msg.statusCode = 400; msg.payload = { error: 'kunde fehlt' }; return [null, msg];\n}\nif (!name) {\n    msg.statusCode = 400; msg.payload = { error: 'name fehlt' }; return [null, msg];\n}\n\nlet arr = Array.isArray(msg.payload) ? msg.payload : [];\nconst k = arr.find(x => (x.kunde || '').toLowerCase() === kundeParam);\nif (!k) { msg.statusCode = 404; msg.payload = { error: 'kunde nicht gefunden' }; return [null, msg]; }\n\nk.ordner = Array.isArray(k.ordner) ? k.ordner : [];\nconst exists = k.ordner.some(o => (o.name || '').trim().toLowerCase() === name.toLowerCase());\nif (exists) { msg.statusCode = 409; msg.payload = { error: 'Ordnername existiert bereits' }; return [null, msg]; }\n\nk.ordner.push({ name, label, ist_Produktionsstufe: flag });\n\nmsg.payload = JSON.stringify(arr, null, 2);\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1190,"y":1540,"wires":[["f079b5a2de22c71a"],["6a60c6a3a31b9730"]],"outputLabels":["Speichern","Fehler"]},{"id":"81aa04d0874e7fc1","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"201 ok","func":"msg.statusCode = 201;\nmsg.payload = { ok: true };\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":1520,"wires":[["54a0892021b03209"]]},{"id":"54a0892021b03209","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1890,"y":1520,"wires":[]},{"id":"6a60c6a3a31b9730","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1430,"y":1560,"wires":[]},{"id":"2a975bed9f1c26f8","type":"http in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","url":"/api/pb/customers/:kunde/folders/:name","method":"put","upload":false,"swaggerDoc":"","x":290,"y":1620,"wires":[["73132ec65021d6c8"]]},{"id":"73132ec65021d6c8","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Stammdaten-Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":1620,"wires":[["86e19856caed2870"]]},{"id":"86e19856caed2870","type":"file in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":800,"y":1620,"wires":[["074a3033d0cdef60"]]},{"id":"074a3033d0cdef60","type":"json","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","property":"payload","action":"","pretty":false,"x":970,"y":1620,"wires":[["be22b8537011645a"]]},{"id":"be22b8537011645a","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Ordner aktualisieren, Konflikte prüfen","func":"const kundeParam = (msg.req.params.kunde || '').trim().toLowerCase();\nconst oldName = (msg.req.params.name || '').trim().toLowerCase();\nconst body = msg.req.body || {};\nconst newName = (body.name || '').trim();\nconst label = (body.label || '').trim();\nconst flag = !!body.ist_Produktionsstufe;\n\nif (!kundeParam || !oldName) {\n    msg.statusCode = 400; msg.payload = { error: 'kunde oder alter name fehlt' }; return [null, msg];\n}\nif (!newName) {\n    msg.statusCode = 400; msg.payload = { error: 'neuer name fehlt' }; return [null, msg];\n}\n\nlet arr = Array.isArray(msg.payload) ? msg.payload : [];\nconst k = arr.find(x => (x.kunde || '').toLowerCase() === kundeParam);\nif (!k) { msg.statusCode = 404; msg.payload = { error: 'kunde nicht gefunden' }; return [null, msg]; }\n\nk.ordner = Array.isArray(k.ordner) ? k.ordner : [];\nconst idxOld = k.ordner.findIndex(o => (o.name || '').trim().toLowerCase() === oldName);\nif (idxOld < 0) { msg.statusCode = 404; msg.payload = { error: 'ordner (alt) nicht gefunden' }; return [null, msg]; }\n\n// Wenn Name geändert wird: Duplikate prüfen\nconst isRename = newName.toLowerCase() !== oldName;\nif (isRename) {\n    const conflict = k.ordner.some((o, i) =>\n        i !== idxOld && (o.name || '').trim().toLowerCase() === newName.toLowerCase()\n    );\n    if (conflict) { msg.statusCode = 409; msg.payload = { error: 'Ordnername existiert bereits' }; return [null, msg]; }\n}\n\n// Update\nk.ordner[idxOld] = { name: newName, label, ist_Produktionsstufe: flag };\n\nmsg.payload = JSON.stringify(arr, null, 2);\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1210,"y":1620,"wires":[["9cbe00b36e920c42"],["c6f16956f997e7af"]],"outputLabels":["Speichern","Fehler"]},{"id":"fb011e055c200531","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"204 ok","func":"msg.statusCode = 204;\nmsg.payload = { ok: true };\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":1600,"wires":[["1e540ddc04291a32"]]},{"id":"c6f16956f997e7af","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1430,"y":1640,"wires":[]},{"id":"1e540ddc04291a32","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1910,"y":1600,"wires":[]},{"id":"48e33377f76de751","type":"http in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","url":"/api/pb/customers/:kunde/folders/:name","method":"delete","upload":false,"swaggerDoc":"","x":300,"y":1660,"wires":[["f05fc0e58ddcff85"]]},{"id":"f05fc0e58ddcff85","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Stammdaten-Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":1660,"wires":[["3d1947c407ecb362"]]},{"id":"3d1947c407ecb362","type":"file in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":820,"y":1660,"wires":[["a3cd16f95075bd4a"]]},{"id":"a3cd16f95075bd4a","type":"json","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","property":"payload","action":"","pretty":false,"x":990,"y":1660,"wires":[["e75a53394b693fa8"]]},{"id":"e75a53394b693fa8","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Ordner entfernen","func":"const kundeParam = (msg.req.params.kunde || '').trim().toLowerCase();\nconst nameParam = (msg.req.params.name || '').trim().toLowerCase();\nif (!kundeParam || !nameParam) { msg.statusCode = 400; msg.payload = { error: 'kunde oder name fehlt' }; return [null, msg]; }\n\nlet arr = Array.isArray(msg.payload) ? msg.payload : [];\nconst k = arr.find(x => (x.kunde || '').toLowerCase() === kundeParam);\nif (!k) { msg.statusCode = 404; msg.payload = { error: 'kunde nicht gefunden' }; return [null, msg]; }\n\nk.ordner = Array.isArray(k.ordner) ? k.ordner : [];\nconst before = k.ordner.length;\nk.ordner = k.ordner.filter(o => (o.name || '').trim().toLowerCase() !== nameParam);\n\nif (k.ordner.length === before) {\n    msg.statusCode = 404; msg.payload = { error: 'ordner nicht gefunden' }; return [null, msg];\n}\n\nmsg.payload = JSON.stringify(arr, null, 2);\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":1700,"wires":[["484c35d9dc6013e8"],["6850eb948f460b8c"]],"outputLabels":["Speichern","Fehler"]},{"id":"658b042552cc1076","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"204 ok","func":"msg.statusCode = 204;\nmsg.payload = { ok: true };\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":1700,"wires":[["d925a649ad7c9ebc"]]},{"id":"6850eb948f460b8c","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1330,"y":1740,"wires":[]},{"id":"d925a649ad7c9ebc","type":"http response","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"","statusCode":"","headers":{},"x":1890,"y":1700,"wires":[]},{"id":"9cbe00b36e920c42","type":"file","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"kunden_stammdaten.json schreiben","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"utf8","x":1530,"y":1600,"wires":[["fb011e055c200531"]]},{"id":"484c35d9dc6013e8","type":"file","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"kunden_stammdaten.json schreiben","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"utf8","x":1490,"y":1700,"wires":[["658b042552cc1076"]]},{"id":"f079b5a2de22c71a","type":"file","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"kunden_stammdaten.json schreiben","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"utf8","x":1530,"y":1520,"wires":[["81aa04d0874e7fc1"]]},{"id":"36ed84ccc9d35759","type":"http in","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"","url":"/api/pb/snapshot","method":"get","upload":false,"skipBodyParsing":false,"swaggerDoc":"","x":230,"y":1760,"wires":[["75c5fbafa4446ee5","7f40bd72d3f44bbc"]]},{"id":"75c5fbafa4446ee5","type":"function","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":1780,"wires":[["cd99fbc23bfa41b0"]]},{"id":"cd99fbc23bfa41b0","type":"fs-ops-access","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"existiert Datei?","path":"","pathType":"str","filename":"filename","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":630,"y":1780,"wires":[["3d38c4563478a24c"],["7bebdb3370022b2f"]]},{"id":"3d38c4563478a24c","type":"file in","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"lesen (utf8)","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":true,"x":830,"y":1780,"wires":[["b37885c9be6e0c33"]]},{"id":"b37885c9be6e0c33","type":"json","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"parse","property":"payload","action":"","pretty":false,"x":1000,"y":1780,"wires":[["25b39abb2c577e54"]]},{"id":"7bebdb3370022b2f","type":"function","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Fallback: []","func":"msg.payload = [];\nreturn msg;","outputs":1,"noerr":0,"x":830,"y":1820,"wires":[["25b39abb2c577e54"]]},{"id":"25b39abb2c577e54","type":"function","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Version anhängen (global)","func":"let ver = global.get('pb_version');\nif (!ver) { ver = String(Date.now()); global.set('pb_version', ver); }\nmsg.payload = { customers: Array.isArray(msg.payload) ? msg.payload : [], version: ver };\nreturn msg;","outputs":1,"noerr":0,"x":1220,"y":1800,"wires":[["20d6df6b06396c8d"]]},{"id":"20d6df6b06396c8d","type":"http response","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"200","statusCode":"","headers":{},"x":1420,"y":1800,"wires":[]},{"id":"b49b21837662227a","type":"http in","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"","url":"/api/pb/snapshot","method":"put","upload":false,"skipBodyParsing":false,"swaggerDoc":"","x":230,"y":1900,"wires":[["00aa34757e5184b5","aa99e61cb52b1c59"]]},{"id":"00aa34757e5184b5","type":"function","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Body parsen + prüfen","func":"function safeParse(x){\n  if (x == null) return null;\n  if (Buffer.isBuffer(x)) { try { return JSON.parse(x.toString('utf8')); } catch { return null; } }\n  if (typeof x === 'string') { try { return JSON.parse(x); } catch { return null; } }\n  if (typeof x === 'object') return x;\n  return null;\n}\nconst body = safeParse(msg.payload);\nif (!body || !Array.isArray(body.customers) || typeof body.version !== 'string') {\n  msg.statusCode = 400;\n  msg.payload = { error: 'bad_payload' };\n  return [null, msg];\n}\nmsg.body = { customers: body.customers, version: body.version };\nreturn [msg, null];","outputs":2,"noerr":0,"x":450,"y":1900,"wires":[["e7ccf4e57b055790"],["20a9d9b4af147904"]]},{"id":"20a9d9b4af147904","type":"http response","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"400 bad payload","statusCode":"400","headers":{},"x":690,"y":1940,"wires":[]},{"id":"e7ccf4e57b055790","type":"function","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":1900,"wires":[["2e2a317d13f0f6ff"]]},{"id":"2e2a317d13f0f6ff","type":"function","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Version vergleichen (global)","func":"const currentVersion = global.get('pb_version') || '0';\nconst clientVersion  = String(msg.body?.version || '');\nif (clientVersion !== currentVersion) {\n  msg.statusCode = 409;\n  msg.payload = { error: 'version_conflict', currentVersion };\n  return [null, msg];\n}\nconst next = Array.isArray(msg.body.customers) ? msg.body.customers : [];\nmsg.payload = JSON.stringify(next, null, 2);\nmsg.nextVersion = String(Date.now());\nreturn [msg, null];","outputs":2,"noerr":0,"x":930,"y":1900,"wires":[["a00da8a35639dbd8","24d85613a2d37961"],["476e40734497434f"]]},{"id":"476e40734497434f","type":"http response","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"409 conflict","statusCode":"409","headers":{},"x":1150,"y":1940,"wires":[]},{"id":"24d85613a2d37961","type":"file","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"schreiben (overwrite)","filename":"filename","filenameType":"msg","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"utf8","x":1180,"y":1900,"wires":[["a4f9ae49b73f0cd9"]]},{"id":"a4f9ae49b73f0cd9","type":"function","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"200 + neue Version setzen","func":"if (msg.nextVersion) { global.set('pb_version', msg.nextVersion); }\nmsg.statusCode = 200;\nmsg.payload = { ok: true, version: global.get('pb_version') || '0' };\nreturn msg;","outputs":1,"noerr":0,"x":1430,"y":1900,"wires":[["689c9849faf696d0"]]},{"id":"689c9849faf696d0","type":"http response","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"200 ok","statusCode":"200","headers":{},"x":1630,"y":1900,"wires":[]},{"id":"b04e57b948e77106","type":"http in","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","url":"/api/projektanlage/templates","method":"get","upload":false,"swaggerDoc":"","x":280,"y":380,"wires":[["899e35cf49d5ba54"]]},{"id":"899e35cf49d5ba54","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Template Pfad setzen","func":"let PathMitarbeiter = global.get('PathMitarbeiter');\nlet activeUser = global.get('activeUser');\nmsg.dir = `${PathMitarbeiter}/${activeUser}/immo24/templates/`;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":380,"wires":[["8ca467f1f76f9a4d"]]},{"id":"8ca467f1f76f9a4d","type":"fs-ops-dir","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Templates lesen","path":"dir","pathType":"msg","filter":"*.ptxt","filterType":"str","dir":"payload","dirType":"msg","x":760,"y":380,"wires":[["86131ee14f613e3e","c5fffcd9f46b8088"]]},{"id":"86131ee14f613e3e","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Array filtern","func":"msg.options = msg.payload.map(e => ({ label: e, value: e }));\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":380,"wires":[["68d4f6662ecbfeb3"]]},{"id":"68d4f6662ecbfeb3","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":1070,"y":380,"wires":[]},{"id":"175a674c11285c85","type":"http in","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","url":"/api/projektanlage/projekte","method":"post","upload":false,"swaggerDoc":"","x":270,"y":640,"wires":[["6c009de142b00a69","fae7008938358c26"]]},{"id":"a5b3212ee0a897af","type":"http in","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","url":"/api/projektanlage/launchpt","method":"post","upload":false,"swaggerDoc":"","x":280,"y":820,"wires":[["0a7761f43773cf50"]]},{"id":"1d2f2c031ccf07cb","type":"OS","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","x":670,"y":820,"wires":[["8f60e803a9417da9"]]},{"id":"530d5ce378abe4a4","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Befehle je nach OS","func":"let fullPath = msg.filename;\nif (msg.payload.platform === \"win32\") {\n    fullPath = fullPath.replace(/\\//g, \"\\\\\");\n    msg.command = 'start \"\" \"' + fullPath + '\"';\n} else if (msg.payload.platform === \"darwin\") {\n    msg.command = 'open \"' + fullPath + '\"';\n} else {\n    msg.command = \"echo OS nicht unterstützt\";\n}\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1050,"y":820,"wires":[["45b8aaec67b9454d"]]},{"id":"45b8aaec67b9454d","type":"exec","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","command":"","addpay":"command","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"Pro Tools öffnen","x":1250,"y":820,"wires":[["25db702b7507e6dd"],[],[]]},{"id":"8f60e803a9417da9","type":"delay","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":840,"y":820,"wires":[["530d5ce378abe4a4"]]},{"id":"6c009de142b00a69","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Pflichtfelder + Vorbereitung","func":"// Body sicher holen: bevorzugt msg.payload, Fallback req.body\nconst b = (msg.payload && typeof msg.payload === \"object\")\n    ? msg.payload\n    : (msg.req && msg.req.body) || {};\n\nconst fehlende = [];\n[\"kunde\", \"datum\", \"moid\", \"projektname\", \"stufe\", \"template\"].forEach(k => { if (!b[k]) fehlende.push(k); });\nif (fehlende.length) {\n    msg.statusCode = 400;\n    msg.payload = { error: \"missing fields\", fields: fehlende };\n    return [null, msg];\n}\n\n// Globals\nconst PathProduktionen = global.get(\"PathProduktionen\") || \"\";\nconst PathMitarbeiter = global.get(\"PathMitarbeiter\") || \"\";\nconst activeUser = global.get(\"activeUser\") || \"\";\nconst projektordnerSchema = global.get(\"projektordnerSchema\") || \"\";\nconst kundenStammdaten = global.get(\"kundenStammdaten\") || [];\nmsg.sessionSchema = global.get(\"sessionSchema\") || \"{{projektname}} {{moid}} - {{produktionsstufe}} {{benutzer}} {{version}}\";\n\n// Ordnername aus Schema\nconst values = {\n    datum: b.datum, projektname: b.projektname, moid: b.moid,\n    benutzer: (global.get(\"activeUserKuerzel\") || \"\"), kunde: b.kunde\n};\nconst projektOrdner = projektordnerSchema.replace(/{{(\\w+)}}/g, (_, k) => values[k] || \"\");\nconst zielPfad = `${PathProduktionen}/${b.kunde}/${projektOrdner}`;\n\n// Unterordner & Label\nconst kundeObj = (kundenStammdaten || []).find(k => k.kunde === b.kunde) || {};\nconst unterordner = Array.isArray(kundeObj.ordner) ? kundeObj.ordner : [];\nconst stufeObj = unterordner.find(o => o.name === b.stufe);\nconst stufeLabel = stufeObj ? stufeObj.label : b.stufe;\n\n// Template-Pfade\nmsg.templateSource = `${PathMitarbeiter}/${activeUser}/immo24/templates/${b.template}`;\nmsg.templateDest = `${zielPfad}/${b.stufe}`;\n\n// persist\nmsg.data = { ...b, stufeLabel, zielPfad, unterordner };\nmsg.filename = `${zielPfad}/immo24-proj.json`;\nmsg.payload = zielPfad; // für fs-ops-access\nreturn [msg, null];\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":640,"wires":[["465673bffca4e0d2"],["a077f771503b109f"]],"outputLabels":["access","error"]},{"id":"465673bffca4e0d2","type":"fs-ops-access","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Duplikate prüfen","path":"","pathType":"str","filename":"payload","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":770,"y":620,"wires":[["33e7012a8455dcea","fdda2860dcf92acb"],["a5cbafaa75b73c7c"]]},{"id":"33e7012a8455dcea","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Dupl. error","func":"msg.statusCode = 409;\nmsg.payload = { error: \"project exists\", zielPfad: msg.payload };\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":600,"wires":[["1301b6fbc4bf55ad"]]},{"id":"a5cbafaa75b73c7c","type":"fs-ops-mkdir","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Projektordner anlegen","path":"","pathType":"str","dirname":"data.zielPfad","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":980,"y":640,"wires":[["03462b00bd70668a"]]},{"id":"a077f771503b109f","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":730,"y":660,"wires":[]},{"id":"03462b00bd70668a","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"JSON formatieren","func":"const d = msg.data;\nmsg.filename = `${d.zielPfad}/immo24-proj.json`;\nmsg.payload = JSON.stringify({\n    erstellt_am: d.datum,\n    kunde: d.kunde,\n    projektname: d.projektname,\n    mo_id: d.moid,\n    user: global.get('activeUser')\n}, null, 2);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1190,"y":640,"wires":[["08f8137fd2a41a4d"]]},{"id":"1301b6fbc4bf55ad","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":1090,"y":600,"wires":[]},{"id":"08f8137fd2a41a4d","type":"file","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"immo24-proj.json schreiben","filename":"filename","filenameType":"msg","appendNewline":true,"createDir":false,"overwriteFile":"true","encoding":"utf8","x":300,"y":700,"wires":[["29a3309d34314c7e"]]},{"id":"29a3309d34314c7e","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Unterordner anlegen","func":"const d = msg.data;\nmsg.payload = (d.unterordner || []).map(o => `${d.zielPfad}/${o.name}`);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":700,"wires":[["e76960526db64fc2"]]},{"id":"e76960526db64fc2","type":"split","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":710,"y":700,"wires":[["3d6f9168757f7650"]]},{"id":"3d6f9168757f7650","type":"fs-ops-mkdir","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Unterordner anlegen","path":"","pathType":"str","dirname":"payload","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":880,"y":700,"wires":[["6081efcfefcbc92f"]]},{"id":"6081efcfefcbc92f","type":"join","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","mode":"auto","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1050,"y":700,"wires":[["312cfa25ef98de9e"]]},{"id":"312cfa25ef98de9e","type":"fs-ops-dir","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Session-Files auflisten","path":"templateDest","pathType":"msg","filter":"*.ptx","filterType":"str","dir":"payload","dirType":"msg","x":1220,"y":700,"wires":[["7ee3c33896935646"]]},{"id":"7ee3c33896935646","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Nummerierung","func":"function normalize(s) { return (s || '').normalize('NFC') }\nconst files = (msg.payload || []).map(normalize);\nconst d = msg.data;\nconst values = {\n    datum: normalize(d.datum),\n    projektname: normalize(d.projektname),\n    moid: normalize(d.moid),\n    benutzer: normalize(global.get('activeUserKuerzel') || ''),\n    kunde: normalize(d.kunde),\n    produktionsstufe: normalize(d.stufeLabel)\n};\nlet base = normalize(msg.sessionSchema || '{{projektname}} {{moid}} - {{produktionsstufe}} {{benutzer}} {{version}}');\n\n// Regex für alles außer {{version}}\nlet rePattern = base\n    .replace(/\\./g, '\\\\.') // Punkte escapen\n    .replace(/{{version}}/g, \"v(\\\\d+)\")\n    .replace(/{{(\\w+)}}/g, (_, k) => {\n        if (k === 'version') return '';\n        const val = values[k];\n        return val ? val.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : '.*';\n    });\n\nconst re = new RegExp('^' + rePattern + '\\\\.ptx$');\nlet maxV = 0;\nfiles.forEach(f => { const m = re.exec(f); if (m && m[1]) { const v = parseInt(m[1], 10); if (v > maxV) maxV = v; } });\nconst nextV = maxV + 1;\n\nvalues.version = `v${nextV}`;\nlet filename = base.replace(/{{(\\w+)}}/g, (_, k) => values[k] || '');\nfilename = filename.replace(/\\.[^.]+$/, '') + '.ptx';\n\nmsg.filename = filename;                // nur Name\nmsg.destFull = `${msg.templateDest}/${filename}`; // voller Zielpfad\nmsg.sourcePath = msg.templateSource;    // Quelle\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":260,"y":740,"wires":[["f5930766aa85876a"]]},{"id":"f5930766aa85876a","type":"fs-ops-copy","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","sourcePath":"","sourcePathType":"str","sourceFilename":"sourcePath","sourceFilenameType":"msg","destPath":"templateDest","destPathType":"msg","destFilename":"filename","destFilenameType":"msg","link":false,"overwrite":false,"x":420,"y":740,"wires":[["3890f6f8ca6ac208"]]},{"id":"3890f6f8ca6ac208","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"okOut","func":"msg.payload = {\n    ok: true,\n    zielPfad: msg.data.zielPfad,\n    templateDest: msg.templateDest,\n    filename: msg.filename\n};\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":740,"wires":[["4890dfe41d974f67"]]},{"id":"4890dfe41d974f67","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":670,"y":740,"wires":[]},{"id":"73545854ec411151","type":"http in","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","url":"/api/projektanlage/projekte","method":"get","upload":false,"swaggerDoc":"","x":270,"y":460,"wires":[["5850040864838c78"]]},{"id":"5850040864838c78","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"root","func":"// Nur echte HTTP-Requests verarbeiten\nif (!msg.req || !msg.res) {\n    // z.B. Messages vom Inject-Node -> ignorieren\n    return null;\n}\n\nconst kunde = (msg.req.query?.kunde || '').trim();\nif (!kunde) {\n    msg.statusCode = 400;\n    msg.payload = { error: \"kunde required\" };\n    return [null, msg]; // → HTTP Response (Fehler)\n}\n\n// Pfad bauen\nconst base = global.get('PathProduktionen') || '';\nmsg.root = `${base}/${kunde}`;\nmsg.payload = msg.root;\n\n// Vorsorglich CORS/Cache-Header setzen (optional, hilft gegen Zwischen-Caches)\nmsg.headers = {\n    'Cache-Control': 'no-store',\n    'Content-Type': 'application/json; charset=utf-8'\n};\n\nreturn [msg, null]; // → weiter\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":540,"wires":[["1941045c90a03f2e"],["4b5fca601da3958f"]],"outputLabels":["ok","error"]},{"id":"80b78c3e4e6b59d9","type":"split","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":770,"y":480,"wires":[["81057573ebad6e60"]]},{"id":"81057573ebad6e60","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"enrichPath","func":"msg.projektRoot = msg.root;\nmsg.payload = { name: msg.payload, path: `${msg.root}/${msg.payload}` };\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":480,"wires":[["78f6564684f6027e"]]},{"id":"af7c4fbadcc8f62d","type":"fs-ops-access","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","path":"","pathType":"str","filename":"filename","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":1330,"y":560,"wires":[["42889590e1925a96"],["3e7fc290994492cd"]]},{"id":"42889590e1925a96","type":"file in","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":1480,"y":460,"wires":[["005adac3f0dbf505"]]},{"id":"005adac3f0dbf505","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"parseRow","func":"try {\n    const data = JSON.parse(msg.payload);\n    msg.payload = {\n        date: data.erstellt_am,\n        projektname: data.projektname,\n        moid: data.mo_id,\n        user: data.user\n    };\n    return msg;\n} catch (e) {\n    // Dummy durchreichen, msg-Objekt beibehalten (req/res/parts bleiben erhalten)\n    msg.payload = { skip: true };\n    return msg;\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":460,"wires":[["3a2458c69f992c7a"]]},{"id":"3a2458c69f992c7a","type":"join","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","mode":"auto","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1890,"y":340,"wires":[["fc39c9a148bef52e"]]},{"id":"fc39c9a148bef52e","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"filterValid","func":"let arr = Array.isArray(msg.payload) ? msg.payload : [];\narr = arr.filter(x => x && !x.skip && x.date && x.projektname && x.moid && x.user);\nmsg.payload = arr;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1900,"y":460,"wires":[["4b5fca601da3958f"]]},{"id":"4b5fca601da3958f","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":2030,"y":460,"wires":[]},{"id":"cecafe4be4e250a0","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","func":"let arr = [];\ntry { arr = JSON.parse(msg.payload) } catch { arr = [] }\n\nglobal.set(\"kundenStammdaten\", arr);\nconst out = arr.map(k => ({\n    label: k.kunde,\n    value: k.kunde,\n    stufen: (k.ordner || [])\n        .filter(o => o.ist_Produktionsstufe)\n        .map(o => ({ label: o.label, value: o.name }))\n}));\nmsg.payload = out;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1060,"y":420,"wires":[["f82475d3c09d70a2"]]},{"id":"6d11f8df05045052","type":"http in","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","url":"/api/projektanlage/kunden","method":"get","upload":false,"swaggerDoc":"","x":270,"y":420,"wires":[["16cb66e38510f820"]]},{"id":"16cb66e38510f820","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Stammdaten-Pfad setzen","func":"msg.filename = global.get('PathStammdaten') + '/kunden_stammdaten.json';\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":420,"wires":[["f5da02b2bd8d63a6"]]},{"id":"f5da02b2bd8d63a6","type":"file in","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":760,"y":420,"wires":[["cecafe4be4e250a0"]]},{"id":"f82475d3c09d70a2","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":1210,"y":420,"wires":[]},{"id":"1941045c90a03f2e","type":"fs-ops-dir","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","path":"payload","pathType":"msg","filter":"*","filterType":"str","dir":"payload","dirType":"msg","x":560,"y":480,"wires":[["2abf4b17d6827b67"]]},{"id":"e494e48fd35f1809","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"nach Ordnern filtern","func":"if (msg.stats && msg.stats.isDirectory()) {\n    msg.filename = msg.payload.path + \"/immo24-proj.json\";\n    return [msg, null];              // Ordner → weiter\n}\n\n// Kein Ordner → Dummy, aber req/res/parts erhalten!\nconst dummy = { ...msg, payload: { skip: true } };\nreturn [null, dummy];              // direkt zum join\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1240,"y":480,"wires":[["af7c4fbadcc8f62d"],["3a2458c69f992c7a"]],"outputLabels":["Ordner","Skip"]},{"id":"78f6564684f6027e","type":"fs-ops-stats","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","path":"","pathType":"str","filename":"payload.path","filenameType":"msg","stats":"stats","sizeType":"msg","x":1060,"y":480,"wires":[["e494e48fd35f1809"]]},{"id":"2abf4b17d6827b67","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Leerer Ordner Check","func":"// msg.payload ist das Array aus fs-ops-dir\nconst arr = Array.isArray(msg.payload) ? msg.payload : [];\nif (arr.length === 0) {\n    // gleiche msg behalten → req/res bleibt erhalten\n    msg.statusCode = 200;\n    msg.payload = [];\n    return [null, msg];     // Out2 → http response\n}\nreturn [msg, null];       // Out1 → split\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":520,"wires":[["80b78c3e4e6b59d9"],["4b5fca601da3958f"]],"outputLabels":["nein","leer"]},{"id":"3e7fc290994492cd","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"keine immo24-proj.json","func":"// Datei existiert NICHT -> Dummy an Join, aber msg beibehalten!\nconst dummy = { ...msg, payload: { skip: true } };\nreturn dummy;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1610,"y":540,"wires":[["3a2458c69f992c7a"]]},{"id":"0a7761f43773cf50","type":"change","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","rules":[{"t":"move","p":"payload.fullPath","pt":"msg","to":"filename","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":550,"y":880,"wires":[["1d2f2c031ccf07cb"]]},{"id":"25db702b7507e6dd","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":1450,"y":800,"wires":[]},{"id":"fec6c59f3697b0bb","type":"http in","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","url":"/api/projektanlage/resolve-existing","method":"post","upload":false,"swaggerDoc":"","x":280,"y":1040,"wires":[["13f3227b56812c1a","cd5a7e2c5f413a15"]]},{"id":"13f3227b56812c1a","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Validate + Prepare","func":"// Body holen\nconst b = (msg.payload && typeof msg.payload === 'object') ? msg.payload : (msg.req && msg.req.body) || {};\nconst need = ['kunde','datum','projektname','moid','stufe','template'];\nconst fehlende = need.filter(k => !b[k]);\nif (fehlende.length) {\n  msg.statusCode = 400;\n  msg.payload = { error: 'missing', fields: fehlende };\n  return [null, msg];\n}\n\n// Globals\nconst PathProduktionen = global.get('PathProduktionen') || '';\nconst PathMitarbeiter  = global.get('PathMitarbeiter')  || '';\nconst activeUser       = global.get('activeUser')       || '';\nconst projektordnerSchema = global.get('projektordnerSchema') || '';\nconst sessionSchema    = global.get('sessionSchema')    || '{{projektname}} {{moid}} - {{produktionsstufe}} {{benutzer}} {{version}}';\nconst activeUserKuerzel= global.get('activeUserKuerzel')|| '';\n\n// Nutzwerte & Root\nmsg.data = { ...b };\nmsg.paths = {\n  root: `${PathProduktionen}/${b.kunde}`,\n  templateSource: `${PathMitarbeiter}/${activeUser}/immo24/templates/${b.template}`\n};\n\n// Für später\nmsg.sessionSchema = sessionSchema;\nmsg.schema = projektordnerSchema;\n\n// Response-Header (optional)\nmsg.headers = { 'Cache-Control': 'no-store', 'Content-Type': 'application/json; charset=utf-8' };\n\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":1040,"wires":[["c1e5c60f79c68184"],["fa9d2fac02be4c9f"]],"outputLabels":["ok","error"]},{"id":"fa9d2fac02be4c9f","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":740,"y":1100,"wires":[]},{"id":"c1e5c60f79c68184","type":"fs-ops-dir","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Ordner unter Kunde lesen","path":"paths.root","pathType":"msg","filter":"*","filterType":"str","dir":"payload","dirType":"msg","x":780,"y":1040,"wires":[["905fc9e0315efe87","1b8047b4f7bffd73"]]},{"id":"905fc9e0315efe87","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Projektordner per Schema finden","func":"function n(s){ return String(s||'').normalize('NFC'); }\nconst entries = Array.isArray(msg.payload) ? msg.payload : [];\nconst { projektname, moid, kunde, datum, stufe } = msg.data;\nconst schema = n(msg.schema||'');\n\n// Regex aus Schema bauen\nconst values = { datum:n(datum), projektname:n(projektname), moid:n(moid), kunde:n(kunde) };\nlet pat = schema\n  .replace(/{{benutzer}}/g, '.+')\n  .replace(/{{(\\w+)}}/g, (_,k) => values[k] ? values[k].replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&') : '.*');\npat = '^' + pat.replace(/ /g,'\\\\s+') + '$';\nconst re = new RegExp(pat);\n\n// versteckte raus, normalisieren, matchen\nconst list = entries.filter(x => x && !String(x).startsWith('.')).map(n);\nconst gefunden = list.find(name => re.test(name));\nif (!gefunden){\n  msg.statusCode = 404;\n  msg.payload = { error: 'not_found' };\n  return [null, msg];\n}\n\nmsg.paths.zielPfad = `${msg.paths.root}/${gefunden}`;\nmsg.paths.templateDest = `${msg.paths.zielPfad}/${stufe}`;\nreturn [msg, null];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1040,"y":1040,"wires":[["1eea91f2906456bc","2263fe1373d37763"],["fa9d2fac02be4c9f","b5beb7b68b78ac15"]],"outputLabels":["match","404"]},{"id":"1eea91f2906456bc","type":"fs-ops-mkdir","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Stufenordner anlegen (idempotent)","path":"","pathType":"str","dirname":"paths.templateDest","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"payload","fullpathType":"msg","x":1380,"y":1040,"wires":[["bf4d8a80d210b362"]]},{"id":"bf4d8a80d210b362","type":"fs-ops-dir","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"PTX im Stufenordner","path":"paths.templateDest","pathType":"msg","filter":"*.ptx","filterType":"str","dir":"payload","dirType":"msg","x":300,"y":1100,"wires":[["37e19dd539506efd"]]},{"id":"37e19dd539506efd","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Nummerierung + Dateiname","func":"function n(s) { return String(s || '').normalize('NFC'); }\n\nconst files = (msg.payload || []).map(n);\nconst d = msg.data || {};\n\n// heutiges Datum YYYY-MM-DD\nconst now = new Date();\nconst datumHeute = now.toISOString().slice(0, 10);\n\n// Platzhalter-Werte\nconst values = {\n  datum: datumHeute,\n  projektname: n(d.projektname),\n  moid: n(d.moid),\n  benutzer: n(global.get('activeUserKuerzel') || ''),\n  kunde: n(d.kunde),\n  produktionsstufe: n(d.stufeLabel)\n};\n\n// Template (falls none gesetzt): inkl. datum & version\nlet base = n(msg.sessionSchema || '{{projektname}} {{moid}} - {{produktionsstufe}} {{benutzer}} {{datum}} {{version}}');\n\n// Regex bauen: Version capturen; Datum & Benutzer ignorieren (beliebig)\nlet rePattern = base\n  .replace(/\\./g, '\\\\.')\n  .replace(/{{version}}/g, 'v(\\\\d+)')\n  .replace(/{{(\\w+)}}/g, (_, k) => {\n    if (k === 'version') return '';\n    if (k === 'datum' || k === 'benutzer') return '.*'; // <— beide egal bei Suche\n    const v = values[k];\n    return v ? v.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : '.*';\n  });\n\nconst re = new RegExp('^' + rePattern + '\\\\.ptx$');\n\n// höchste vorhandene Version über ALLE Daten/Benutzer finden\nlet maxV = 0;\nfor (const f of files) {\n  const m = re.exec(f);\n  if (m && m[1]) {\n    const v = parseInt(m[1], 10);\n    if (!Number.isNaN(v) && v > maxV) maxV = v;\n  }\n}\n\n// nächste Version und finalen Dateinamen setzen\nconst nextV = maxV + 1;\nvalues.version = `v${nextV}`;\n\nlet filename = base.replace(/{{(\\w+)}}/g, (_, k) => values[k] || '');\nfilename = filename.replace(/\\.[^.]+$/, '') + '.ptx';\n\nmsg.filename = filename;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":1120,"wires":[["14eb4bbb946eedea"]]},{"id":"14eb4bbb946eedea","type":"fs-ops-copy","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"Template → neue PTX","sourcePath":"","sourcePathType":"str","sourceFilename":"paths.templateSource","sourceFilenameType":"msg","destPath":"paths.templateDest","destPathType":"msg","destFilename":"filename","destFilenameType":"msg","link":false,"overwrite":false,"x":800,"y":1100,"wires":[["b0aef2d54e9d0ec3"]]},{"id":"b0aef2d54e9d0ec3","type":"function","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"OK Response","func":"msg.payload = {\n  ok: true,\n  zielPfad: msg.paths.zielPfad,\n  templateDest: msg.paths.templateDest,\n  filename: msg.filename\n};\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1020,"y":1100,"wires":[["3d95844779504430"]]},{"id":"3d95844779504430","type":"http response","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"","statusCode":"","headers":{},"x":1190,"y":1100,"wires":[]},{"id":"41d72cc3699da9b1","type":"file in","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"kunden_stammdaten.json lesen","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":1530,"y":1380,"wires":[["870631ee4c8bea42"]]},{"id":"870631ee4c8bea42","type":"json","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"JSON parsen","property":"payload","action":"","pretty":false,"x":1800,"y":1380,"wires":[["a34dbfbbd8ddf807","10dedfe4a11fd2a8"]]},{"id":"10dedfe4a11fd2a8","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Array speichern","func":"// msg.payload ist das komplette Kunden/Ordner-Array\nflow.set('kundenStammdaten', msg.payload); // speichere das Array im Flow-Kontext\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2060,"y":1360,"wires":[[]]},{"id":"a34dbfbbd8ddf807","type":"function","z":"b443cd6f4046fd9f","d":true,"g":"3f6058c22847f23d","name":"Daten aufbereiten","func":"\nlet selectedKunde = flow.get('selectedKunde');\nmsg.payload = msg.payload.map(k => ({\n    kunde: k.kunde,\n    ordner_anzahl: k.ordner ? k.ordner.length : 0\n}));\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2070,"y":1400,"wires":[[]]},{"id":"c5fffcd9f46b8088","type":"debug","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"debug 11","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":930,"y":340,"wires":[]},{"id":"fae7008938358c26","type":"debug","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"debug 18","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":480,"y":600,"wires":[]},{"id":"fdda2860dcf92acb","type":"debug","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"debug 19","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":780,"y":580,"wires":[]},{"id":"cd5a7e2c5f413a15","type":"debug","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"debug 20","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":570,"y":960,"wires":[]},{"id":"1b8047b4f7bffd73","type":"debug","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"debug 21","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":910,"y":960,"wires":[]},{"id":"2263fe1373d37763","type":"debug","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"debug 23","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1210,"y":900,"wires":[]},{"id":"b5beb7b68b78ac15","type":"debug","z":"b443cd6f4046fd9f","g":"e09b23f59c044bf8","name":"debug 24","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1210,"y":940,"wires":[]},{"id":"aa99e61cb52b1c59","type":"debug","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"put snapshot","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":340,"y":1840,"wires":[]},{"id":"7f40bd72d3f44bbc","type":"debug","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"get snapshot","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":360,"y":1720,"wires":[]},{"id":"a00da8a35639dbd8","type":"function","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Kunden Ordnerpfade aus Snapshot","func":"// Erwartet: msg.body.customers (Array von Strings ODER Objekten mit name/title/kunde)\n// Liefert: msg.payload = [ \"/produktionen/<kunde1>\", \"/produktionen/<kunde2>\", ... ]\n\nconst base = (global.get('PathProduktionen') || '').replace(/[\\\\/]+$/, '');\nconst raw = Array.isArray(msg.body && msg.body.customers) ? msg.body.customers : [];\n\nfunction pickName(item) {\n    if (typeof item === 'string') return item;\n    if (item && typeof item === 'object') {\n        return item.name || item.title || item.kunde || item.customer || '';\n    }\n    return '';\n}\n\nfunction sanitize(name) {\n    let s = String(name || '').trim();\n    // Verbotene/ungünstige Zeichen neutralisieren\n    s = s.replace(/[\\\\/:*?\"<>|]/g, '_');\n    // Doppelte Punkte/Slashes vereinfachen\n    s = s.replace(/\\s+/g, ' ').replace(/^\\.+/, '').replace(/\\.+$/, '');\n    return s;\n}\n\nconst paths = [];\nfor (const it of raw) {\n    const name = sanitize(pickName(it));\n    if (!name) continue;\n    paths.push(base + '/' + name);\n}\n\n// Falls keine Kunden → trotzdem leeres Array setzen\nmsg.payload = paths;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1220,"y":1860,"wires":[["3be16e807066c9f4"]]},{"id":"3be16e807066c9f4","type":"split","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":1450,"y":1860,"wires":[["0cdcc1e9ef5f3e29"]]},{"id":"0cdcc1e9ef5f3e29","type":"fs-ops-access","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Ordner existiert?","path":"","pathType":"str","filename":"payload","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":1610,"y":1860,"wires":[["b8cfaa564f921f12"],["bd31b537d98d1d41"]]},{"id":"b8cfaa564f921f12","type":"join","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"","mode":"auto","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2010,"y":1820,"wires":[[]]},{"id":"bd31b537d98d1d41","type":"fs-ops-mkdir","z":"b443cd6f4046fd9f","g":"3f6058c22847f23d","name":"Kundenordner anlegen","path":"","pathType":"str","dirname":"payload","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1820,"y":1880,"wires":[["b8cfaa564f921f12"]]},{"id":"acbdc911869fcb0b","type":"http in","z":"571c9add5c07840b","name":"","url":"/api/protools/status","method":"get","upload":false,"swaggerDoc":"","x":150,"y":60,"wires":[["f332e7773e0b1d75"]]},{"id":"449fca97fdcc9e44","type":"exec","z":"571c9add5c07840b","command":"","addpay":"command","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"check Pro Tools","x":720,"y":60,"wires":[["d35141a1aff39a50"],[],[]]},{"id":"d35141a1aff39a50","type":"function","z":"571c9add5c07840b","name":"to JSON","func":"const out = (msg.payload||'').toString().trim().toLowerCase();\nmsg.payload = { online: out === 'true' };\nreturn msg;","outputs":1,"noerr":0,"x":910,"y":60,"wires":[["d6e97db390ed12fd"]]},{"id":"d6e97db390ed12fd","type":"http response","z":"571c9add5c07840b","name":"","statusCode":"","headers":{},"x":1090,"y":60,"wires":[]},{"id":"32022cc80658355b","type":"http in","z":"571c9add5c07840b","name":"","url":"/api/protools/presets","method":"post","upload":false,"swaggerDoc":"","x":150,"y":120,"wires":[["6fa66f45920c7270","62529864111bc6bb"]]},{"id":"f332e7773e0b1d75","type":"OS","z":"571c9add5c07840b","name":"","x":330,"y":60,"wires":[["01d7ac052395b113"]]},{"id":"01d7ac052395b113","type":"function","z":"571c9add5c07840b","name":"Befehle je nach OS","func":"const platform = (msg?.payload?.platform) || process.platform;\n\nif (platform === 'win32') {\n    // Windows: prüft auf Prozess \"ProTools\"\n    msg.command = `powershell -NoProfile -Command \"Get-Process | Where-Object { $_.ProcessName -eq 'ProTools' } | Measure | ForEach-Object { $_.Count -gt 0 }\"`;\n} else if (platform === 'darwin') {\n    // macOS: prüft auf Prozess \"Pro Tools\"\n    msg.command = `osascript -e 'tell application \"System Events\" to (exists process \"Pro Tools\")'`;\n} else {\n    msg.command = `echo OS nicht unterstützt`;\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":60,"wires":[["449fca97fdcc9e44"]]},{"id":"448887b282ce2524","type":"function","z":"571c9add5c07840b","name":"Auswahl","func":"// ===== Robust body lesen (String oder Objekt) =====\nlet body = msg.payload;\nif (Buffer.isBuffer(body)) {\n    try { body = JSON.parse(body.toString('utf8')); } catch { body = {}; }\n} else if (typeof body === 'string') {\n    try { body = JSON.parse(body); } catch { body = {}; }\n} else if (typeof body !== 'object' || body === null) {\n    body = {};\n}\n\n// Erwartetes Format:\n// { action: \"store\" | \"recall\", categories: { cat1: [{key}], cat2: [{key,quick?}], cat3: [{key}] } }\nconst action = (body.action || '').toLowerCase();\nconst cats = body.categories || {};\nconst cat1 = Array.isArray(cats.cat1) ? cats.cat1 : [];\nconst cat2 = Array.isArray(cats.cat2) ? cats.cat2 : [];\nconst cat3 = Array.isArray(cats.cat3) ? cats.cat3 : [];\n\n// ===== Globale Pfade & User holen =====\nconst PathMitarbeiter = global.get('PathMitarbeiter') || '';\nconst PathPTUser = global.get('PathPTUser') || '';\nconst activeUser = global.get('activeUser') || '';\n\n// ===== 9 Ausgänge vorbereiten =====\nconst outs = Array(9).fill(null);\n\n// kleine Helper zum Bauen der Payloads\nconst base = { action, PathMitarbeiter, PathPTUser, activeUser };\n\n// Mapping-Helfer: setzt outs[index] wenn Key in der Liste vorhanden ist\nfunction handleCat(items, matchKey, outIndex, extra = {}) {\n    const found = items.find(it => (it?.key || '').toLowerCase() === matchKey);\n    if (!found) return;\n    // quick bei cat2 optional durchreichen\n    outs[outIndex] = {\n        ...msg,\n        payload: { ...base, quick: !!found.quick, ...extra }\n    };\n}\n\n// ===== cat1 =====\nhandleCat(cat1, 'templates', 0);\nhandleCat(cat1, 'trackpresets', 1);\nhandleCat(cat1, 'pluginsettings', 2);\n\n// ===== cat2 =====\n// Achtung: deine UI liefert \"clipFxPresets\" → wir normalisieren auf lowercase:\nhandleCat(cat2, 'fadepresets', 3);\nhandleCat(cat2, 'clipfxpresets', 4);\nhandleCat(cat2, 'memorylocation', 5);\nhandleCat(cat2, 'trackdatatorecall', 6);\n\n// ===== cat3 =====\nhandleCat(cat3, 'keyboardshortcuts', 7);\nhandleCat(cat3, 'pluginmaps', 8);\n\n// Falls gar nichts ausgewählt war, kannst du optional 400 melden –\n// ich lasse das absichtlich als \"kein Output = kein Job\".\n// ganz am Ende der Funktion:\nmsg.job = msg.job || {};\nmsg.job.action = action;   // \"store\" | \"recall\"\n\nreturn outs;","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":180,"y":1140,"wires":[["026123ed6fbfbff9"],["5a142e72217b90d9"],["74dfc0289041bfab"],["d8eab152f365a0df"],["404d5678657dac10"],["fafc7a55859a7190"],["edce99a5cffcc7e5"],["dec159441b93f814"],[]],"outputLabels":["Templates","Track Presets","Plug-In Settings","Fade Presets","Clip Effects Presets","Memory Location Presets","Track Data to Recall Presets","Keyboard Shortcuts","Plug-In Maps"]},{"id":"026123ed6fbfbff9","type":"function","z":"571c9add5c07840b","g":"6be4880a2368c056","name":"Template Funktion","func":"// Template Funktion (Outputs: 2)\n// Out1 = normal weiter, Out2 = startCat / error\ntry {\n    const { PathMitarbeiter, PathPTUser, activeUser, action } = msg.payload || {};\n    msg.category = \"templates\";\n\n    // startCat nur 1x nebenbei senden\n    let startCat = null;\n    if (msg.job && msg.job.id) {\n        startCat = {\n            topic: \"report\",\n            payload: { type: \"startCat\", category: msg.category },\n            job: msg.job\n        };\n    }\n\n    if (action === \"recall\") {\n        msg.templateSrc = `${PathMitarbeiter}/${activeUser}/immo24/templates`;\n        msg.templateDest = `${PathPTUser}/Session Templates/${activeUser}`;\n        return [msg, startCat];\n    } else if (action === \"store\") {\n        msg.templateSrc = `${PathPTUser}/Session Templates/${activeUser}`;\n        msg.templateDest = `${PathMitarbeiter}/${activeUser}/immo24/templates`;\n        return [msg, startCat];\n    }\n\n    // ungültige Aktion\n    return [null, startCat];\n\n} catch (err) {\n    const errorMsg = {\n        topic: \"report\",\n        payload: { type: \"error\", category: \"templates\", message: err.message },\n        job: msg.job\n    };\n    return [null, errorMsg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":300,"wires":[["5df36f9d8643344d"],["8a745d4f06ab7d74"]],"outputLabels":["","REPORT IN"]},{"id":"3118fab255283b8b","type":"fs-ops-dir","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Plugin Pfad durchsuchen","path":"payload.PluginPath","pathType":"msg","filter":"*","filterType":"str","dir":"files","dirType":"msg","x":930,"y":700,"wires":[["c18f456a0f791f42"]]},{"id":"c18f456a0f791f42","type":"split","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Split Plugin-Ordner","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"files","x":1150,"y":700,"wires":[["929b5b35d429bd73"]]},{"id":"929b5b35d429bd73","type":"change","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Pfad zum user-Ordner bauen","rules":[{"t":"set","p":"payload.pluginName","pt":"msg","to":"files","tot":"msg"},{"t":"set","p":"payload.userDir","pt":"msg","to":"payload.PluginPath & \"/\" & files & \"/\" & payload.activeUser","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1380,"y":700,"wires":[["0aff157563034614"]]},{"id":"8a66e0bb62460b38","type":"fs-ops-stats","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"","path":"","pathType":"str","filename":"payload.userDir","filenameType":"msg","stats":"stats","sizeType":"msg","x":1580,"y":660,"wires":[["2b31b10a748b6d64"]]},{"id":"2b31b10a748b6d64","type":"function","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Ist ein Verzeichnis?","func":"// Prüfen ob Stat-Wert ein Verzeichnis ist\nif (msg.stats && typeof msg.stats.mode === \"number\") {\n    if ((msg.stats.mode & 57344) === 16384) {\n        // Ist ein Verzeichnis\n        return msg;\n    }\n}\n// Kein Verzeichnis: Nachricht verwerfen\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":700,"wires":[["71a4fd4af2c51838"]]},{"id":"9078dc5bb0f1fcb5","type":"function","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Plug-In Settings Funktion","func":"let PathMitarbeiter = msg.payload.PathMitarbeiter;\nlet activeUser = msg.payload.activeUser;\nlet pluginName = msg.payload.pluginName;\nlet userDir = msg.payload.userDir;\n\n// Ohne passenden payload keine Aktion\nif (msg.payload.action === \"recall\") {\n    msg.pluginsettingSrc = `${PathMitarbeiter}/${activeUser}/immo24/pluginsettings/${pluginName}`;\n    msg.pluginsettingDest = `${userDir}`;\n    return msg;\n} else if (msg.payload.action === \"store\") {\n    msg.pluginsettingSrc = `${userDir}`;\n    msg.pluginsettingDest = `${PathMitarbeiter}/${activeUser}/immo24/pluginsettings/${pluginName}`;\n    return msg;\n}\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2190,"y":700,"wires":[["f6530849f84ba28d"]]},{"id":"404d5678657dac10","type":"function","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Clip Effects Preset Funktion","func":"// Memory Location Preset Funktion mit Error-Catch (Outputs: 2)\n// Out1 = normal weiter, Out2 = startCat / error\n\ntry {\n    let PathMitarbeiter = msg.payload.PathMitarbeiter;\n    let PathPTUser = msg.payload.PathPTUser;\n    let activeUser = msg.payload.activeUser;\n\n    let quickPresetJobs = [];\n    let rootDir = `${PathPTUser}/Clip Effects Presets`;\n    let archiveDir = `${PathMitarbeiter}/${activeUser}/immo24/clipeffectspresets/Quick Presets`;\n\n    msg.category = \"clipfxpresets\";\n\n    // ---- startCat nur 1x nebenbei senden ----\n    let startCat = null;\n    if (msg.job && msg.job.id) {\n        startCat = {\n            topic: \"report\",\n            payload: { type: \"startCat\", category: msg.category },\n            job: msg.job\n        };\n    }\n\n    // ---- Aktion verzweigen ----\n    if (msg.payload.action === \"recall\") {\n        msg.clipeffectSrc = `${PathMitarbeiter}/${activeUser}/immo24/clipeffectspresets`;\n        msg.clipeffectDest = `${rootDir}/${activeUser}`;\n        msg.clipeffectQuickDest = rootDir;\n        if (msg.payload.quick === true) {\n            for (let i = 1; i <= 5; i++) {\n                quickPresetJobs.push({\n                    src: `${archiveDir}/Quick Preset ${i}.tfx`,\n                    destname: `Quick Preset ${i}.tfx`,\n                    destpath: `${rootDir}`\n                });\n            }\n        }\n        msg.quickPresets = quickPresetJobs;\n        return [msg, startCat];\n\n    } else if (msg.payload.action === \"store\") {\n        msg.clipeffectSrc = `${rootDir}/${activeUser}`;\n        msg.clipeffectDest = `${PathMitarbeiter}/${activeUser}/immo24/clipeffectspresets`;\n        msg.clipeffectQuickDest = archiveDir;\n\n        if (msg.payload.quick === true) {\n            for (let i = 1; i <= 5; i++) {\n                quickPresetJobs.push({\n                    src: `${rootDir}/Quick Preset ${i}.tfx`,\n                    destname: `Quick Preset ${i}.tfx`,\n                    destpath: `${archiveDir}`\n                });\n            }\n        }\n        msg.quickPresets = quickPresetJobs;\n        return [msg, startCat];\n    }\n\n    // Keine gültige Aktion\n    return [null, null];\n\n} catch (err) {\n    // Fehler an Aggregator melden\n    const errorMsg = {\n        topic: \"report\",\n        payload: { type: \"error\", category: \"clipfxpresets\", message: err.message },\n        job: msg.job\n    };\n    return [null, errorMsg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":1140,"wires":[["e6c214decef4eadd","6f1bdfeeef1718e0"],["59542c4cb71f0d92"]],"outputLabels":["","REPORT IN"]},{"id":"338d50cd66e07956","type":"fs-ops-copy","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Quick Presets kopieren","sourcePath":"","sourcePathType":"str","sourceFilename":"quickPresets.src","sourceFilenameType":"msg","destPath":"quickPresets.destpath","destPathType":"msg","destFilename":"quickPresets.destname","destFilenameType":"msg","link":false,"overwrite":true,"x":1810,"y":1140,"wires":[["a520c01c5814fdac"]]},{"id":"e6c214decef4eadd","type":"fs-ops-dir","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Pfad durchsuchen","path":"clipeffectSrc","pathType":"msg","filter":"*","filterType":"str","dir":"files","dirType":"msg","x":910,"y":1100,"wires":[["bfc6384b6602ee8c"]]},{"id":"c80234e5017b0a98","type":"function","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Copy Pfade","func":"// Erwartet: msg.files (Eintragname vom split), msg.clipeffectSrc, msg.clipeffectDest\nif (!msg.files || !msg.clipeffectSrc || !msg.clipeffectDest) return null;\n\n// Einzelpfade für diesen Eintrag\nconst itemSrc = `${msg.clipeffectSrc}/${msg.files}`;\nconst itemDest = `${msg.clipeffectDest}/${msg.files}`;\n\n// Bestehende Copy-Node nutzt clipeffectSrc/Dest -> hier pro Item überschreiben:\nmsg.clipeffectSrc = itemSrc;\nmsg.clipeffectDest = itemDest;\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":1080,"wires":[["b8b13e0434601759"]]},{"id":"39d13a464431d31b","type":"switch","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Quick Presets rausfiltern","property":"files","propertyType":"msg","rules":[{"t":"neq","v":"Quick Presets","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1490,"y":1320,"wires":[["2c990ce67e5034a6"]]},{"id":"fafc7a55859a7190","type":"function","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Memory Location Preset Funktion","func":"// Memory Location Preset Funktion mit Error-Catch (Outputs: 2)\n// Out1 = normal weiter, Out2 = startCat / error\n\ntry {\n    let PathMitarbeiter = msg.payload.PathMitarbeiter;\n    let PathPTUser = msg.payload.PathPTUser;\n    let activeUser = msg.payload.activeUser;\n\n    let quickPresetJobs = [];\n    let rootDir = `${PathPTUser}/Pro Tools Presets/Memory Location Window`;\n    let archiveDir = `${PathMitarbeiter}/${activeUser}/immo24/memorylocationpresets/Quick Presets`;\n\n    msg.category = \"memoryLocation\";\n\n    // ---- startCat nur 1x nebenbei senden ----\n    let startCat = null;\n    if (msg.job && msg.job.id) {\n        startCat = {\n            topic: \"report\",\n            payload: { type: \"startCat\", category: msg.category },\n            job: msg.job\n        };\n    }\n\n    // ---- Aktion verzweigen ----\n    if (msg.payload.action === \"recall\") {\n        msg.memorylocationSrc = `${PathMitarbeiter}/${activeUser}/immo24/memorylocationpresets`;\n        msg.memorylocationDest = `${rootDir}/${activeUser}`;\n        msg.memorylocationQuickDest = rootDir;\n\n\n        if (msg.payload.quick === true) {\n            for (let i = 1; i <= 5; i++) {\n                quickPresetJobs.push({\n                    src: `${archiveDir}/Quick Preset ${i}.ptpreset`,\n                    destname: `Quick Preset ${i}.ptpreset`,\n                    destpath: `${rootDir}`\n                });\n            }\n        }\n        msg.quickPresets = quickPresetJobs;\n        return [msg, startCat];\n\n    } else if (msg.payload.action === \"store\") {\n        msg.memorylocationSrc = `${rootDir}/${activeUser}`;\n        msg.memorylocationDest = `${PathMitarbeiter}/${activeUser}/immo24/memorylocationpresets`;\n        msg.memorylocationQuickDest = archiveDir;\n\n\n        if (msg.payload.quick === true) {\n            for (let i = 1; i <= 5; i++) {\n                quickPresetJobs.push({\n                    src: `${rootDir}/Quick Preset ${i}.ptpreset`,\n                    destname: `Quick Preset ${i}.ptpreset`,\n                    destpath: `${archiveDir}`\n                });\n            }\n        }\n        msg.quickPresets = quickPresetJobs;\n        return [msg, startCat];\n    }\n\n    // Keine gültige Aktion\n    return [null, null];\n\n} catch (err) {\n    // Fehler an Aggregator melden\n    const errorMsg = {\n        topic: \"report\",\n        payload: { type: \"error\", category: \"memoryLocation\", message: err.message },\n        job: msg.job\n    };\n    return [null, errorMsg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":1380,"wires":[["0b70528cdccb53e7","0dbec11db74424cd"],["a4ad4a34a821d771"]],"outputLabels":["","REPORT IN"]},{"id":"81215275a16d8c68","type":"fs-ops-copy","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Quick Presets kopieren","sourcePath":"","sourcePathType":"str","sourceFilename":"quickPresets.src","sourceFilenameType":"msg","destPath":"quickPresets.destpath","destPathType":"msg","destFilename":"quickPresets.destname","destFilenameType":"msg","link":false,"overwrite":true,"x":1810,"y":1380,"wires":[["a520c01c5814fdac"]]},{"id":"970f9fc0808ec60f","type":"split","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"split quick","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"quickPresets","x":1130,"y":1400,"wires":[["d60bb26669de3657"]]},{"id":"0b70528cdccb53e7","type":"fs-ops-dir","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Pfad durchsuchen","path":"memorylocationSrc","pathType":"msg","filter":"*","filterType":"str","dir":"files","dirType":"msg","x":910,"y":1340,"wires":[["25bc3768c7ae50d3"]]},{"id":"73306ab970c38caf","type":"split","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"split files","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"files","x":1300,"y":1320,"wires":[["39d13a464431d31b"]]},{"id":"2c990ce67e5034a6","type":"function","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Copy Pfade","func":"// Erwartet: msg.files (Eintragname vom split), msg.memorylocationSrc, msg.memorylocationDest\nif (!msg.files || !msg.memorylocationSrc || !msg.memorylocationDest) return null;\n\n// Einzelpfade für diesen Eintrag\nconst itemSrc = `${msg.memorylocationSrc}/${msg.files}`;\nconst itemDest = `${msg.memorylocationDest}/${msg.files}`;\n\n// Bestehende Copy-Node nutzt memorylocationSrc/Dest -> hier pro Item überschreiben:\nmsg.memorylocationSrc = itemSrc;\nmsg.memorylocationDest = itemDest;\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":1320,"wires":[["c53ffd5c163eadcb"]]},{"id":"edce99a5cffcc7e5","type":"function","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"TrackData Funktion","func":"// Memory Location Preset Funktion mit Error-Catch (Outputs: 2)\n// Out1 = normal weiter, Out2 = startCat / error\n\ntry {\n    let PathMitarbeiter = msg.payload.PathMitarbeiter;\n    let PathPTUser = msg.payload.PathPTUser;\n    let activeUser = msg.payload.activeUser;\n\n    let quickPresetJobs = [];\n    let rootDir = `${PathPTUser}/Pro Tools Presets/Track Data to Recall`;\n    let archiveDir = `${PathMitarbeiter}/${activeUser}/immo24/trackdatarecallpresets/Quick Presets`;\n\n    msg.category = \"trackdatarecall\";\n\n    // ---- startCat nur 1x nebenbei senden ----\n    let startCat = null;\n    if (msg.job && msg.job.id) {\n        startCat = {\n            topic: \"report\",\n            payload: { type: \"startCat\", category: msg.category },\n            job: msg.job\n        };\n    }\n\n    // ---- Aktion verzweigen ----\n    if (msg.payload.action === \"recall\") {\n        msg.trackdataSrc = `${PathMitarbeiter}/${activeUser}/immo24/trackdatapresets`;\n        msg.trackdataDest = `${rootDir}/${activeUser}`;\n        msg.trackdataQuickDest = rootDir;\n\n        if (msg.payload.quick === true) {\n            for (let i = 1; i <= 5; i++) {\n                quickPresetJobs.push({\n                    src: `${archiveDir}/Quick Preset ${i}.ptpreset`,\n                    destname: `Quick Preset ${i}.ptpreset`,\n                    destpath: `${rootDir}`\n                });\n            }\n        }\n        msg.quickPresets = quickPresetJobs;\n        return [msg, startCat];\n\n    } else if (msg.payload.action === \"store\") {\n        msg.trackdataSrc = `${rootDir}/${activeUser}`;\n        msg.trackdataDest = `${PathMitarbeiter}/${activeUser}/immo24/trackdatapresets`;\n        msg.trackdataQuickDest = archiveDir;\n\n\n        if (msg.payload.quick === true) {\n            for (let i = 1; i <= 5; i++) {\n                quickPresetJobs.push({\n                    src: `${rootDir}/Quick Preset ${i}.ptpreset`,\n                    destname: `Quick Preset ${i}.ptpreset`,\n                    destpath: `${archiveDir}`\n                });\n            }\n        }\n        msg.quickPresets = quickPresetJobs;\n        return [msg, startCat];\n    }\n\n    // Keine gültige Aktion\n    return [null, null];\n\n} catch (err) {\n    // Fehler an Aggregator melden\n    const errorMsg = {\n        topic: \"report\",\n        payload: { type: \"error\", category: \"trackdatarecall\", message: err.message },\n        job: msg.job\n    };\n    return [null, errorMsg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":1600,"wires":[["b20e0716bb69c289","0df45444bc06051c"],["963ca3740f921cf8"]],"outputLabels":["","REPORT IN"]},{"id":"eecef021cf5ea5f9","type":"fs-ops-copy","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Quick Presets kopieren","sourcePath":"","sourcePathType":"str","sourceFilename":"quickPresets.src","sourceFilenameType":"msg","destPath":"quickPresets.destpath","destPathType":"msg","destFilename":"quickPresets.destname","destFilenameType":"msg","link":false,"overwrite":true,"x":1810,"y":1620,"wires":[["a520c01c5814fdac"]]},{"id":"67bd53b720f256d8","type":"split","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"split quick","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"quickPresets","x":1130,"y":1640,"wires":[["6d456d2a0be0d42d"]]},{"id":"b20e0716bb69c289","type":"fs-ops-dir","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Pfad durchsuchen","path":"trackdataSrc","pathType":"msg","filter":"*","filterType":"str","dir":"files","dirType":"msg","x":910,"y":1560,"wires":[["51858e71739fe5f0"]]},{"id":"b777a94f111ff071","type":"split","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"split files","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"files","x":1300,"y":1560,"wires":[["9bdaf0d4392acc21"]]},{"id":"9bdaf0d4392acc21","type":"switch","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Quick Presets rausfiltern","property":"files","propertyType":"msg","rules":[{"t":"neq","v":"Quick Presets","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1490,"y":1560,"wires":[["b45c327d585b78b2"]]},{"id":"b45c327d585b78b2","type":"function","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Copy Pfade","func":"// Erwartet: msg.files (Eintragname vom split), msg.trackdataSrc, msg.trackdataDest\nif (!msg.files || !msg.trackdataSrc || !msg.trackdataDest) return null;\n\n// Einzelpfade für diesen Eintrag\nconst itemSrc = `${msg.trackdataSrc}/${msg.files}`;\nconst itemDest = `${msg.trackdataDest}/${msg.files}`;\n\n// Bestehende Copy-Node nutzt trackdataSrc/Dest -> hier pro Item überschreiben:\nmsg.trackdataSrc = itemSrc;\nmsg.trackdataDest = itemDest;\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":1560,"wires":[["4e89fbef3af60f1c"]]},{"id":"dec159441b93f814","type":"function","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Keyboard Shortcut Funktion","func":"// Memory Location Preset Funktion mit Error-Catch (Outputs: 2)\n// Out1 = normal weiter, Out2 = startCat / error\n\ntry {\n    let PathMitarbeiter = msg.payload.PathMitarbeiter;\n    let PathPTUser = msg.payload.PathPTUser;\n    let activeUser = msg.payload.activeUser;\n\n    let quickPresetJobs = [];\n    let rootDir = `${PathPTUser}/Pro Tools Presets/Keyboard Shortcuts`;\n    let archiveDir = `${PathMitarbeiter}/${activeUser}/immo24/keyboardshortcuts/Quick Presets`;\n\n    msg.category = \"keyboardshortcuts\";\n\n    // ---- startCat nur 1x nebenbei senden ----\n    let startCat = null;\n    if (msg.job && msg.job.id) {\n        startCat = {\n            topic: \"report\",\n            payload: { type: \"startCat\", category: msg.category },\n            job: msg.job\n        };\n    }\n\n    // ---- Aktion verzweigen ----\n    if (msg.payload.action === \"recall\") {\n        msg.kbshortcutSrc = `${PathMitarbeiter}/${activeUser}/immo24/keyboardshortscuts`;\n        msg.kbshortcutDest = `${rootDir}/${activeUser}`;\n        msg.kbshortcutQuickDest = rootDir;\n\n        if (msg.payload.quick === true) {\n            for (let i = 1; i <= 5; i++) {\n                quickPresetJobs.push({\n                    src: `${archiveDir}/Quick Preset ${i}.ptpreset`,\n                    destname: `Quick Preset ${i}.ptpreset`,\n                    destpath: `${rootDir}`\n                });\n            }\n        }\n        msg.quickPresets = quickPresetJobs;\n        return [msg, startCat];\n\n    } else if (msg.payload.action === \"store\") {\n        msg.kbshortcutSrc = `${rootDir}/${activeUser}`;\n        msg.kbshortcutDest = `${PathMitarbeiter}/${activeUser}/immo24/keyboardshortcuts`;\n        msg.kbshortcutQuickDest = archiveDir;\n\n\n        if (msg.payload.quick === true) {\n            for (let i = 1; i <= 5; i++) {\n                quickPresetJobs.push({\n                    src: `${rootDir}/Quick Preset ${i}.ptpreset`,\n                    destname: `Quick Preset ${i}.ptpreset`,\n                    destpath: `${archiveDir}`\n                });\n            }\n        }\n        msg.quickPresets = quickPresetJobs;\n        return [msg, startCat];\n    }\n\n    // Keine gültige Aktion\n    return [null, null];\n\n} catch (err) {\n    // Fehler an Aggregator melden\n    const errorMsg = {\n        topic: \"report\",\n        payload: { type: \"error\", category: \"keyboardshortcuts\", message: err.message },\n        job: msg.job\n    };\n    return [null, errorMsg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":1840,"wires":[["126ecdd30c809417","d48d6bfe020662f4"],["9ccfc5bdc5b504f8"]],"outputLabels":["","REPORT IN"]},{"id":"126ecdd30c809417","type":"fs-ops-dir","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Pfad durchsuchen","path":"kbshortcutSrc","pathType":"msg","filter":"*","filterType":"str","dir":"files","dirType":"msg","x":910,"y":1780,"wires":[["1e1ceeb243c3e34b"]]},{"id":"4190da9a9792cbcc","type":"function","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Copy Pfade","func":"// Erwartet: msg.files (Eintragname vom split), msg.kbshortcutSrc, msg.kbshortcutDest\nif (!msg.files || !msg.kbshortcutSrc || !msg.kbshortcutDest) return null;\n\n// Einzelpfade für diesen Eintrag\nconst itemSrc = `${msg.kbshortcutSrc}/${msg.files}`;\nconst itemDest = `${msg.kbshortcutDest}/${msg.files}`;\n\n// Bestehende Copy-Node nutzt kbshortcutSrc/Dest -> hier pro Item überschreiben:\nmsg.kbshortcutSrc = itemSrc;\nmsg.kbshortcutDest = itemDest;\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":1780,"wires":[["eecbec774963fbb5"]]},{"id":"d8eab152f365a0df","type":"function","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Fade Presets Funktion","func":"// Fade Presets Funktion (Outputs: 2)\n// Out1 = normal weiter, Out2 = startCat / error\n\ntry {\n    const { PathMitarbeiter, PathPTUser, activeUser, action, quick } = msg.payload || {};\n    if (!PathMitarbeiter || !PathPTUser || !activeUser || !action) return [null, null];\n\n    msg.category = \"fadePresets\";\n\n    // --- startCat NUR 1x pro Job+Kategorie senden (Flow-Flag) ---\n    let startCat = null;\n    const startKey = `startcat:${msg.job?.id || 'none'}:${msg.category}`;\n    if (!flow.get(startKey) && msg.job && msg.job.id) {\n        flow.set(startKey, true);\n        startCat = {\n            topic: \"report\",\n            payload: { type: \"startCat\", category: msg.category },\n            job: msg.job\n        };\n    }\n\n    const rootDir = `${PathPTUser}/Fade Presets`;\n    const archiveDir = `${PathMitarbeiter}/${activeUser}/immo24/fadepresets`;\n    const folders = [\"Batch Fade\", \"Cross Fade\", \"Fade In\", \"Fade Out\"];\n\n    // Quelle/Ziel für Bulk\n    if (action === \"recall\") {\n        msg.fadeSrc = archiveDir;\n        msg.fadeDest = rootDir;\n    } else if (action === \"store\") {\n        msg.fadeSrc = rootDir;\n        msg.fadeDest = archiveDir;\n    } else {\n        return [null, startCat];\n    }\n\n    // Quick Presets vorbereiten (separat kopieren)\n    const doQuick = (quick === true || quick === \"true\");\n    msg.quickPresets = [];\n    if (doQuick) {\n        for (const folder of folders) {\n            for (let i = 1; i <= 5; i++) {\n                if (action === \"recall\") {\n                    msg.quickPresets.push({\n                        src: `${archiveDir}/${folder}/Quick Preset ${i}.fdpreset`,\n                        destname: `Quick Preset ${i}.fdpreset`,\n                        destpath: `${rootDir}/${folder}`\n                    });\n                } else {\n                    msg.quickPresets.push({\n                        src: `${rootDir}/${folder}/Quick Preset ${i}.fdpreset`,\n                        destname: `Quick Preset ${i}.fdpreset`,\n                        destpath: `${archiveDir}/${folder}`\n                    });\n                }\n            }\n        }\n    }\n\n    // Ordnerliste für Bulk übergeben\n    msg.folders = folders;\n\n    return [msg, startCat];\n\n} catch (err) {\n    const errorMsg = {\n        topic: \"report\",\n        payload: { type: \"error\", category: \"fadePresets\", message: err.message },\n        job: msg.job\n    };\n    return [null, errorMsg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":880,"wires":[["97c972e18dacc01e","9151b0e0d234cf6b"],["1b55abfd770dda78"]],"outputLabels":["","REPORT IN"]},{"id":"9151b0e0d234cf6b","type":"split","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Split Ordner (4x)","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"folders","x":820,"y":880,"wires":[["c133d90e649a5ff2"]]},{"id":"c133d90e649a5ff2","type":"change","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"scanSrc / destFolder bauen","rules":[{"t":"set","p":"scanFolder","pt":"msg","to":"folders","tot":"msg"},{"t":"set","p":"scanSrc","pt":"msg","to":"fadeSrc & \"/\" & folders","tot":"jsonata"},{"t":"set","p":"destFolder","pt":"msg","to":"fadeDest & \"/\" & folders","tot":"jsonata"}],"x":1040,"y":880,"wires":[["16b240c5ebff9643"]]},{"id":"16b240c5ebff9643","type":"fs-ops-dir","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"List .fdpreset im Ordner","path":"scanSrc","pathType":"msg","filter":"*","filterType":"str","dir":"files","dirType":"msg","x":1290,"y":880,"wires":[["399704b1bba9111c"]]},{"id":"399704b1bba9111c","type":"split","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Split Dateien","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"files","x":1490,"y":880,"wires":[["4cd228b5b1ec067e"]]},{"id":"4cd228b5b1ec067e","type":"function","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Quick Presets filtern","func":"// erwartet: msg.files (Dateiname), msg.scanSrc, msg.destFolder\nconst name = msg.files;\nif (!name || !msg.scanSrc || !msg.destFolder) return null;\n\n// nur .fdpreset\nconst isFdpreset = /\\.fdpreset$/i.test(name);\n// Quick Presets ausschließen\nconst isQuick = /^Quick Preset\\s+[1-5]\\.fdpreset$/i.test(name);\n\nif (!isFdpreset || isQuick) return null;\n\nmsg.fileSrc   = `${msg.scanSrc}/${name}`;\nmsg.fileName  = name;\n// Zielordner existiert ggf. noch nicht – fs-ops-copy legt Datei im destFolder/destFilename ab\nmsg.destFolder = msg.destFolder;\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1680,"y":880,"wires":[["5ee9d6d3e3c4f2bd"]]},{"id":"77cfbeec620abcd6","type":"fs-ops-copy","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Copy .fdpreset (Bulk)","sourcePath":"","sourcePathType":"str","sourceFilename":"fileSrc","sourceFilenameType":"msg","destPath":"destFolder","destPathType":"msg","destFilename":"fileName","destFilenameType":"msg","link":false,"overwrite":true,"x":2140,"y":880,"wires":[["a520c01c5814fdac"]]},{"id":"97c972e18dacc01e","type":"split","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Split Quick Presets","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"quickPresets","x":830,"y":920,"wires":[["efcec27fd6452b4e"]]},{"id":"b8a6163e7afb5acf","type":"fs-ops-copy","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Quick Presets kopieren (5×4)","sourcePath":"","sourcePathType":"str","sourceFilename":"quickPresets.src","sourceFilenameType":"msg","destPath":"quickPresets.destpath","destPathType":"msg","destFilename":"quickPresets.destname","destFilenameType":"msg","link":false,"overwrite":true,"x":1540,"y":920,"wires":[["a520c01c5814fdac"]]},{"id":"a2992087464cfb1c","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"6be4880a2368c056","name":"Ordner anlegen","path":"","pathType":"str","dirname":"templateDest","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1260,"y":320,"wires":[["be000d24df49fdf0"]]},{"id":"5df36f9d8643344d","type":"fs-ops-access","z":"571c9add5c07840b","g":"6be4880a2368c056","name":"Zielpfad existiert?","path":"","pathType":"str","filename":"templateDest","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":1050,"y":300,"wires":[["be000d24df49fdf0"],["a2992087464cfb1c"]]},{"id":"0dbec11db74424cd","type":"fs-ops-access","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Quick Pfad existiert?","path":"","pathType":"str","filename":"memorylocationQuickDest","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":920,"y":1420,"wires":[["970f9fc0808ec60f"],["a278233615cac6e0"]]},{"id":"a278233615cac6e0","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Ordner anlegen","path":"","pathType":"str","dirname":"memorylocationQuickDest","dirnameType":"msg","recursive":true,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1140,"y":1440,"wires":[["970f9fc0808ec60f"]]},{"id":"62529864111bc6bb","type":"debug","z":"571c9add5c07840b","name":"POST","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":510,"y":120,"wires":[]},{"id":"b0fb0ad905b35602","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Ordner anlegen","path":"","pathType":"str","dirname":"memorylocationDest","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1320,"y":1360,"wires":[["73306ab970c38caf"]]},{"id":"25bc3768c7ae50d3","type":"fs-ops-access","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Zielpfad existiert?","path":"","pathType":"str","filename":"memorylocationDest","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1110,"y":1340,"wires":[["73306ab970c38caf"],["b0fb0ad905b35602"]]},{"id":"6fa66f45920c7270","type":"function","z":"571c9add5c07840b","name":"Job ID","func":"// 2 Outputs: [weiter zum Flow, Start-Report an Aggregator]\nconst id = Date.now().toString(36) + Math.random().toString(36).slice(2, 8);\n\nmsg.job = {\n    id,\n    started: new Date().toISOString()\n};\n\n// HTTP response Handle zwischenspeichern\nflow.set(\"job:\" + id + \":res\", msg.res);\n\n// 1) Normal weiter\nconst next = RED.util.cloneMessage(msg);\n\n// 2) Start-Event (optional, registriert res auch im Aggregator)\nconst start = {\n    topic: \"report\",\n    payload: { type: \"start\" },\n    job: msg.job,\n    res: msg.res\n};\n\nreturn [next, start];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":50,"y":1040,"wires":[["448887b282ce2524","5967e1fb2cafcc8b"],["3f3caea81473eca0"]],"outputLabels":["Auswahl","Report"]},{"id":"bf80e98ba0ab77be","type":"function","z":"571c9add5c07840b","name":"Aggregator","func":"// Aggregiert ohne Counts, nur Flags je Kategorie\nconst key = \"job:\" + (msg.job?.id || \"none\");\nlet st = flow.get(key) || {\n  started: msg.job?.started || new Date().toISOString(),\n  expect: {},    // cat → true (gestartet)\n  done: {},      // cat → true (fertig)\n  hasError: {},  // cat → true (Fehler aufgetreten)\n  hasSkipped: {} // cat → true (irgendwas übersprungen)\n};\n\n// 'start' kann res registrieren\nif (msg.topic === \"report\" && msg.payload?.type === \"start\" && msg.res) {\n  flow.set(key + \":res\", msg.res);\n}\n\nif (msg.topic === \"report\" && msg.payload) {\n  const p = msg.payload;\n\n  if (p.type === \"startCat\") {\n    const cat = p.category || \"unknown\";\n    st.expect[cat] = true;\n  }\n\n  if (p.type === \"skipped\") {\n    const cat = p.category || \"unknown\";\n    st.hasSkipped[cat] = true;\n  }\n\n  if (p.type === \"error\") {\n    const cat = p.category || \"unknown\";\n    st.hasError[cat] = true;\n  }\n\n  if (p.type === \"doneCat\") {\n    const cat = p.category || \"unknown\";\n    st.done[cat] = true;\n  }\n}\n\n// sichern\nflow.set(key, st);\n\n// fertig, wenn alle erwarteten Kategorien done sind\nconst expectedCats = Object.keys(st.expect);\nconst finished = expectedCats.length > 0 && expectedCats.every(cat => st.done[cat]);\n\nconst progressMsg = { ...msg, aggregated: st };\nif (finished) {\n  const finalizeMsg = { ...msg, aggregated: st, _ready: true };\n  return [progressMsg, finalizeMsg];\n}\nreturn [progressMsg, null];","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2870,"y":1200,"wires":[[],["256f0f49f6febd7a"]],"outputLabels":["Progress","Finalize"]},{"id":"256f0f49f6febd7a","type":"function","z":"571c9add5c07840b","name":"Finalize → HTTP response","func":"// Nur antworten, wenn _ready\nif (!msg._ready) return null;\n\nconst key = \"job:\" + (msg.job?.id || \"none\");\nconst st = msg.aggregated || flow.get(key) || { expect: {}, done: {}, hasError: {}, hasSkipped: {} };\n\n// Kategorien sortiert (optional)\nconst cats = Object.keys(st.expect);\n\n// details ohne Counts\nconst details = cats.map(cat => {\n  const error = !!st.hasError[cat];\n  const skipped = !!st.hasSkipped[cat];\n\n  const status = error ? \"error\" : (skipped ? \"partial\" : \"ok\");\n  const note = status === \"partial\" ? \"some items were not present\" : undefined;\n\n  return { category: cat, status, note };\n});\n\n// overall + HTTP-Status\nconst hasError = details.some(d => d.status === \"error\");\nconst hasPartial = details.some(d => d.status === \"partial\");\nconst overall = hasError ? \"error\" : \"ok\";\n\n// res holen\nconst res = flow.get(key + \":res\");\nif (!res) {\n  flow.set(key, null);\n  flow.set(key + \":res\", null);\n  return null;\n}\n\n// Aktion, die wir schon in \"Auswahl\" auf msg.job.action gesetzt haben\nconst action = msg.job?.action || \"unknown\";\n\nmsg.res = res;\n// -> 207 jetzt auch bei \"partial\", nicht nur error\nmsg.statusCode = (hasError || hasPartial) ? 207 : 200;\n\nmsg.payload = {\n  action,             // \"store\" | \"recall\"\n  overall,            // \"ok\" | \"error\"\n  details,            // [{ category, status, note? }]\n  jobId: msg.job?.id,\n  started: st.started,\n  finished: new Date().toISOString(),\n  // Text fürs UI (Frontend nutzt bevorzugt \"message\")\n  message: hasError\n    ? \"Vorgang abgeschlossen – Fehler aufgetreten\"\n    : (hasPartial\n      ? \"Vorgang abgeschlossen – mit Hinweisen\"\n      : (action === \"store\" ? \"Store erfolgreich\" : \"Recall erfolgreich\"))\n};\n\n// Cleanup\nflow.set(key, null);\nflow.set(key + \":res\", null);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3100,"y":1200,"wires":[["13de4de9c70eec3b","468ab83d9c5f0db7"]]},{"id":"13de4de9c70eec3b","type":"http response","z":"571c9add5c07840b","name":"HTTP 200/207","statusCode":"","headers":{},"x":3340,"y":1200,"wires":[]},{"id":"468ab83d9c5f0db7","type":"debug","z":"571c9add5c07840b","name":"HTTP RESPONSE","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":3210,"y":1260,"wires":[]},{"id":"5967e1fb2cafcc8b","type":"debug","z":"571c9add5c07840b","name":"debug 5","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":240,"y":800,"wires":[]},{"id":"9d1aa8c292ad24aa","type":"link in","z":"571c9add5c07840b","name":"REPORT IN","links":["3f3caea81473eca0","a4ad4a34a821d771","963ca3740f921cf8","59542c4cb71f0d92","9ccfc5bdc5b504f8","8a745d4f06ab7d74","5f59f44b2aac691e","1b55abfd770dda78","a77776b195ab0290"],"x":2755,"y":1260,"wires":[["bf80e98ba0ab77be"]]},{"id":"3f3caea81473eca0","type":"link out","z":"571c9add5c07840b","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":185,"y":880,"wires":[]},{"id":"c53ffd5c163eadcb","type":"function","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Counter ++ (bulk)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1870,"y":1320,"wires":[["05d86ab1ea26b37b"]]},{"id":"a520c01c5814fdac","type":"function","z":"571c9add5c07840b","name":"Counter -- & DONE","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nlet n = flow.get(key) || 0;\nif (n > 0) n--; else n = 0;\nflow.set(key, n);\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: \"report\",\n    payload: { type: \"doneCat\", category: cat },\n    job: msg.job\n  });\n}\nreturn null;","outputs":1,"noerr":0,"x":2710,"y":1140,"wires":[["bf80e98ba0ab77be"]]},{"id":"d60bb26669de3657","type":"fs-ops-access","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Quick Src existiert?","path":"","pathType":"str","filename":"quickPresets.src","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1330,"y":1400,"wires":[["32f7122ac9fe151b"],["e83c364cfbd30d42"]]},{"id":"32f7122ac9fe151b","type":"function","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Counter ++ (quick)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1570,"y":1380,"wires":[["81215275a16d8c68"]]},{"id":"e83c364cfbd30d42","type":"function","z":"571c9add5c07840b","d":true,"g":"b1253b63671bc6bf","name":"REPORT SKIPPED","func":"node.send({\n  topic: \"report\",\n  payload: { type: \"skipped\", category: msg.category || \"unknown\" },\n  job: msg.job\n});\nreturn null;","outputs":1,"noerr":0,"x":1570,"y":1420,"wires":[["bf80e98ba0ab77be"]]},{"id":"a4ad4a34a821d771","type":"link out","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":875,"y":1460,"wires":[]},{"id":"46ac2dd8fba3cbd0","type":"catch","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"CATCH memoryLocation","scope":["0b70528cdccb53e7","05d86ab1ea26b37b","81215275a16d8c68","a278233615cac6e0","b0fb0ad905b35602","25bc3768c7ae50d3","0dbec11db74424cd"],"uncaught":false,"x":610,"y":1420,"wires":[["facd8f20ee00818d"]]},{"id":"facd8f20ee00818d","type":"function","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"ERROR → report + counter -- + doneCat","func":"const category = msg.category || 'memoryLocation';\n\n// 1) Fehlertext bestimmen\nconst e = msg.error || {};\nconst message = e.message || (typeof e === 'string' ? e : (e && e.toString ? e.toString() : 'unknown error'));\n\n// 2) error an Aggregator senden\nnode.send({\n  topic: 'report',\n  payload: { type: 'error', category, message },\n  job: msg.job\n});\n\n// 3) pending-Counter dekrementieren (falls zuvor ++ passiert ist)\nconst key = `pending:${msg.job?.id || 'none'}:${category}`;\nlet n = flow.get(key) || 0;\nif (n > 0) {\n  n = n - 1;\n  flow.set(key, n);\n}\n\n// 4) Wenn nichts mehr pending → doneCat, damit Aggregator abschließen kann\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: 'report',\n    payload: { type: 'doneCat', category },\n    job: msg.job\n  });\n}\n\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":1460,"wires":[["a4ad4a34a821d771"]]},{"id":"a553c31ecabc9da0","type":"catch","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"CATCH trackdata","scope":["4b4b88c1be70ec42","eecef021cf5ea5f9","e406fa5e851023e7","aa88ebcbb973c6d3","51858e71739fe5f0","b20e0716bb69c289","0df45444bc06051c"],"uncaught":false,"x":580,"y":1640,"wires":[["3794b8b88a124018"]]},{"id":"3794b8b88a124018","type":"function","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"ERROR → report + counter -- + doneCat","func":"const category = msg.category || 'trackdatarecall';\n\n// 1) Fehlertext bestimmen\nconst e = msg.error || {};\nconst message = e.message || (typeof e === 'string' ? e : (e && e.toString ? e.toString() : 'unknown error'));\n\n// 2) error an Aggregator senden\nnode.send({\n  topic: 'report',\n  payload: { type: 'error', category, message },\n  job: msg.job\n});\n\n// 3) pending-Counter dekrementieren (falls zuvor ++ passiert ist)\nconst key = `pending:${msg.job?.id || 'none'}:${category}`;\nlet n = flow.get(key) || 0;\nif (n > 0) {\n  n = n - 1;\n  flow.set(key, n);\n}\n\n// 4) Wenn nichts mehr pending → doneCat, damit Aggregator abschließen kann\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: 'report',\n    payload: { type: 'doneCat', category },\n    job: msg.job\n  });\n}\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":1680,"wires":[["963ca3740f921cf8"]]},{"id":"51858e71739fe5f0","type":"fs-ops-access","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Zielpfad existiert?","path":"","pathType":"str","filename":"trackdataDest","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1110,"y":1560,"wires":[["b777a94f111ff071"],["e406fa5e851023e7"]]},{"id":"e406fa5e851023e7","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Ordner anlegen","path":"","pathType":"str","dirname":"trackdataDest","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1320,"y":1600,"wires":[["b777a94f111ff071"]]},{"id":"4e89fbef3af60f1c","type":"function","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Counter ++ (bulk)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1870,"y":1560,"wires":[["4b4b88c1be70ec42"]]},{"id":"0df45444bc06051c","type":"fs-ops-access","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Quick Pfad existiert?","path":"","pathType":"str","filename":"trackdataQuickDest","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":920,"y":1640,"wires":[["67bd53b720f256d8"],["aa88ebcbb973c6d3"]]},{"id":"aa88ebcbb973c6d3","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Ordner anlegen","path":"","pathType":"str","dirname":"trackdataQuickDest","dirnameType":"msg","recursive":true,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1140,"y":1680,"wires":[["67bd53b720f256d8"]]},{"id":"6d456d2a0be0d42d","type":"fs-ops-access","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Quick Src existiert?","path":"","pathType":"str","filename":"quickPresets.src","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1330,"y":1640,"wires":[["7add7f28bc5bf8dd"],["e96c8725de1a8e8f"]]},{"id":"7add7f28bc5bf8dd","type":"function","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Counter ++ (quick)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1570,"y":1620,"wires":[["eecef021cf5ea5f9"]]},{"id":"e96c8725de1a8e8f","type":"function","z":"571c9add5c07840b","d":true,"g":"843cd62abaaec61f","name":"REPORT SKIPPED","func":"node.send({\n  topic: \"report\",\n  payload: { type: \"skipped\", category: msg.category || \"unknown\" },\n  job: msg.job\n});\nreturn null;","outputs":1,"noerr":0,"x":1570,"y":1660,"wires":[["bf80e98ba0ab77be"]]},{"id":"963ca3740f921cf8","type":"link out","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":875,"y":1680,"wires":[]},{"id":"1066641335f87e3b","type":"catch","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"CATCH clipeffects","scope":["e6c214decef4eadd","6f1bdfeeef1718e0","bfc6384b6602ee8c","d3407d76b6b96bd9","9d5687462b806359","338d50cd66e07956","98b18cba1d87bf68"],"uncaught":false,"x":590,"y":1180,"wires":[["2a28990d8768c2bf"]]},{"id":"2a28990d8768c2bf","type":"function","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"ERROR → report + counter -- + doneCat","func":"const category = msg.category || 'clipfxpresets';\n\n// 1) Fehlertext bestimmen\nconst e = msg.error || {};\nconst message = e.message || (typeof e === 'string' ? e : (e && e.toString ? e.toString() : 'unknown error'));\n\n// 2) error an Aggregator senden\nnode.send({\n  topic: 'report',\n  payload: { type: 'error', category, message },\n  job: msg.job\n});\n\n// 3) pending-Counter dekrementieren (falls zuvor ++ passiert ist)\nconst key = `pending:${msg.job?.id || 'none'}:${category}`;\nlet n = flow.get(key) || 0;\nif (n > 0) {\n  n = n - 1;\n  flow.set(key, n);\n}\n\n// 4) Wenn nichts mehr pending → doneCat, damit Aggregator abschließen kann\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: 'report',\n    payload: { type: 'doneCat', category },\n    job: msg.job\n  });\n}\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":1220,"wires":[["59542c4cb71f0d92"]]},{"id":"bfc6384b6602ee8c","type":"fs-ops-access","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Zielpfad existiert?","path":"","pathType":"str","filename":"clipeffectDest","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1110,"y":1100,"wires":[["e3fc98cad4c5a589"],["9d5687462b806359"]]},{"id":"e3fc98cad4c5a589","type":"split","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"split files","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"files","x":1300,"y":1080,"wires":[["3e07cec2c354b562"]]},{"id":"3e07cec2c354b562","type":"switch","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Quick Presets rausfiltern","property":"files","propertyType":"msg","rules":[{"t":"neq","v":"Quick Presets","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1490,"y":1080,"wires":[["c80234e5017b0a98"]]},{"id":"b8b13e0434601759","type":"function","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Counter ++ (bulk)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1870,"y":1080,"wires":[["98b18cba1d87bf68"]]},{"id":"9d5687462b806359","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Ordner anlegen","path":"","pathType":"str","dirname":"clipeffectDest","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1320,"y":1120,"wires":[["e3fc98cad4c5a589"]]},{"id":"02b22dc642dc2fef","type":"fs-ops-access","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Quick Src existiert?","path":"","pathType":"str","filename":"quickPresets.src","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":1330,"y":1160,"wires":[["d19e7fada3c78c77"],["b838cce695308516"]]},{"id":"7723b0bc17fd7e13","type":"split","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"split quick","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"quickPresets","x":1130,"y":1160,"wires":[["02b22dc642dc2fef"]]},{"id":"d3407d76b6b96bd9","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Ordner anlegen","path":"","pathType":"str","dirname":"clipeffectQuickDest","dirnameType":"msg","recursive":true,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1140,"y":1200,"wires":[["7723b0bc17fd7e13"]]},{"id":"6f1bdfeeef1718e0","type":"fs-ops-access","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Quick Pfad existiert?","path":"","pathType":"str","filename":"clipeffectQuickDest","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":920,"y":1180,"wires":[["7723b0bc17fd7e13"],["d3407d76b6b96bd9"]]},{"id":"59542c4cb71f0d92","type":"link out","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":875,"y":1220,"wires":[]},{"id":"d19e7fada3c78c77","type":"function","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Counter ++ (quick)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1570,"y":1140,"wires":[["338d50cd66e07956"]]},{"id":"b838cce695308516","type":"function","z":"571c9add5c07840b","d":true,"g":"8946011e70d4ed9e","name":"REPORT SKIPPED","func":"node.send({\n  topic: \"report\",\n  payload: { type: \"skipped\", category: msg.category || \"unknown\" },\n  job: msg.job\n});\nreturn null;","outputs":1,"noerr":0,"x":1570,"y":1180,"wires":[["bf80e98ba0ab77be"]]},{"id":"57085a5e232a9565","type":"catch","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"CATCH kbshortcuts","scope":["08170b3dbaac1481","3d51bf9aaaa43479","d95b6caced6d8123","49b6df07bce631a3","1e1ceeb243c3e34b","056065ca8f0d9a0c","d48d6bfe020662f4","126ecdd30c809417"],"uncaught":false,"x":590,"y":1880,"wires":[["563eea3d7ff40ed2"]]},{"id":"563eea3d7ff40ed2","type":"function","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"ERROR → report + counter -- + doneCat","func":"const category = msg.category || 'keyboardshortcuts';\n\n// 1) Fehlertext bestimmen\nconst e = msg.error || {};\nconst message = e.message || (typeof e === 'string' ? e : (e && e.toString ? e.toString() : 'unknown error'));\n\n// 2) error an Aggregator senden\nnode.send({\n  topic: 'report',\n  payload: { type: 'error', category, message },\n  job: msg.job\n});\n\n// 3) pending-Counter dekrementieren (falls zuvor ++ passiert ist)\nconst key = `pending:${msg.job?.id || 'none'}:${category}`;\nlet n = flow.get(key) || 0;\nif (n > 0) {\n  n = n - 1;\n  flow.set(key, n);\n}\n\n// 4) Wenn nichts mehr pending → doneCat, damit Aggregator abschließen kann\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: 'report',\n    payload: { type: 'doneCat', category },\n    job: msg.job\n  });\n}\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":1920,"wires":[["9ccfc5bdc5b504f8"]]},{"id":"9ccfc5bdc5b504f8","type":"link out","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":875,"y":1920,"wires":[]},{"id":"1e1ceeb243c3e34b","type":"fs-ops-access","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Zielpfad existiert?","path":"","pathType":"str","filename":"kbshortcutDest","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1110,"y":1780,"wires":[["b08666bf6d1a972b"],["d95b6caced6d8123"]]},{"id":"b08666bf6d1a972b","type":"split","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"split files","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"files","x":1300,"y":1780,"wires":[["cb04caf391cac468"]]},{"id":"cb04caf391cac468","type":"switch","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Quick Presets rausfiltern","property":"files","propertyType":"msg","rules":[{"t":"neq","v":"Quick Presets","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1490,"y":1780,"wires":[["4190da9a9792cbcc"]]},{"id":"d95b6caced6d8123","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Ordner anlegen","path":"","pathType":"str","dirname":"kbshortcutDest","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1320,"y":1820,"wires":[["b08666bf6d1a972b"]]},{"id":"eecbec774963fbb5","type":"function","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Counter ++ (bulk)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1870,"y":1780,"wires":[["08170b3dbaac1481"]]},{"id":"d48d6bfe020662f4","type":"fs-ops-access","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Quick Pfad existiert?","path":"","pathType":"str","filename":"kbshortcutQuickDest","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":920,"y":1860,"wires":[["f1e3f6051c6ae603"],["056065ca8f0d9a0c"]]},{"id":"f1e3f6051c6ae603","type":"split","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"split quick","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"quickPresets","x":1130,"y":1860,"wires":[["49b6df07bce631a3"]]},{"id":"056065ca8f0d9a0c","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Ordner anlegen","path":"","pathType":"str","dirname":"kbshortcutQuickDest","dirnameType":"msg","recursive":true,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1140,"y":1900,"wires":[["f1e3f6051c6ae603"]]},{"id":"49b6df07bce631a3","type":"fs-ops-access","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Quick Src existiert?","path":"","pathType":"str","filename":"quickPresets.src","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1330,"y":1860,"wires":[["13cf5781fe9bad4b"],["2ed8480660f224f9"]]},{"id":"13cf5781fe9bad4b","type":"function","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Counter ++ (quick)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1570,"y":1840,"wires":[["3d51bf9aaaa43479"]]},{"id":"2ed8480660f224f9","type":"function","z":"571c9add5c07840b","d":true,"g":"f2c7b2760eb46d43","name":"REPORT SKIPPED","func":"node.send({\n  topic: \"report\",\n  payload: { type: \"skipped\", category: msg.category || \"unknown\" },\n  job: msg.job\n});\nreturn null;","outputs":1,"noerr":0,"x":1570,"y":1880,"wires":[["bf80e98ba0ab77be"]]},{"id":"3d51bf9aaaa43479","type":"fs-ops-copy","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Quick Presets kopieren","sourcePath":"","sourcePathType":"str","sourceFilename":"quickPresets.src","sourceFilenameType":"msg","destPath":"quickPresets.destpath","destPathType":"msg","destFilename":"quickPresets.destname","destFilenameType":"msg","link":false,"overwrite":true,"x":1810,"y":1840,"wires":[["a520c01c5814fdac"]]},{"id":"8a745d4f06ab7d74","type":"link out","z":"571c9add5c07840b","g":"6be4880a2368c056","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":1025,"y":380,"wires":[]},{"id":"be000d24df49fdf0","type":"function","z":"571c9add5c07840b","g":"6be4880a2368c056","name":"Counter ++ (bulk)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1470,"y":300,"wires":[["03c50850773c2cb2"]]},{"id":"a35593c5dcda4bb3","type":"catch","z":"571c9add5c07840b","g":"6be4880a2368c056","name":"CATCH template","scope":["03c50850773c2cb2","a2992087464cfb1c","5df36f9d8643344d"],"uncaught":false,"x":720,"y":340,"wires":[["9a3c9241d9bdb9dd"]]},{"id":"9a3c9241d9bdb9dd","type":"function","z":"571c9add5c07840b","g":"6be4880a2368c056","name":"ERROR → report + counter -- + doneCat","func":"const category = msg.category || 'templates';\n\n// 1) Fehlertext bestimmen\nconst e = msg.error || {};\nconst message = e.message || (typeof e === 'string' ? e : (e && e.toString ? e.toString() : 'unknown error'));\n\n// 2) error an Aggregator senden\nnode.send({\n  topic: 'report',\n  payload: { type: 'error', category, message },\n  job: msg.job\n});\n\n// 3) pending-Counter dekrementieren (falls zuvor ++ passiert ist)\nconst key = `pending:${msg.job?.id || 'none'}:${category}`;\nlet n = flow.get(key) || 0;\nif (n > 0) {\n  n = n - 1;\n  flow.set(key, n);\n}\n\n// 4) Wenn nichts mehr pending → doneCat, damit Aggregator abschließen kann\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: 'report',\n    payload: { type: 'doneCat', category },\n    job: msg.job\n  });\n}\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":380,"wires":[["8a745d4f06ab7d74"]]},{"id":"5a142e72217b90d9","type":"function","z":"571c9add5c07840b","g":"24b94f8f5582405c","name":"Track Presets Funktion","func":"// trackkpreset Funktion (Outputs: 2)\n// Out1 = normal weiter, Out2 = startCat / error\ntry {\n    const { PathMitarbeiter, PathPTUser, activeUser, action } = msg.payload || {};\n    msg.category = \"trackpresets\";\n\n    // startCat nur 1x nebenbei senden\n    let startCat = null;\n    if (msg.job && msg.job.id) {\n        startCat = {\n            topic: \"report\",\n            payload: { type: \"startCat\", category: msg.category },\n            job: msg.job\n        };\n    }\n\n    if (action === \"recall\") {\n        msg.trackpresetSrc = `${PathMitarbeiter}/${activeUser}/immo24/trackpresets`;\n        msg.trackpresetDest = `${PathPTUser}/Track Presets/${activeUser}`;\n        return [msg, startCat];\n    } else if (action === \"store\") {\n        msg.trackpresetSrc = `${PathPTUser}/Track Presets/${activeUser}`;\n        msg.trackpresetDest = `${PathMitarbeiter}/${activeUser}/immo24/trackpresets`;\n        return [msg, startCat];\n    }\n\n    // ungültige Aktion\n    return [null, startCat];\n\n} catch (err) {\n    const errorMsg = {\n        topic: \"report\",\n        payload: { type: \"error\", category: \"trackpresets\", message: err.message },\n        job: msg.job\n    };\n    return [null, errorMsg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":480,"wires":[["09bcc4b2263e608f"],["5f59f44b2aac691e"]],"outputLabels":["","REPORT IN"]},{"id":"71a251e7b77b506b","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"24b94f8f5582405c","name":"Ordner anlegen","path":"","pathType":"str","dirname":"trackpresetDest","dirnameType":"msg","recursive":false,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1260,"y":500,"wires":[["dd5b551627f9f46d"]]},{"id":"09bcc4b2263e608f","type":"fs-ops-access","z":"571c9add5c07840b","g":"24b94f8f5582405c","name":"Zielpfad existiert?","path":"","pathType":"str","filename":"trackpresetDest","filenameType":"msg","read":true,"write":false,"throwerror":false,"x":1050,"y":480,"wires":[["dd5b551627f9f46d"],["71a251e7b77b506b"]]},{"id":"5f59f44b2aac691e","type":"link out","z":"571c9add5c07840b","g":"24b94f8f5582405c","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":1025,"y":560,"wires":[]},{"id":"dd5b551627f9f46d","type":"function","z":"571c9add5c07840b","g":"24b94f8f5582405c","name":"Counter ++ (bulk)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1470,"y":480,"wires":[["2614347baa37cc3e"]]},{"id":"201c4cbdc53b4b05","type":"catch","z":"571c9add5c07840b","g":"24b94f8f5582405c","name":"CATCH trackpresets","scope":["2614347baa37cc3e","71a251e7b77b506b","09bcc4b2263e608f"],"uncaught":false,"x":730,"y":520,"wires":[["c34217e5aaba2b25"]]},{"id":"c34217e5aaba2b25","type":"function","z":"571c9add5c07840b","g":"24b94f8f5582405c","name":"ERROR → report + counter -- + doneCat","func":"const category = msg.category || 'trackpresets';\n\n// 1) Fehlertext bestimmen\nconst e = msg.error || {};\nconst message = e.message || (typeof e === 'string' ? e : (e && e.toString ? e.toString() : 'unknown error'));\n\n// 2) error an Aggregator senden\nnode.send({\n  topic: 'report',\n  payload: { type: 'error', category, message },\n  job: msg.job\n});\n\n// 3) pending-Counter dekrementieren (falls zuvor ++ passiert ist)\nconst key = `pending:${msg.job?.id || 'none'}:${category}`;\nlet n = flow.get(key) || 0;\nif (n > 0) {\n  n = n - 1;\n  flow.set(key, n);\n}\n\n// 4) Wenn nichts mehr pending → doneCat, damit Aggregator abschließen kann\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: 'report',\n    payload: { type: 'doneCat', category },\n    job: msg.job\n  });\n}\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":560,"wires":[["5f59f44b2aac691e"]]},{"id":"1b55abfd770dda78","type":"link out","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":885,"y":960,"wires":[]},{"id":"5ee9d6d3e3c4f2bd","type":"function","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Counter ++ (bulk)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1910,"y":880,"wires":[["77cfbeec620abcd6","9bf63010af8c1d3b"]]},{"id":"efcec27fd6452b4e","type":"fs-ops-access","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Quick Src existiert?","path":"","pathType":"str","filename":"quickPresets.src","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1030,"y":920,"wires":[["e940af9352af930c"],["312b4db1c260c987"]]},{"id":"312b4db1c260c987","type":"function","z":"571c9add5c07840b","d":true,"g":"c228aba48bf6fd27","name":"REPORT SKIPPED","func":"node.send({\n  topic: \"report\",\n  payload: { type: \"skipped\", category: msg.category || \"unknown\" },\n  job: msg.job\n});\nreturn null;","outputs":1,"noerr":0,"x":1270,"y":960,"wires":[["bf80e98ba0ab77be"]]},{"id":"e940af9352af930c","type":"function","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Counter ++ (quick)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1270,"y":920,"wires":[["897d2cccd85f4c90"]]},{"id":"9ee5da509d5220c9","type":"catch","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"CATCH fadepresets","scope":["16b240c5ebff9643","77cfbeec620abcd6","b8a6163e7afb5acf","efcec27fd6452b4e","897d2cccd85f4c90","03d2b25b9bdaa836","9bf63010af8c1d3b","570bac17347d885f"],"uncaught":false,"x":590,"y":920,"wires":[["ccb723d0652e28eb"]]},{"id":"ccb723d0652e28eb","type":"function","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"ERROR → report + counter -- + doneCat","func":"const category = msg.category || 'fadepresets';\n\n// 1) Fehlertext bestimmen\nconst e = msg.error || {};\nconst message = e.message || (typeof e === 'string' ? e : (e && e.toString ? e.toString() : 'unknown error'));\n\n// 2) error an Aggregator senden\nnode.send({\n  topic: 'report',\n  payload: { type: 'error', category, message },\n  job: msg.job\n});\n\n// 3) pending-Counter dekrementieren (falls zuvor ++ passiert ist)\nconst key = `pending:${msg.job?.id || 'none'}:${category}`;\nlet n = flow.get(key) || 0;\nif (n > 0) {\n  n = n - 1;\n  flow.set(key, n);\n}\n\n// 4) Wenn nichts mehr pending → doneCat, damit Aggregator abschließen kann\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: 'report',\n    payload: { type: 'doneCat', category },\n    job: msg.job\n  });\n}\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":960,"wires":[["1b55abfd770dda78"]]},{"id":"c3ed416bf7cc8c57","type":"catch","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"CATCH pluginsettings","scope":["3118fab255283b8b","8a66e0bb62460b38","a2619de64e762d39","0aff157563034614","f6530849f84ba28d","ea1bb40fdd31379f"],"uncaught":false,"x":600,"y":740,"wires":[["780f8b7b325e3923"]]},{"id":"780f8b7b325e3923","type":"function","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"ERROR → report + counter -- + doneCat","func":"const category = msg.category || 'pluginsettings';\n\n// 1) Fehlertext bestimmen\nconst e = msg.error || {};\nconst message = e.message || (typeof e === 'string' ? e : (e && e.toString ? e.toString() : 'unknown error'));\n\n// 2) error an Aggregator senden\nnode.send({\n  topic: 'report',\n  payload: { type: 'error', category, message },\n  job: msg.job\n});\n\n// 3) pending-Counter dekrementieren (falls zuvor ++ passiert ist)\nconst key = `pending:${msg.job?.id || 'none'}:${category}`;\nlet n = flow.get(key) || 0;\nif (n > 0) {\n  n = n - 1;\n  flow.set(key, n);\n}\n\n// 4) Wenn nichts mehr pending → doneCat, damit Aggregator abschließen kann\nif (n === 0 && msg.job && msg.job.id) {\n  node.send({\n    topic: 'report',\n    payload: { type: 'doneCat', category },\n    job: msg.job\n  });\n}\n\nreturn null;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":780,"wires":[["a77776b195ab0290"]]},{"id":"71a4fd4af2c51838","type":"function","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Counter ++ (bulk)","func":"const cat = msg.category || \"unknown\";\nconst key = `pending:${msg.job?.id || 'none'}:${cat}`;\nflow.set(key, (flow.get(key) || 0) + 1);\nreturn msg;","outputs":1,"noerr":0,"x":1950,"y":700,"wires":[["9078dc5bb0f1fcb5"]]},{"id":"a77776b195ab0290","type":"link out","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"REPORT OUT","mode":"link","links":["9d1aa8c292ad24aa"],"x":885,"y":780,"wires":[]},{"id":"74dfc0289041bfab","type":"function","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Start CAT","func":"// Plug-In Settings Start (Outputs: 2)\n// Out1 = passthrough, Out2 = startCat / error\ntry {\n    // Grunddaten / Kategorie\n    const { PathPTUser } = msg.payload || {};\n    msg.category = \"pluginsettings\";\n\n    // (Optional) hier weiterhin den Basis-Pfad setzen:\n    msg.payload = msg.payload || {};\n    msg.payload.PluginPath = `${PathPTUser}/Plug-In Settings`;\n\n    // startCat nur 1× pro Job/Kategorie senden\n    let report = null;\n    const jobId = msg.job?.id || \"none\";\n    const key = `startcat:${jobId}:${msg.category}`;\n    if (!flow.get(key) && msg.job && msg.job.id) {\n        flow.set(key, true);\n        report = {\n            topic: \"report\",\n            payload: { type: \"startCat\", category: msg.category },\n            job: msg.job\n        };\n    }\n\n    // Out1: normal weiter in deinen Scan/Stats-Flow\n    // Out2: startCat (oder null, wenn schon gesendet)\n    return [msg, report];\n\n} catch (err) {\n    // Fehler direkt reporten (Out2)\n    return [null, {\n        topic: \"report\",\n        payload: { type: \"error\", category: \"pluginsettings\", message: err.message },\n        job: msg.job\n    }];\n}\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":700,"wires":[["3118fab255283b8b"],["a77776b195ab0290"]],"outputLabels":["","REPORT IN"]},{"id":"f6530849f84ba28d","type":"fs-ops-access","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Zielpfad existiert?","path":"","pathType":"str","filename":"pluginsettingDest","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":2270,"y":760,"wires":[["a2619de64e762d39"],["ea1bb40fdd31379f"]]},{"id":"ea1bb40fdd31379f","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Ordner anlegen","path":"","pathType":"str","dirname":"pluginsettingDest","dirnameType":"msg","recursive":true,"mode":"755","fullpath":"directory","fullpathType":"msg","x":2480,"y":780,"wires":[["a2619de64e762d39"]]},{"id":"0aff157563034614","type":"fs-ops-access","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"","path":"","pathType":"str","filename":"payload.userDir","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1590,"y":740,"wires":[["8a66e0bb62460b38"],[]]},{"id":"9bf63010af8c1d3b","type":"fs-ops-access","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Zielpfad existiert?","path":"","pathType":"str","filename":"destFolder","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":2050,"y":940,"wires":[["77cfbeec620abcd6"],["570bac17347d885f"]]},{"id":"570bac17347d885f","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Ordner anlegen","path":"","pathType":"str","dirname":"destFolder","dirnameType":"msg","recursive":true,"mode":"755","fullpath":"directory","fullpathType":"msg","x":2260,"y":960,"wires":[["77cfbeec620abcd6"]]},{"id":"897d2cccd85f4c90","type":"fs-ops-access","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Quick Pfad existiert?","path":"","pathType":"str","filename":"quickPresets.destpath","filenameType":"msg","read":false,"write":false,"throwerror":false,"x":1520,"y":980,"wires":[["b8a6163e7afb5acf"],["03d2b25b9bdaa836"]]},{"id":"03d2b25b9bdaa836","type":"fs-ops-mkdir","z":"571c9add5c07840b","g":"c228aba48bf6fd27","name":"Ordner anlegen","path":"","pathType":"str","dirname":"quickPresets.destpath","dirnameType":"msg","recursive":true,"mode":"755","fullpath":"directory","fullpathType":"msg","x":1800,"y":960,"wires":[["b8a6163e7afb5acf"]]},{"id":"03c50850773c2cb2","type":"fs-extra-copy","z":"571c9add5c07840b","g":"6be4880a2368c056","name":"Copy Templates","source":"templateSrc","sourceType":"msg","target":"templateDest","targetType":"msg","x":1680,"y":300,"wires":[["a520c01c5814fdac"]]},{"id":"a2619de64e762d39","type":"fs-extra-copy","z":"571c9add5c07840b","g":"fc811062d1cbf27f","name":"Copy Plug-In Settings","source":"pluginsettingSrc","sourceType":"msg","target":"pluginsettingDest","targetType":"msg","x":2520,"y":700,"wires":[["a520c01c5814fdac"]]},{"id":"05d86ab1ea26b37b","type":"fs-extra-copy","z":"571c9add5c07840b","g":"b1253b63671bc6bf","name":"Copy Memory Location Presets","source":"memorylocationSrc","sourceType":"msg","target":"memorylocationDest","targetType":"msg","x":2110,"y":1320,"wires":[["a520c01c5814fdac"]]},{"id":"4b4b88c1be70ec42","type":"fs-extra-copy","z":"571c9add5c07840b","g":"843cd62abaaec61f","name":"Copy TrackData Presets","source":"trackdataSrc","sourceType":"msg","target":"trackdataDest","targetType":"msg","x":2090,"y":1560,"wires":[["a520c01c5814fdac"]]},{"id":"98b18cba1d87bf68","type":"fs-extra-copy","z":"571c9add5c07840b","g":"8946011e70d4ed9e","name":"Copy Clip Effects Presets","source":"clipeffectSrc","sourceType":"msg","target":"clipeffectDest","targetType":"msg","x":2090,"y":1080,"wires":[["a520c01c5814fdac"]]},{"id":"08170b3dbaac1481","type":"fs-extra-copy","z":"571c9add5c07840b","g":"f2c7b2760eb46d43","name":"Copy Keyboard Shortcuts","source":"kbshortcutSrc","sourceType":"msg","target":"kbshortcutDest","targetType":"msg","x":2090,"y":1780,"wires":[["a520c01c5814fdac"]]},{"id":"2614347baa37cc3e","type":"fs-extra-copy","z":"571c9add5c07840b","g":"24b94f8f5582405c","name":"Copy Track Presets","source":"trackpresetSrc","sourceType":"msg","target":"trackpresetDest","targetType":"msg","x":1690,"y":480,"wires":[["a520c01c5814fdac"]]}]