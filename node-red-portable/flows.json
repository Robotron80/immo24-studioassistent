[
    {
        "id": "dc0d981398a42d88",
        "type": "tab",
        "label": "Immo24 Global",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b1c585f0d25b86fd",
        "type": "tab",
        "label": "[Modul] Produktionsbuch",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "24039523dcf573b0",
        "type": "tab",
        "label": "[Modul] Pro Tools",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f10408fa2622e18b",
        "type": "group",
        "z": "24039523dcf573b0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "63f5b463c89c3169",
            "910c53735d84f790",
            "0cc42adec31147b4",
            "1390220b613fe431",
            "2fd0269e7a3327db",
            "46b6eeab442c1d66",
            "6c2a4aeaf0c3a74d",
            "3a221d432cfa6e26",
            "6aa1830edc542c65",
            "cada920e0c496a2a",
            "b49ecebf74226b1b",
            "eb267ef800bfbb25",
            "292a91e702d4b8f2",
            "9faf9391590124e0",
            "d0a06d0cfd864180",
            "3f77b019c8edb6bf",
            "264bc4c695f8dccc",
            "12439cf3be2c7508",
            "07562e46a647ed75",
            "f28ee83432a5c3b6",
            "0d7bcb2c46606757",
            "e3a6280e0cd022c3"
        ],
        "x": 184,
        "y": 119,
        "w": 1652,
        "h": 382
    },
    {
        "id": "0e1923748c0d505b",
        "type": "group",
        "z": "dc0d981398a42d88",
        "name": "User",
        "style": {
            "label": true
        },
        "nodes": [
            "7e2571b409d5d436",
            "b0eac16b480b0f6c",
            "7338a31d62aa380a",
            "84c87e607497b34b",
            "f683da12cce40141",
            "07c077a225675b93",
            "13bfc916dbc33c03",
            "a101d0e8677d1f77",
            "76182b64e9b2d9a8",
            "3e3926b522449b96",
            "28748a6ed884e72a",
            "3f759076853c1377",
            "bccb17f9aaafa790",
            "b912b7f2e8b5d87b",
            "c327d6b8c52ff001",
            "ae748b2fe00cc633",
            "a56e7a1f4e0144f2",
            "e017b3a006d31550",
            "2c322a0a469a0476"
        ],
        "x": 354,
        "y": 979,
        "w": 1978,
        "h": 662
    },
    {
        "id": "2ae494e9447c2087",
        "type": "group",
        "z": "dc0d981398a42d88",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e05512e54561bc65",
            "2eb8ddaff3cdbe23"
        ],
        "x": 368,
        "y": 193,
        "w": 1744,
        "h": 754
    },
    {
        "id": "c0de7eb24d59090d",
        "type": "group",
        "z": "b1c585f0d25b86fd",
        "name": "Formular",
        "style": {
            "label": true
        },
        "nodes": [
            "5bb2e238bb454a2c",
            "b5243e0c66e2913c",
            "e328548f79e528dd",
            "3107bbdc156cb1fd",
            "e1a4d541d27ada53",
            "129513f184e0674f",
            "0f8b5377268eb5ef",
            "cd4727e3b14deeff",
            "8386ea793ecb5d63",
            "5c14c4543faf4c94",
            "6ee48779a11bb9b2",
            "e1e51838689893d3",
            "a1b73032b0467d2a",
            "18fb279e655df17d",
            "show_group",
            "65fcec03c7dba8bf",
            "4f8bcb239e8648f0",
            "8d69f8ce150fa10a",
            "5cd50f15353cd326",
            "867b11b1eea5e253",
            "3ecfee9bb798f6ec",
            "18ace834940f05cc",
            "dfcc8cb3d516c81c",
            "943691cfea40756e",
            "0cd05b587161c992",
            "3595a0c70851faf8",
            "ae1e298cdec965b1",
            "242b8c8906ac8743",
            "d3b77d7fcf6d30e0",
            "72355bd8351fcc3a",
            "889ad6ac5d382c0c",
            "1654c193d5f6ae09",
            "ee69128ef9ab3d71",
            "d0cfb42fb9db00ba",
            "c068a363626d3aac",
            "dcf62c9ed6a0c911",
            "2874bd00f08fcb06",
            "4f79fc09a4a552d8",
            "c6bbd2b9b2d5d462",
            "4b0349befccb3ec9"
        ],
        "x": 118,
        "y": 93,
        "w": 2554,
        "h": 995.5
    },
    {
        "id": "90a1257292e52c0c",
        "type": "group",
        "z": "b1c585f0d25b86fd",
        "name": "Projekt anlegen",
        "style": {
            "label": true
        },
        "nodes": [
            "c8ba1d241617ce9c",
            "fca50c1326be8ea0",
            "91c3a5fe4e5eecf4",
            "b48da6116f6c4a9b",
            "8a63e541bf541b68",
            "af8fbaa4a773e082",
            "00cb38d09cf73f62",
            "a34bec94987a6255",
            "88664cf125d3933c",
            "e2f65bc098f601a4",
            "049d373b283a3afc",
            "daa77dbe62344f24",
            "52dd943e6e75ae72",
            "5be990aae94e6a3d",
            "79d9833babec0616",
            "3d4b5f86c5ffa01f",
            "f60de5ae351b2bf4",
            "740eded456c45a8d",
            "f6c56536578c78fe",
            "e2dfeadde161b489",
            "d86904636be0f112",
            "d008ed5534cdc428",
            "09f7e3677e960a0d",
            "0d1faa7a2ad224be",
            "d92ffa0a71a5bdab",
            "112134d881c75205",
            "4877009023c9a7ca"
        ],
        "x": 114,
        "y": 1139,
        "w": 1778,
        "h": 555.5
    },
    {
        "id": "b38df26cbb8bb4b3",
        "type": "group",
        "z": "b1c585f0d25b86fd",
        "name": "Produktionsbuch Konfiguration",
        "style": {
            "label": true
        },
        "nodes": [
            "b41e02a9f041aa19",
            "33ba96310cfdeb2a",
            "865166a918f8dd7f",
            "a4d41af963187fb7",
            "2ce41bb4bd723b67",
            "41a1604a42cf8a96",
            "2fe371eb71de6440",
            "a67a2cab1a358d44",
            "d2ddab99473b3656",
            "027af555cc7c1332",
            "7d54c183a3c2f73a",
            "f10c3bfa8109cdd0",
            "7080ca0422762589",
            "18e8a335ef97da21",
            "9106241422db912a",
            "f5cd7bb31098eaad",
            "7b6fc7ec6990e925",
            "ae55601a9da0c911",
            "2fd60a7350f47fb3",
            "dadf337fb5b73a92",
            "0d985a15d4a4a95c",
            "4f7262abea362c2d",
            "2a3513798f605e53",
            "4cb0d9e7dd76739c",
            "f4601d95bfebf9a0",
            "9d4854382e8cb59d",
            "2c1e3dd3e61d04e7",
            "d6cf07277be27381",
            "12c6eb058a6b1e99",
            "44ed24d9f345abc2",
            "2beb850f85c03577",
            "72c8c1490dfeb838",
            "9ba181b908f39390",
            "62ba854e72cdf8dd",
            "14f500b7b1de838f",
            "a762fc9288921434",
            "4a19a26eb247bcfb",
            "125ab90468385839",
            "3db5bdd353e02f42",
            "5d8cb4ae2aa3f2ec",
            "373f7b1408a8d8ef",
            "0972a4a5dd6d6322",
            "2377aa45b2403535",
            "95e85c4c1456807d"
        ],
        "x": 114,
        "y": 1739,
        "w": 2112,
        "h": 662
    },
    {
        "id": "02b0fe64050de273",
        "type": "group",
        "z": "dc0d981398a42d88",
        "name": "Admin PW Konfig-Panel",
        "style": {
            "label": true
        },
        "nodes": [
            "43f8678fc93a7979",
            "2066cdf85f239a3b",
            "f94793cbe28403ca",
            "f3266bc13293c407",
            "e37094d01af90df8",
            "f632d3bb48fd947b",
            "156d30c8b310449b",
            "abdc1aacf5aa4023",
            "57ddd026fc96906a",
            "26c73fb1b34dac58",
            "19241936d8672013",
            "a6880e826ba5ad1a"
        ],
        "x": 354,
        "y": 1659,
        "w": 1092,
        "h": 222
    },
    {
        "id": "e921cd24dc377898",
        "type": "group",
        "z": "dc0d981398a42d88",
        "name": "Admin PW Ã¤ndern",
        "style": {
            "label": true
        },
        "nodes": [
            "ddfa72e7c2a450f1",
            "7dcbe53e138eae81",
            "0cba90869c49877d",
            "2a95aa185a76b98c",
            "949bd568fbe25dd8",
            "edce9ff476f82012",
            "d3eff10aac35c35a",
            "26c09c93e79682b4",
            "2497faf4fd47531d",
            "774b28f42b4107b4",
            "b378f51a10d2e003",
            "bfdda9999aa1ec1c"
        ],
        "x": 354,
        "y": 1899,
        "w": 1572,
        "h": 202
    },
    {
        "id": "b26115dc10ade7b1",
        "type": "group",
        "z": "dc0d981398a42d88",
        "name": "Dialog Ersteinrichtung",
        "style": {
            "label": true
        },
        "nodes": [
            "370cc88d36aca222",
            "28bebc51dd2c6d65",
            "ed72f89326ea082c",
            "e14052290423cdbf",
            "5f5864d48107ba0a",
            "21fc12900bbf5cf9",
            "a82085bf2a638791",
            "91a32a31021577d5",
            "d1db0ff322ae3752",
            "257e2521945c94c9",
            "16e7539e98782819",
            "fea15a378a0e4b9e",
            "f4a0937259ba7471"
        ],
        "x": 354,
        "y": 2379,
        "w": 1392,
        "h": 262
    },
    {
        "id": "b72a4f67de28cc65",
        "type": "group",
        "z": "dc0d981398a42d88",
        "name": "Initialisierung",
        "style": {
            "label": true
        },
        "nodes": [
            "f4b0c144d2c6afc9",
            "67a76ef6609ed0cf",
            "625e6b2914f18b76",
            "ebe08a20f29e269e",
            "fa26e2f162763260",
            "0a6ef210fc91feea",
            "6aa73b130afa0192",
            "bb49eb64a95fd55b",
            "decba3fee1e2bca6",
            "ca07f5630f9e9739",
            "50f79ec4f9467c3b",
            "5b65ad269724dba9",
            "f3b026d31f0623fa",
            "9e9531cb7b3cf674"
        ],
        "x": 294,
        "y": 2119,
        "w": 1792,
        "h": 242
    },
    {
        "id": "a101d0e8677d1f77",
        "type": "group",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "User-KÃ¼rzel",
        "style": {
            "label": true
        },
        "nodes": [
            "73578be5bb4e199b",
            "3d4f6c357b280f9d",
            "7e3ad68b0e68ab1c",
            "5e918c4f654b9570",
            "e52762ce60bc3002",
            "41982608cddd2ccf",
            "d34f2e68f8876068",
            "9ededfc73854a094",
            "5294e92d768b2df1",
            "9f0f52d158968973",
            "1417911cc5113c27",
            "6c3fc97d54aa9ddc",
            "a5813a5728c972a1",
            "165132d60eaec82d",
            "9a6612878bf2d7c6",
            "4befd131b88b6f45",
            "86a35491e119452b",
            "274fd14fc9463071",
            "6a67adf057122650",
            "6c3939e79075838a",
            "f31c04d58dac383f",
            "5e2fd2d2411c3bed",
            "20b5c1a5c4dbe03d",
            "8764a0809a22eac6"
        ],
        "x": 414,
        "y": 1159,
        "w": 1892,
        "h": 342
    },
    {
        "id": "e05512e54561bc65",
        "type": "group",
        "z": "dc0d981398a42d88",
        "g": "2ae494e9447c2087",
        "name": "Konfiguration - Pfade",
        "style": {
            "label": true
        },
        "nodes": [
            "12b3b8916db0a005",
            "872ec960e6a2057a",
            "70b5091be3333c48",
            "b041b75503da8120",
            "64ad417a56f98697",
            "4c6cbfa8f0a550de",
            "3707c330a4f18ac6",
            "14cb9ccc3031664a",
            "abe2c3fee7f88ba3",
            "4a25ca70e395c293",
            "80d8c768e27f027f",
            "9c244dac7f46368b",
            "acbb32dda1a74229",
            "4e34d63dd5a52e2a",
            "122d9b3391a1ba88",
            "2607c2f3b1b7b756",
            "7f50215f36cae338",
            "1a15ac24124bdf48",
            "f08129ae41d7a57b",
            "7b87b9d3b685a32f"
        ],
        "x": 394,
        "y": 219,
        "w": 1692,
        "h": 342
    },
    {
        "id": "2eb8ddaff3cdbe23",
        "type": "group",
        "z": "dc0d981398a42d88",
        "g": "2ae494e9447c2087",
        "name": "Konfiguration - Datei/Ordnerschema",
        "style": {
            "label": true
        },
        "nodes": [
            "6715a92228bcfdee",
            "ede35def0294d032",
            "9b985426c86b5090",
            "d1909bbed3319c96",
            "23b15a9cfb0616c8",
            "898c1ef4feff193b",
            "afecede4169b2a1c",
            "8b30524bdbd82528",
            "ce4b27a0132d5d47",
            "315de6d408850334",
            "6a961ea3045bc83b",
            "b7b705aa3b8c3c14",
            "3eabd9f6dc1318b0",
            "3efda43add38a825",
            "69717fc395ef2f3a",
            "e050f83e4b8e76d7",
            "da6fd0152bd9ea92",
            "72f1d0dfaf9a236f",
            "1cc45dce0f78c6df",
            "9994f906d9c27dc4",
            "032a562dc99f4af8",
            "f51285520b00a3d3",
            "aeb8a17f71795a4c",
            "8bb41dd550361de6"
        ],
        "x": 394,
        "y": 559,
        "w": 1692,
        "h": 362
    },
    {
        "id": "c6bbd2b9b2d5d462",
        "type": "group",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "DatensÃ¤tze interpretieren",
        "style": {
            "label": true
        },
        "nodes": [
            "886fa3dff40f66c4",
            "542d2ab3e9ca86ab",
            "4f280f447ba900e3",
            "26b26f7ae2735f2c",
            "9354621dcdb0fa1f",
            "1783e5703cd84fe4",
            "adc1ead1c46f301c",
            "6c770391f80f6f98",
            "e3d6822e1a01b3d9",
            "155d7272748534fd",
            "0a963be20f1e8016",
            "463b654d92f0757a",
            "4ff909ecfe240e72",
            "d980148938fe696d"
        ],
        "x": 144,
        "y": 119,
        "w": 1092,
        "h": 162
    },
    {
        "id": "4b0349befccb3ec9",
        "type": "group",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Tabelle",
        "style": {
            "label": true
        },
        "nodes": [
            "46c089e460663388",
            "185acd9882bafd74",
            "5dfefaa79a87b909",
            "95d6c49a59226dad",
            "94e48f5086781a41",
            "477b7d2ef0ea4778",
            "a304588c2808c1ac",
            "40b1713e53fe014e",
            "d4a860faf530cfaf",
            "e456d033730a3863",
            "d827e2987029dd1c",
            "2f60e367b0acae57"
        ],
        "x": 1294,
        "y": 119,
        "w": 1352,
        "h": 142
    },
    {
        "id": "0d1faa7a2ad224be",
        "type": "group",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "PTX Ã¶ffnen",
        "style": {
            "label": true
        },
        "nodes": [
            "ea819edcc7fbd28a",
            "30aa15b86c7b3bff",
            "c392a56e56df401e",
            "6629036df320012f",
            "196e5db112dae50f"
        ],
        "x": 1294,
        "y": 1519,
        "w": 572,
        "h": 149.5
    },
    {
        "id": "826de81a1d3da833",
        "type": "ui-base",
        "name": "immo24 Studioassistent",
        "path": "/dashboard",
        "appIcon": "/icon.png",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "dashpage",
        "navigationStyle": "none",
        "titleBarStyle": "hidden",
        "showReconnectNotification": true,
        "notificationDisplayTime": 1,
        "showDisconnectNotification": true,
        "allowInstall": true
    },
    {
        "id": "96222c515d2abba0",
        "type": "ui-theme",
        "name": "immo24 Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094ce",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "e1391360d2dcd740",
        "type": "ui-page",
        "name": "Projektanlage",
        "ui": "826de81a1d3da833",
        "path": "/projektanlage",
        "icon": "home",
        "layout": "grid",
        "theme": "96222c515d2abba0",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "2d80b438009ca3d3",
        "type": "ui-page",
        "name": "Konfiguration",
        "ui": "826de81a1d3da833",
        "path": "/konfiguration",
        "icon": "home",
        "layout": "tabs",
        "theme": "96222c515d2abba0",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "cd5104c8640ac448",
        "type": "ui-page",
        "name": "Anmelden",
        "ui": "826de81a1d3da833",
        "path": "/login",
        "icon": "home",
        "layout": "notebook",
        "theme": "96222c515d2abba0",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": false,
        "disabled": false
    },
    {
        "id": "1e41cb7e28df4e69",
        "type": "ui-page",
        "name": "Pro Tools",
        "ui": "826de81a1d3da833",
        "path": "/protools",
        "icon": "home",
        "layout": "grid",
        "theme": "96222c515d2abba0",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "91ae8c83e547fbd7",
        "type": "ui-group",
        "name": "Projektinfos",
        "page": "e1391360d2dcd740",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "a3aa87200649281b",
        "type": "ui-group",
        "name": "Pfade",
        "page": "2d80b438009ca3d3",
        "width": 6,
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "4ace43d557abb992",
        "type": "ui-group",
        "name": "Anmelden",
        "page": "cd5104c8640ac448",
        "width": "6",
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2ffd9e5a045727c6",
        "type": "ui-group",
        "name": "Settings",
        "page": "1e41cb7e28df4e69",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "f925aada115de858",
        "type": "ui-group",
        "name": "Angemeldet",
        "page": "e1391360d2dcd740",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "62f81a586be9f22e",
        "type": "ui-group",
        "name": "Kuerzel",
        "page": "cd5104c8640ac448",
        "width": 6,
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "dialog"
    },
    {
        "id": "2093508e61440187",
        "type": "ui-group",
        "name": "Produktionsbuch",
        "page": "e1391360d2dcd740",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "403731bf400b250a",
        "type": "ui-group",
        "name": "Projektkartei",
        "page": "e1391360d2dcd740",
        "width": 6,
        "height": 1,
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9ad90850fbcf38ac",
        "type": "ui-group",
        "name": "Namensschema",
        "page": "2d80b438009ca3d3",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c32759b3efc667c0",
        "type": "ui-group",
        "name": "Produktionsbuch",
        "page": "2d80b438009ca3d3",
        "width": "12",
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9acf74bc666bb115",
        "type": "ui-group",
        "name": "Neuer Kunde",
        "page": "2d80b438009ca3d3",
        "width": 6,
        "height": 1,
        "order": 6,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "dialog"
    },
    {
        "id": "1706fadffdc2c0e4",
        "type": "ui-group",
        "name": "Neuer Datensatz",
        "page": "2d80b438009ca3d3",
        "width": 6,
        "height": 1,
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "dialog"
    },
    {
        "id": "d702d7caf5852d18",
        "type": "ui-group",
        "name": "Passwort eingeben",
        "page": "e1391360d2dcd740",
        "width": 6,
        "height": 1,
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "dialog"
    },
    {
        "id": "63c9d128cce7d8b0",
        "type": "ui-group",
        "name": "Passwort",
        "page": "2d80b438009ca3d3",
        "width": 6,
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9d7062b4e3dcd9da",
        "type": "ui-group",
        "name": "Ersteinrichtung",
        "page": "cd5104c8640ac448",
        "width": 6,
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "dialog"
    },
    {
        "id": "d4665a684c798a6a",
        "type": "ui-group",
        "name": "Header",
        "page": "cd5104c8640ac448",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "true",
        "groupType": "default"
    },
    {
        "id": "6add80470fad5859",
        "type": "ui-group",
        "name": "Beenden",
        "page": "2d80b438009ca3d3",
        "width": 6,
        "height": 1,
        "order": 7,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "df8c64150cd5010a",
        "type": "ui-spacer",
        "group": "9ad90850fbcf38ac",
        "name": "spacer",
        "tooltip": "",
        "order": 4,
        "width": 1,
        "height": 1,
        "className": ""
    },
    {
        "id": "3862b933a243ba55",
        "type": "ui-control",
        "z": "dc0d981398a42d88",
        "name": "",
        "ui": "826de81a1d3da833",
        "events": "all",
        "x": 200,
        "y": 500,
        "wires": [
            [
                "032a562dc99f4af8",
                "7e2571b409d5d436",
                "12b3b8916db0a005"
            ]
        ]
    },
    {
        "id": "f4b0c144d2c6afc9",
        "type": "inject",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "Initialisieren",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 410,
        "y": 2160,
        "wires": [
            [
                "decba3fee1e2bca6",
                "2c322a0a469a0476"
            ]
        ]
    },
    {
        "id": "7e2571b409d5d436",
        "type": "fs-ops-dir",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "MA-Ordner lesen",
        "path": "PathMitarbeiter",
        "pathType": "global",
        "filter": "",
        "filterType": "str",
        "dir": "payload",
        "dirType": "msg",
        "x": 530,
        "y": 1020,
        "wires": [
            [
                "b0eac16b480b0f6c"
            ]
        ]
    },
    {
        "id": "b0eac16b480b0f6c",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "Unsichtbare filtern",
        "func": "let arr = msg.payload || [];\nmsg.payload = arr\n    .filter(name => !name.startsWith('.')) // Unsichtbare raus\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1020,
        "wires": [
            [
                "07c077a225675b93"
            ]
        ]
    },
    {
        "id": "7338a31d62aa380a",
        "type": "fs-ops-stats",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "",
        "path": "",
        "pathType": "str",
        "filename": "payload",
        "filenameType": "msg",
        "stats": "stats",
        "sizeType": "msg",
        "x": 1140,
        "y": 1020,
        "wires": [
            [
                "84c87e607497b34b"
            ]
        ]
    },
    {
        "id": "84c87e607497b34b",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "nach Ordner filtern",
        "func": "let pfade = msg.payload || [];\nlet stats = msg.stats || [];\nlet options = [];\n\nfor (let i = 0; i < pfade.length; i++) {\n    let stat = stats[i];\n    let isDir = false;\n    if (stat) {\n        if (typeof stat.isDirectory === \"function\") {\n            isDir = stat.isDirectory();\n        } else if (typeof stat.mode === \"number\") {\n            isDir = (stat.mode & 0o170000) === 0o040000;\n        }\n    }\n    if (isDir) {\n        let teile = pfade[i].split(/[\\\\/]/); // plattformunabhÃ¤ngig\n        let name = teile[teile.length - 1];\n        if (!name.startsWith('.')) {\n            options.push({\n                dropdown: \"user\",    // Das ist der Name des Dropdown-Felds im ui-form!\n                value: name,\n                label: name\n            });\n        }\n    }\n}\n\n// Die Optionen an das Dashboard schicken:\nmsg.ui_update = { dropdownOptions: options };\n\nmsg.payload = msg.ui_update;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1020,
        "wires": [
            [
                "f683da12cce40141"
            ]
        ]
    },
    {
        "id": "f683da12cce40141",
        "type": "ui-form",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "Anmelden",
        "group": "4ace43d557abb992",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Mitarbeiter",
                "key": "user",
                "type": "dropdown",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "user": ""
        },
        "payload": "",
        "submit": "anmelden",
        "cancel": "",
        "resetOnSubmit": false,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "passthru": false,
        "dropdownOptions": [],
        "x": 720,
        "y": 1080,
        "wires": [
            [
                "13bfc916dbc33c03"
            ]
        ]
    },
    {
        "id": "07c077a225675b93",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "zu Pfaden konvertieren",
        "func": "let path = global.get('PathMitarbeiter');\nlet arr = msg.payload || [];\nmsg.payload = arr\n    .map(name => path + '/' + name);            // Zu vollstÃ¤ndigen Pfaden machen\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1020,
        "wires": [
            [
                "7338a31d62aa380a"
            ]
        ]
    },
    {
        "id": "13bfc916dbc33c03",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "activeUser",
                "pt": "global",
                "to": "payload.user",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1080,
        "wires": [
            [
                "7e3ad68b0e68ab1c",
                "76182b64e9b2d9a8"
            ]
        ]
    },
    {
        "id": "73578be5bb4e199b",
        "type": "ui-control",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "",
        "ui": "826de81a1d3da833",
        "events": "all",
        "x": 1840,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "3d4f6c357b280f9d",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "[UI] Anmelden, Screen wechseln",
        "func": "msg.payload = {\n    page: 'Projektanlage',  // Seite zu der gewechselt werden soll\n    pages: {\n        enable: ['Projektanlage', 'Pro Tools', 'Konfiguration'],       // Diese Seite wird aktiviert (sichtbar)\n        disable: ['Anmelden']     // Diese Seite wird deaktiviert (unsichtbar)\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1200,
        "wires": [
            [
                "73578be5bb4e199b",
                "3e3926b522449b96"
            ]
        ]
    },
    {
        "id": "7e3ad68b0e68ab1c",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "KÃ¼rzel-Pfad festlegen",
        "func": "let activeUser = global.get('activeUser');\nlet PathMitarbeiter = global.get('PathMitarbeiter') || '';\nmsg.PathKuerzel = `${PathMitarbeiter}/${activeUser}/immo24/immo24-user.json`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1220,
        "wires": [
            [
                "5e918c4f654b9570"
            ]
        ]
    },
    {
        "id": "5e918c4f654b9570",
        "type": "fs-ops-access",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "KÃ¼rzel-File prÃ¼fen",
        "path": "",
        "pathType": "str",
        "filename": "PathKuerzel",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 770,
        "y": 1220,
        "wires": [
            [
                "e52762ce60bc3002"
            ],
            [
                "9f0f52d158968973"
            ]
        ]
    },
    {
        "id": "e52762ce60bc3002",
        "type": "file in",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "immo24-user.json lesen",
        "filename": "PathKuerzel",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1010,
        "y": 1200,
        "wires": [
            [
                "41982608cddd2ccf"
            ]
        ]
    },
    {
        "id": "41982608cddd2ccf",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "setze global.activeUserKuerzel",
        "func": "global.set('activeUserKuerzel', msg.payload.trim());\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1200,
        "wires": [
            [
                "3d4f6c357b280f9d"
            ]
        ]
    },
    {
        "id": "d34f2e68f8876068",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "group": "62f81a586be9f22e",
        "name": "KÃ¼rzel",
        "label": "KÃ¼rzel",
        "order": 2,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": true,
        "sendOnClear": true,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 770,
        "y": 1360,
        "wires": [
            [
                "6c3fc97d54aa9ddc"
            ]
        ]
    },
    {
        "id": "9ededfc73854a094",
        "type": "ui-button",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "group": "62f81a586be9f22e",
        "name": "Speichern und Anmelden",
        "label": "Speichern und Anmelden",
        "order": 3,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 830,
        "y": 1440,
        "wires": [
            [
                "a5813a5728c972a1"
            ]
        ]
    },
    {
        "id": "5294e92d768b2df1",
        "type": "ui-control",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "",
        "ui": "826de81a1d3da833",
        "events": "all",
        "x": 1240,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "9f0f52d158968973",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "[UI] KÃ¼rzel-Dialog einblenden",
        "func": "msg.payload = {\n    groups: {\n        show: ['Kuerzel']\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1240,
        "wires": [
            [
                "5294e92d768b2df1"
            ]
        ]
    },
    {
        "id": "1417911cc5113c27",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "Reset KÃ¼rzel-Feld",
        "func": "msg.payload = null;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1360,
        "wires": [
            [
                "d34f2e68f8876068"
            ]
        ]
    },
    {
        "id": "6c3fc97d54aa9ddc",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpKuerzel",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "a5813a5728c972a1",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "Pflichtfelder Check",
        "func": "let fehlende = [];\n\nif (!flow.get(\"tmpKuerzel\")) fehlende.push(\"KÃ¼rzel\");\n\nif (fehlende.length > 0) {\n    msg.payload = \"Bitte ausfÃ¼llen: \" + fehlende.join(\", \");\n    msg.ok = false;\n    return [msg, null]; // Output 1: Fehler\n} else {\n    msg.ok = true;\n    msg.payload = \"Alle Pflichtfelder sind ausgefÃ¼llt.\";\n    return [null, msg]; // Output 2: Alles ok\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1440,
        "wires": [
            [
                "165132d60eaec82d"
            ],
            [
                "9a6612878bf2d7c6"
            ]
        ]
    },
    {
        "id": "165132d60eaec82d",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Fehlermeldung ausgeben",
        "x": 1310,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "9a6612878bf2d7c6",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "JSON formatieren, Zielpfad",
        "func": "// KÃ¼rzel aus dem Flow-Kontext holen (z.B. beim Textinput auf flow.kuerzel speichern!)\nlet kuerzel = flow.get('tmpKuerzel');\nlet activeUser = global.get('activeUser');\nlet PathMitarbeiter = global.get('PathMitarbeiter') || '';\n\nif (!kuerzel || !activeUser || !PathMitarbeiter) {\n    msg.payload = \"Fehler: Bitte KÃ¼rzel, User und Pfad angeben!\";\n    return msg;\n}\n\n// Zielpfad zur Datei bauen\n\nmsg.filename = `${PathMitarbeiter}/${activeUser}/immo24/immo24-user.json`;\nmsg.activeUserPath = `${PathMitarbeiter}/${activeUser}`;\nmsg.payload = kuerzel.trim(); // Schreib das KÃ¼rzel (ohne Leerzeichen) in die Datei\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1460,
        "wires": [
            [
                "f31c04d58dac383f"
            ]
        ]
    },
    {
        "id": "4befd131b88b6f45",
        "type": "file",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "immo24-user.json schreiben",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2140,
        "y": 1300,
        "wires": [
            [
                "86a35491e119452b",
                "1417911cc5113c27",
                "41982608cddd2ccf"
            ]
        ]
    },
    {
        "id": "86a35491e119452b",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "Meldung Text",
        "func": "msg.payload = \"KÃ¼rzel erfolgreich gespeichert!\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 1380,
        "wires": [
            [
                "274fd14fc9463071"
            ]
        ]
    },
    {
        "id": "274fd14fc9463071",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Meldung ausgeben",
        "x": 2150,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "76182b64e9b2d9a8",
        "type": "link out",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "Angemeldet",
        "mode": "link",
        "links": [
            "6c770391f80f6f98"
        ],
        "x": 1125,
        "y": 1080,
        "wires": []
    },
    {
        "id": "12b3b8916db0a005",
        "type": "file in",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "path.json lesen",
        "filename": "${IMMO24_USERDATA}/path.json",
        "filenameType": "env",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 580,
        "y": 260,
        "wires": [
            [
                "872ec960e6a2057a"
            ]
        ]
    },
    {
        "id": "872ec960e6a2057a",
        "type": "json",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "JSON parsen",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 560,
        "y": 320,
        "wires": [
            [
                "2607c2f3b1b7b756",
                "7f50215f36cae338"
            ]
        ]
    },
    {
        "id": "70b5091be3333c48",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "group": "a3aa87200649281b",
        "name": "Pfad Mitarbeiter",
        "label": "Pfad Mitarbeiter",
        "order": 2,
        "width": 0,
        "height": 0,
        "topic": "PathMitarbeiter",
        "topicType": "str",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 1120,
        "y": 300,
        "wires": [
            [
                "4c6cbfa8f0a550de"
            ]
        ]
    },
    {
        "id": "b041b75503da8120",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "group": "a3aa87200649281b",
        "name": "Pfad Produktionen",
        "label": "Pfad Produktionen",
        "order": 3,
        "width": 0,
        "height": 0,
        "topic": "PathProduktionen",
        "topicType": "str",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 1130,
        "y": 340,
        "wires": [
            [
                "3707c330a4f18ac6"
            ]
        ]
    },
    {
        "id": "64ad417a56f98697",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "group": "a3aa87200649281b",
        "name": "Pfad Stammdaten",
        "label": "Pfad Stammdaten",
        "order": 4,
        "width": 0,
        "height": 0,
        "topic": "PathStammdaten",
        "topicType": "str",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "14cb9ccc3031664a"
            ]
        ]
    },
    {
        "id": "4c6cbfa8f0a550de",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpPathMitarbeiter",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "3707c330a4f18ac6",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpPathProduktionen",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "14cb9ccc3031664a",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpPathStammdaten",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "abe2c3fee7f88ba3",
        "type": "ui-button",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "group": "a3aa87200649281b",
        "name": "Pfade speichern",
        "label": "Speichern",
        "order": 5,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 780,
        "y": 440,
        "wires": [
            [
                "4a25ca70e395c293"
            ]
        ]
    },
    {
        "id": "4a25ca70e395c293",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "Pflichtfelder Check",
        "func": "let fehlende = [];\n\nif (!flow.get(\"tmpPathMitarbeiter\")) fehlende.push(\"Pfad Mitarbeiter\");\nif (!flow.get(\"tmpPathProduktionen\")) fehlende.push(\"Pfad Produktionen\");\nif (!flow.get(\"tmpPathStammdaten\")) fehlende.push(\"Pfad Stammdaten\");\n\nif (fehlende.length > 0) {\n    msg.payload = \"Bitte ausfÃ¼llen: \" + fehlende.join(\", \");\n    msg.ok = false;\n    return [msg, null]; // Output 1: Fehler\n} else {\n    msg.ok = true;\n    msg.payload = \"Alle Pflichtfelder sind ausgefÃ¼llt.\";\n    return [null, msg]; // Output 2: Alles ok\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "80d8c768e27f027f"
            ],
            [
                "9c244dac7f46368b"
            ]
        ]
    },
    {
        "id": "80d8c768e27f027f",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Fehlermeldung ausgeben",
        "x": 1270,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9c244dac7f46368b",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "JSON formatieren",
        "func": "// Holt die Schemas aus flow:\nlet PathMitarbeiter = flow.get(\"tmpPathMitarbeiter\") || \"\";\nlet PathProduktionen = flow.get(\"tmpPathProduktionen\") || \"\";\nlet PathStammdaten = flow.get(\"tmpPathStammdaten\") || \"\";\n\n\n// Baue ein JSON-Objekt\nlet out = {\n    PathMitarbeiter,\n    PathProduktionen,\n    PathStammdaten\n};\n\n// Speichern als String im msg.payload:\nmsg.payload = JSON.stringify(out, null, 3);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 460,
        "wires": [
            [
                "acbb32dda1a74229"
            ]
        ]
    },
    {
        "id": "acbb32dda1a74229",
        "type": "file",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "path.json schreiben",
        "filename": "${IMMO24_USERDATA}/path.json",
        "filenameType": "env",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1730,
        "y": 460,
        "wires": [
            [
                "4e34d63dd5a52e2a"
            ]
        ]
    },
    {
        "id": "4e34d63dd5a52e2a",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "Meldung Text",
        "func": "msg.payload = \"Pfade erfolgreich gespeichert!\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 520,
        "wires": [
            [
                "122d9b3391a1ba88"
            ]
        ]
    },
    {
        "id": "122d9b3391a1ba88",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Meldung ausgeben",
        "x": 1790,
        "y": 520,
        "wires": [
            [
                "7b87b9d3b685a32f"
            ]
        ]
    },
    {
        "id": "2607c2f3b1b7b756",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "JSON formatieren",
        "func": "// msg.payload enthÃ¤lt jetzt das JSON-Objekt\nlet data = msg.payload || {};\n\n// Bereite je ein msg fÃ¼r jedes Textfeld:\nlet msgPathMitarbeiter = { payload: data.PathMitarbeiter || \"\" };\nlet msgPathProduktionen = { payload: data.PathProduktionen || \"\" };\nlet msgPathStammdaten = { payload: data.PathStammdaten || \"\" };\n\n\n// Output 1: an Mitarbeiter-Textfeld, Output 2: an Produktionen-Textfeld, Output 3: an Stammdaten-Textfeld\nreturn [msgPathMitarbeiter, msgPathProduktionen, msgPathStammdaten];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 380,
        "wires": [
            [
                "70b5091be3333c48"
            ],
            [
                "b041b75503da8120"
            ],
            [
                "64ad417a56f98697"
            ]
        ]
    },
    {
        "id": "6715a92228bcfdee",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "JSON formatieren",
        "func": "// msg.payload enthÃ¤lt jetzt das JSON-Objekt\nlet data = msg.payload || {};\n\n// Bereite je ein msg fÃ¼r jedes Textfeld:\nlet msgProjektordner = { payload: data.projektordnerSchema || \"\" };\nlet msgSession = { payload: data.sessionSchema || \"\" };\n\n// Output 1: an Projektordner-Textfeld, Output 2: an Session-Textfeld\nreturn [msgProjektordner, msgSession];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 740,
        "wires": [
            [
                "898c1ef4feff193b"
            ],
            [
                "afecede4169b2a1c"
            ]
        ]
    },
    {
        "id": "ede35def0294d032",
        "type": "json",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "JSON parsen",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 560,
        "y": 680,
        "wires": [
            [
                "6715a92228bcfdee",
                "1cc45dce0f78c6df"
            ]
        ]
    },
    {
        "id": "9b985426c86b5090",
        "type": "file in",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "schemes.json lesen",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 590,
        "y": 640,
        "wires": [
            [
                "ede35def0294d032"
            ]
        ]
    },
    {
        "id": "d1909bbed3319c96",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Fehlermeldung ausgeben",
        "x": 1270,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "23b15a9cfb0616c8",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "Demo-Werte festlegen",
        "func": "let schema = msg.payload;\n\nlet demoValues = {\n    datum: \"1997-01-23\",\n    projektname: \"Faszination Falten\",\n    moid: \"O4BZ\",\n    benutzer: \"PL\",\n    kunde: \"SuperVision\",\n    produktionsstufe: \"Foleys\",\n    version: \"v3\"\n};\n\nlet beispiel = schema.replace(/\\{\\{(\\w+)\\}\\}/g, (match, p1) => demoValues[p1] || \"\");\n\nmsg.payload = beispiel;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 720,
        "wires": [
            [
                "72f1d0dfaf9a236f"
            ]
        ]
    },
    {
        "id": "898c1ef4feff193b",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "group": "9ad90850fbcf38ac",
        "name": "Projektordner",
        "label": "Projektordner",
        "order": 3,
        "width": 0,
        "height": 0,
        "topic": "projektordnerSchema",
        "topicType": "str",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 780,
        "y": 680,
        "wires": [
            [
                "69717fc395ef2f3a"
            ]
        ]
    },
    {
        "id": "afecede4169b2a1c",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "group": "9ad90850fbcf38ac",
        "name": "Session",
        "label": "Session",
        "order": 7,
        "width": 0,
        "height": 0,
        "topic": "sessionSchema",
        "topicType": "str",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 760,
        "y": 720,
        "wires": [
            [
                "e050f83e4b8e76d7"
            ]
        ]
    },
    {
        "id": "8b30524bdbd82528",
        "type": "ui-button",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "group": "9ad90850fbcf38ac",
        "name": "Schema speichern",
        "label": "Speichern",
        "order": 8,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 790,
        "y": 800,
        "wires": [
            [
                "ce4b27a0132d5d47"
            ]
        ]
    },
    {
        "id": "ce4b27a0132d5d47",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "Pflichtfelder Check",
        "func": "let fehlende = [];\n\nif (!flow.get(\"tmpProjektordnerSchema\")) fehlende.push(\"Projektordner Schema\");\nif (!flow.get(\"tmpSessionSchema\")) fehlende.push(\"Session Schema\");\n\nif (fehlende.length > 0) {\n    msg.payload = \"Bitte ausfÃ¼llen: \" + fehlende.join(\", \");\n    msg.ok = false;\n    return [msg, null]; // Output 1: Fehler\n} else {\n    msg.ok = true;\n    msg.payload = \"Alle Pflichtfelder sind ausgefÃ¼llt.\";\n    return [null, msg]; // Output 2: Alles ok\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 800,
        "wires": [
            [
                "d1909bbed3319c96"
            ],
            [
                "6a961ea3045bc83b"
            ]
        ]
    },
    {
        "id": "315de6d408850334",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "Demo-Werte festlegen",
        "func": "let schema = msg.payload;\n\nlet demoValues = {\n    datum: \"1997-01-23\",\n    projektname: \"Faszination Falten\",\n    moid: \"O4BZ\",\n    benutzer: \"PL\",\n    kunde: \"SuperVision\",\n    produktionsstufe: \"Foleys\",\n    version: \"v3\"\n};\n\nlet beispiel = schema.replace(/\\{\\{(\\w+)\\}\\}/g, (match, p1) => demoValues[p1] || \"\");\n\nmsg.payload = beispiel;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 680,
        "wires": [
            [
                "da6fd0152bd9ea92"
            ]
        ]
    },
    {
        "id": "6a961ea3045bc83b",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "JSON formatieren",
        "func": "// Holt die Schemas aus Flow:\nlet projektordnerSchema = flow.get(\"tmpProjektordnerSchema\") || \"\";\nlet sessionSchema = flow.get(\"tmpSessionSchema\") || \"\";\n\n// Baue ein JSON-Objekt\nlet out = {\n    projektordnerSchema,\n    sessionSchema\n};\n\n// Speichern als String im msg.payload:\nmsg.payload = JSON.stringify(out, null, 2);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 820,
        "wires": [
            [
                "f51285520b00a3d3"
            ]
        ]
    },
    {
        "id": "b7b705aa3b8c3c14",
        "type": "file",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "schemes.json schreiben",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1750,
        "y": 820,
        "wires": [
            [
                "3eabd9f6dc1318b0"
            ]
        ]
    },
    {
        "id": "3eabd9f6dc1318b0",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "Meldung Text",
        "func": "msg.payload = \"Namensschema erfolgreich gespeichert!\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 880,
        "wires": [
            [
                "3efda43add38a825"
            ]
        ]
    },
    {
        "id": "3efda43add38a825",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Meldung ausgeben",
        "x": 1790,
        "y": 880,
        "wires": [
            [
                "8bb41dd550361de6"
            ]
        ]
    },
    {
        "id": "69717fc395ef2f3a",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpProjektordnerSchema",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 680,
        "wires": [
            [
                "315de6d408850334"
            ]
        ]
    },
    {
        "id": "e050f83e4b8e76d7",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpSessionSchema",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 720,
        "wires": [
            [
                "23b15a9cfb0616c8"
            ]
        ]
    },
    {
        "id": "da6fd0152bd9ea92",
        "type": "ui-text",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "group": "9ad90850fbcf38ac",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Demo Projektordner ausgeben",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1650,
        "y": 680,
        "wires": []
    },
    {
        "id": "72f1d0dfaf9a236f",
        "type": "ui-text",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "group": "9ad90850fbcf38ac",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Demo Session ausgeben",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1630,
        "y": 720,
        "wires": []
    },
    {
        "id": "7f50215f36cae338",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "tmp-Flows + Global initialisieren",
        "func": "let data = msg.payload || {};\n\n// flow.set fÃ¼r UI-Textfelder (z.â¯B. damit PflichtfeldprÃ¼fung funktioniert)\nflow.set(\"tmpPathMitarbeiter\", data.PathMitarbeiter || \"\");\nflow.set(\"tmpPathProduktionen\", data.PathProduktionen || \"\");\nflow.set(\"tmpPathStammdaten\", data.PathStammdaten || \"\");\n\n// global.set fÃ¼r allgemeine Verwendung im Flow\nglobal.set(\"PathMitarbeiter\", data.PathMitarbeiter || \"\");\nglobal.set(\"PathProduktionen\", data.PathProduktionen || \"\");\nglobal.set(\"PathStammdaten\", data.PathStammdaten || \"\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "1cc45dce0f78c6df",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "tmp-Flows + Global initialisieren",
        "func": "let data = msg.payload || {};\n\n// flow.set fÃ¼r UI-Textfelder (z.â¯B. damit PflichtfeldprÃ¼fung funktioniert)\nflow.set(\"tmpProjektordnerSchema\", data.projektordnerSchema || \"\");\nflow.set(\"tmpSessionSchema\", data.sessionSchema || \"\");\n\n// global.set fÃ¼r allgemeine Verwendung im Flow\nglobal.set(\"projektordnerSchema\", data.projektordnerSchema || \"\");\nglobal.set(\"sessionSchema\", data.sessionSchema || \"\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "3e3926b522449b96",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "Text angemeldeter User",
        "func": "msg.payload = global.get(\"activeUser\") || \"\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 1020,
        "wires": [
            [
                "a56e7a1f4e0144f2"
            ]
        ]
    },
    {
        "id": "28748a6ed884e72a",
        "type": "ui-button",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "group": "f925aada115de858",
        "name": "Abmelden",
        "label": "Abmelden",
        "order": 3,
        "width": 2,
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "red",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 530,
        "y": 1600,
        "wires": [
            [
                "3f759076853c1377"
            ]
        ]
    },
    {
        "id": "3f759076853c1377",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "Wipe User",
        "func": "// Globale Variable lÃ¶schen (reset)\nglobal.set(\"activeUser\", undefined);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1600,
        "wires": [
            [
                "bccb17f9aaafa790"
            ]
        ]
    },
    {
        "id": "bccb17f9aaafa790",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "[UI] Logout Page",
        "func": "msg.payload = {\n    page: 'Anmelden',\n    pages: {\n        enable: ['Anmelden'],\n        disable: ['Projektanlage', 'Pro Tools', 'Konfiguration']\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1600,
        "wires": [
            [
                "b912b7f2e8b5d87b"
            ]
        ]
    },
    {
        "id": "b912b7f2e8b5d87b",
        "type": "ui-control",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "",
        "ui": "826de81a1d3da833",
        "events": "all",
        "x": 1100,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "43f8678fc93a7979",
        "type": "ui-button",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "group": "f925aada115de858",
        "name": "Konfiguration",
        "label": "Konfiguration",
        "order": 2,
        "width": 2,
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "lock",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 520,
        "y": 1740,
        "wires": [
            [
                "f94793cbe28403ca"
            ]
        ]
    },
    {
        "id": "2066cdf85f239a3b",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "group": "d702d7caf5852d18",
        "name": "Passwort",
        "label": "Passwort",
        "order": 1,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "password",
        "tooltip": "",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": false,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 660,
        "y": 1800,
        "wires": [
            [
                "f632d3bb48fd947b",
                "26c73fb1b34dac58"
            ]
        ]
    },
    {
        "id": "f94793cbe28403ca",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "[UI] PW-Dialog einblenden",
        "func": "msg.payload = {\n    groups: {\n        show: ['Passwort eingeben']\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1740,
        "wires": [
            [
                "b912b7f2e8b5d87b"
            ]
        ]
    },
    {
        "id": "f3266bc13293c407",
        "type": "file in",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "adminpw.json lesen",
        "filename": "${IMMO24_USERDATA}/adminpw.json",
        "filenameType": "env",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 790,
        "y": 1700,
        "wires": [
            [
                "e37094d01af90df8"
            ]
        ]
    },
    {
        "id": "e37094d01af90df8",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "Global initialisieren",
        "func": "global.set('adminPW', msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "f632d3bb48fd947b",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "Passwort-Check",
        "func": "let userEingabe = msg.payload; // Annahme: kommt direkt vom Textfeld\nlet adminPW = global.get(\"adminPW\"); // im Global-Kontext gespeichert\n\nif (userEingabe === adminPW) {\n    msg.payload = \"FREIGABE\"; // oder beliebiger Befehl\n    return [msg, null];       // Output 1 = OK, Output 2 = Fehler\n} else {\n    msg.payload = \"FALSCH\";\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1800,
        "wires": [
            [
                "57ddd026fc96906a"
            ],
            [
                "abdc1aacf5aa4023"
            ]
        ]
    },
    {
        "id": "156d30c8b310449b",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": false,
        "color": "#ff2600",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Fehlermeldung ausgeben",
        "x": 1310,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "abdc1aacf5aa4023",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "Meldung Text",
        "func": "msg.payload = \"Falsches Passwort!\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1840,
        "wires": [
            [
                "156d30c8b310449b"
            ]
        ]
    },
    {
        "id": "57ddd026fc96906a",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "[UI] Konfig-Page weiterleiten",
        "func": "msg.payload = {\n    page: 'Konfiguration',  // Seite zu der gewechselt werden soll\n    pages: {\n        enable: ['Konfiguration'],       // Diese Seite wird aktiviert (sichtbar)\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1800,
        "wires": [
            [
                "b912b7f2e8b5d87b"
            ]
        ]
    },
    {
        "id": "26c73fb1b34dac58",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "Clear PW",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1800,
        "wires": [
            [
                "2066cdf85f239a3b"
            ]
        ]
    },
    {
        "id": "67a76ef6609ed0cf",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "PathStammdaten abfragen",
        "func": "msg.payload = global.get('PathStammdaten');\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2240,
        "wires": [
            [
                "625e6b2914f18b76"
            ]
        ]
    },
    {
        "id": "625e6b2914f18b76",
        "type": "fs-ops-dir",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "Ordner abfragen",
        "path": "payload",
        "pathType": "msg",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 960,
        "y": 2240,
        "wires": [
            [
                "bb49eb64a95fd55b"
            ]
        ]
    },
    {
        "id": "ebe08a20f29e269e",
        "type": "catch",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "Kein Ordner gefunden",
        "scope": [
            "625e6b2914f18b76"
        ],
        "uncaught": false,
        "x": 980,
        "y": 2280,
        "wires": [
            [
                "fa26e2f162763260"
            ]
        ]
    },
    {
        "id": "ddfa72e7c2a450f1",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "group": "63c9d128cce7d8b0",
        "name": "Neues Passwort",
        "label": "Neues Passwort",
        "order": 2,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "password",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 600,
        "y": 1940,
        "wires": [
            [
                "949bd568fbe25dd8"
            ]
        ]
    },
    {
        "id": "7dcbe53e138eae81",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "group": "63c9d128cce7d8b0",
        "name": "Neues Passwort wiederholen",
        "label": "Neues Passwort wiederholen",
        "order": 1,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "password",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 640,
        "y": 1980,
        "wires": [
            [
                "edce9ff476f82012"
            ]
        ]
    },
    {
        "id": "0cba90869c49877d",
        "type": "ui-button",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "group": "63c9d128cce7d8b0",
        "name": "Passwort Ã¤ndern",
        "label": "Passwort Ã¤ndern",
        "order": 3,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 610,
        "y": 2040,
        "wires": [
            [
                "2497faf4fd47531d"
            ]
        ]
    },
    {
        "id": "2a95aa185a76b98c",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "name": "Passwort-Check",
        "func": "const newPw = flow.get('newPassword');\nconst repeatPw = flow.get('repeatPassword');\n\nif (!newPw || !repeatPw) {\n    return [null, { payload: \"Bitte beide Felder ausfÃ¼llen!\" }];\n}\n\nif (newPw !== repeatPw) {\n    return [null, { payload: \"PasswÃ¶rter stimmen nicht Ã¼berein!\" }];\n}\n\n// Alles ok, weiter zum Speichern\nmsg.payload = newPw; // Das neue Passwort als Payload fÃ¼r Speichern\nreturn [msg, null];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 2040,
        "wires": [
            [
                "774b28f42b4107b4"
            ],
            [
                "d3eff10aac35c35a"
            ]
        ],
        "outputLabels": [
            "PW speichern",
            "Fehler"
        ]
    },
    {
        "id": "949bd568fbe25dd8",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newPassword",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "edce9ff476f82012",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "repeatPassword",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "d3eff10aac35c35a",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": false,
        "color": "#ff2600",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Fehlermeldung ausgeben",
        "x": 1330,
        "y": 2060,
        "wires": [
            [
                "26c09c93e79682b4"
            ]
        ]
    },
    {
        "id": "26c09c93e79682b4",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "name": "Clear PW",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1960,
        "wires": [
            [
                "ddfa72e7c2a450f1",
                "7dcbe53e138eae81"
            ]
        ]
    },
    {
        "id": "2497faf4fd47531d",
        "type": "delay",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 2040,
        "wires": [
            [
                "2a95aa185a76b98c"
            ]
        ]
    },
    {
        "id": "774b28f42b4107b4",
        "type": "file",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "name": "adminpw.json schreiben",
        "filename": "${IMMO24_USERDATA}/adminpw.json",
        "filenameType": "env",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1590,
        "y": 2020,
        "wires": [
            [
                "26c09c93e79682b4",
                "bfdda9999aa1ec1c"
            ]
        ]
    },
    {
        "id": "b378f51a10d2e003",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#ff2600",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Meldung ausgeben",
        "x": 1810,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "bfdda9999aa1ec1c",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "e921cd24dc377898",
        "name": "Meldung Text",
        "func": "msg.payload = \"Passwort erfolgreich geÃ¤ndert!\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1960,
        "wires": [
            [
                "b378f51a10d2e003"
            ]
        ]
    },
    {
        "id": "370cc88d36aca222",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "group": "9d7062b4e3dcd9da",
        "name": "Pfad Mitarbeiter",
        "label": "Pfad Mitarbeiter",
        "order": 2,
        "width": 0,
        "height": 0,
        "topic": "PathMitarbeiter",
        "topicType": "str",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": true,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 800,
        "y": 2420,
        "wires": [
            [
                "e14052290423cdbf"
            ]
        ]
    },
    {
        "id": "28bebc51dd2c6d65",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "group": "9d7062b4e3dcd9da",
        "name": "Pfad Produktionen",
        "label": "Pfad Produktionen",
        "order": 3,
        "width": 0,
        "height": 0,
        "topic": "PathProduktionen",
        "topicType": "str",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 810,
        "y": 2460,
        "wires": [
            [
                "5f5864d48107ba0a"
            ]
        ]
    },
    {
        "id": "ed72f89326ea082c",
        "type": "ui-text-input",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "group": "9d7062b4e3dcd9da",
        "name": "Pfad Stammdaten",
        "label": "Pfad Stammdaten",
        "order": 4,
        "width": 0,
        "height": 0,
        "topic": "PathStammdaten",
        "topicType": "str",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 810,
        "y": 2500,
        "wires": [
            [
                "21fc12900bbf5cf9"
            ]
        ]
    },
    {
        "id": "e14052290423cdbf",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpPathMitarbeiter",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "5f5864d48107ba0a",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpPathProduktionen",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "21fc12900bbf5cf9",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tmpPathStammdaten",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "a82085bf2a638791",
        "type": "ui-button",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "group": "9d7062b4e3dcd9da",
        "name": "Pfade speichern",
        "label": "Speichern",
        "order": 5,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 460,
        "y": 2580,
        "wires": [
            [
                "91a32a31021577d5"
            ]
        ]
    },
    {
        "id": "91a32a31021577d5",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "name": "Pflichtfelder Check",
        "func": "let fehlende = [];\n\nif (!flow.get(\"tmpPathMitarbeiter\")) fehlende.push(\"Pfad Mitarbeiter\");\nif (!flow.get(\"tmpPathProduktionen\")) fehlende.push(\"Pfad Produktionen\");\nif (!flow.get(\"tmpPathStammdaten\")) fehlende.push(\"Pfad Stammdaten\");\n\nif (fehlende.length > 0) {\n    msg.payload = \"Bitte ausfÃ¼llen: \" + fehlende.join(\", \");\n    msg.ok = false;\n    return [msg, null]; // Output 1: Fehler\n} else {\n    msg.ok = true;\n    msg.payload = \"Alle Pflichtfelder sind ausgefÃ¼llt.\";\n    return [null, msg]; // Output 2: Alles ok\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2580,
        "wires": [
            [
                "d1db0ff322ae3752"
            ],
            [
                "257e2521945c94c9"
            ]
        ]
    },
    {
        "id": "d1db0ff322ae3752",
        "type": "ui-notification",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Fehlermeldung ausgeben",
        "x": 950,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "257e2521945c94c9",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "name": "tmp-Flows > Global",
        "func": "global.set(\"PathMitarbeiter\", flow.get(\"tmpPathMitarbeiter\") || \"\");\nglobal.set(\"PathProduktionen\", flow.get(\"tmpPathProduktionen\") || \"\");\nglobal.set(\"PathStammdaten\", flow.get(\"tmpPathStammdaten\") || \"\");\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 2600,
        "wires": [
            [
                "16e7539e98782819"
            ]
        ]
    },
    {
        "id": "16e7539e98782819",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "name": "JSON formatieren",
        "func": "// Holt die Schemas aus global:\nlet PathMitarbeiter = global.get(\"PathMitarbeiter\") || \"\";\nlet PathProduktionen = global.get(\"PathProduktionen\") || \"\";\nlet PathStammdaten = global.get(\"PathStammdaten\") || \"\";\n\n\n// Baue ein JSON-Objekt\nlet out = {\n    PathMitarbeiter,\n    PathProduktionen,\n    PathStammdaten\n};\n\n// Speichern als String im msg.payload:\nmsg.payload = JSON.stringify(out, null, 3);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2600,
        "wires": [
            [
                "fea15a378a0e4b9e"
            ]
        ]
    },
    {
        "id": "fea15a378a0e4b9e",
        "type": "file",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "name": "path.json schreiben",
        "filename": "${IMMO24_USERDATA}/path.json",
        "filenameType": "env",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1630,
        "y": 2600,
        "wires": [
            [
                "6aa73b130afa0192"
            ]
        ]
    },
    {
        "id": "fa26e2f162763260",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "[UI] Ersteinrichtung-Dialog einblenden",
        "func": "msg.payload = {\n    groups: {\n        show: ['Ersteinrichtung']\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 2280,
        "wires": [
            [
                "0a6ef210fc91feea"
            ]
        ]
    },
    {
        "id": "0a6ef210fc91feea",
        "type": "ui-control",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "",
        "ui": "826de81a1d3da833",
        "events": "all",
        "x": 1580,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "6aa73b130afa0192",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "[UI] Konfig-Page weiterleiten",
        "func": "msg.payload = {\n    page: 'Konfiguration',  // Seite zu der gewechselt werden soll\n    pages: {\n        enable: ['Konfiguration'],       // Diese Seite wird aktiviert (sichtbar)\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2240,
        "wires": [
            [
                "0a6ef210fc91feea",
                "5b65ad269724dba9"
            ]
        ]
    },
    {
        "id": "1a15ac24124bdf48",
        "type": "link in",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "START",
        "links": [
            "bb49eb64a95fd55b"
        ],
        "x": 435,
        "y": 260,
        "wires": [
            [
                "12b3b8916db0a005"
            ]
        ]
    },
    {
        "id": "9994f906d9c27dc4",
        "type": "link in",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "START",
        "links": [
            "bb49eb64a95fd55b"
        ],
        "x": 435,
        "y": 620,
        "wires": [
            [
                "032a562dc99f4af8"
            ]
        ]
    },
    {
        "id": "c327d6b8c52ff001",
        "type": "link in",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "START",
        "links": [
            "bb49eb64a95fd55b"
        ],
        "x": 395,
        "y": 1020,
        "wires": [
            [
                "7e2571b409d5d436"
            ]
        ]
    },
    {
        "id": "19241936d8672013",
        "type": "link in",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "START",
        "links": [
            "bb49eb64a95fd55b"
        ],
        "x": 395,
        "y": 1700,
        "wires": [
            [
                "f3266bc13293c407"
            ]
        ]
    },
    {
        "id": "bb49eb64a95fd55b",
        "type": "link out",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "START",
        "mode": "link",
        "links": [
            "19241936d8672013",
            "1a15ac24124bdf48",
            "9994f906d9c27dc4",
            "c327d6b8c52ff001",
            "a762fc9288921434"
        ],
        "x": 1105,
        "y": 2240,
        "wires": []
    },
    {
        "id": "decba3fee1e2bca6",
        "type": "file in",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "path.json lesen",
        "filename": "${IMMO24_USERDATA}/path.json",
        "filenameType": "env",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1480,
        "y": 2160,
        "wires": [
            [
                "ca07f5630f9e9739"
            ]
        ]
    },
    {
        "id": "ca07f5630f9e9739",
        "type": "json",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "JSON parsen",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1680,
        "y": 2160,
        "wires": [
            [
                "50f79ec4f9467c3b"
            ]
        ]
    },
    {
        "id": "50f79ec4f9467c3b",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "tmp-Flows + Global initialisieren",
        "func": "let data = msg.payload || {};\n\n// flow.set fÃ¼r UI-Textfelder (z.â¯B. damit PflichtfeldprÃ¼fung funktioniert)\nflow.set(\"tmpPathMitarbeiter\", data.PathMitarbeiter || \"\");\nflow.set(\"tmpPathProduktionen\", data.PathProduktionen || \"\");\nflow.set(\"tmpPathStammdaten\", data.PathStammdaten || \"\");\n\n// global.set fÃ¼r allgemeine Verwendung im Flow\nglobal.set(\"PathMitarbeiter\", data.PathMitarbeiter || \"\");\nglobal.set(\"PathProduktionen\", data.PathProduktionen || \"\");\nglobal.set(\"PathStammdaten\", data.PathStammdaten || \"\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 2160,
        "wires": [
            [
                "67a76ef6609ed0cf"
            ]
        ]
    },
    {
        "id": "5b65ad269724dba9",
        "type": "delay",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "Delay Loop",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1590,
        "y": 2240,
        "wires": [
            [
                "decba3fee1e2bca6"
            ]
        ]
    },
    {
        "id": "032a562dc99f4af8",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "schemes.json Verzeichnis",
        "func": "msg.filename = global.get('PathStammdaten') + \"/schemes.json\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 600,
        "wires": [
            [
                "9b985426c86b5090"
            ]
        ]
    },
    {
        "id": "f51285520b00a3d3",
        "type": "function",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "schemes.json Verzeichnis",
        "func": "msg.filename = global.get('PathStammdaten') + \"/schemes.json\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 760,
        "wires": [
            [
                "b7b705aa3b8c3c14"
            ]
        ]
    },
    {
        "id": "f3b026d31f0623fa",
        "type": "ui-control",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "New Connection",
        "ui": "826de81a1d3da833",
        "events": "connect",
        "x": 410,
        "y": 2200,
        "wires": [
            [
                "decba3fee1e2bca6"
            ]
        ]
    },
    {
        "id": "ae748b2fe00cc633",
        "type": "ui-template",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "group": "d4665a684c798a6a",
        "page": "",
        "ui": "",
        "name": "Header Login-Page",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<div style=\"display:flex; flex-direction:column; align-items:center; justify-content:center; padding-bottom:12px;\">\n    <img src=\"/logo.png\" alt=\"Logo\" style=\"max-width:300px; width:80%; margin-bottom:10px;\" />\n    <span style=\"font-size:0.88em; color:#777; margin-top:2px;\">v{{msg.release}}</span>\n</div>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 710,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "6a67adf057122650",
        "type": "ui-template",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "group": "62f81a586be9f22e",
        "page": "",
        "ui": "",
        "name": "Kuerzel Text",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<p>FÃ¼r diesen Nutzer ist kein KÃ¼rzel definiert.</p>\n<p>Bitte ein KÃ¼rzel festlegen.</p>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "6c3939e79075838a",
        "type": "inject",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 760,
        "y": 1260,
        "wires": [
            [
                "9f0f52d158968973"
            ]
        ]
    },
    {
        "id": "9e9531cb7b3cf674",
        "type": "inject",
        "z": "dc0d981398a42d88",
        "g": "b72a4f67de28cc65",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 2320,
        "wires": [
            [
                "fa26e2f162763260"
            ]
        ]
    },
    {
        "id": "f4a0937259ba7471",
        "type": "ui-template",
        "z": "dc0d981398a42d88",
        "g": "b26115dc10ade7b1",
        "group": "9d7062b4e3dcd9da",
        "page": "",
        "ui": "",
        "name": "Ersteinrichtung Text",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<p>Bitte folgende Pfade definieren:</p>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "a56e7a1f4e0144f2",
        "type": "ui-template",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "group": "f925aada115de858",
        "page": "",
        "ui": "",
        "name": "Angemeldeter Nutzer",
        "order": 1,
        "width": "2",
        "height": "1",
        "head": "",
        "format": "<span style=\"display:flex; align-items:center; gap:8px;\">\n  <svg height=\"26\" width=\"26\" viewBox=\"0 0 24 24\" style=\"fill:#222;\">\n    <path d=\"M12 12c2.7 0 8 1.34 8 4v2H4v-2c0-2.66 5.3-4 8-4zm0-2c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z\"/>\n  </svg>\n  <span style=\"font-size:1.4em; font-weight:500; font-family:Inter,Roboto,Arial,sans-serif;\">{{msg.payload}}</span>\n</span>\n\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2160,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "a6880e826ba5ad1a",
        "type": "inject",
        "z": "dc0d981398a42d88",
        "g": "02b0fe64050de273",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 1760,
        "wires": [
            [
                "f94793cbe28403ca"
            ]
        ]
    },
    {
        "id": "f08129ae41d7a57b",
        "type": "ui-template",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "group": "a3aa87200649281b",
        "page": "",
        "ui": "",
        "name": "Text Pfade",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<div style=\"font-size:1.09em; line-height:1.6;\">\n    <strong style=\"font-size:1.18em;\">Pfade</strong><br>\n    <span>Hier kÃ¶nnen die Verzeichnis-Pfade geÃ¤ndert werden.</span><br>\n</div>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "b74e6bae90ce69cb",
        "type": "ui-template",
        "z": "dc0d981398a42d88",
        "group": "9ad90850fbcf38ac",
        "page": "",
        "ui": "",
        "name": "Text Projektschema",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<div style=\"font-size:1.09em; line-height:1.6;\">\n    <strong style=\"font-size:1.18em;\">Projekt-Schema</strong><br>\n    <span>Hier wird das Namensschema des Projektordners festgelegt.</span><br>\n    <span style=\"color:#246fe5; font-weight:500;\">VerfÃ¼gbare Variablen: </span>\n    <code style=\"background:#f4f6f8; padding:2px 8px; border-radius:5px;\">\n&#123;&#123;datum&#125;&#125; &#123;&#123;projektname&#125;&#125; &#123;&#123;moid&#125;&#125; &#123;&#123;benutzer&#125;&#125; &#123;&#123;kunde&#125;&#125;\n  </code>\n</div>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "aeb8a17f71795a4c",
        "type": "ui-template",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "group": "9ad90850fbcf38ac",
        "page": "",
        "ui": "",
        "name": "Text Sessionschema",
        "order": 5,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<div style=\"font-size:1.09em; line-height:1.6;\">\n    <strong style=\"font-size:1.18em;\">Session-Schema</strong><br>\n    <span>Hier wird das Namensschema des Session-Files festgelegt.</span><br>\n    <span style=\"color:#246fe5; font-weight:500;\">VerfÃ¼gbare Variablen: </span>\n    <code style=\"background:#f4f6f8; padding:2px 8px; border-radius:5px;\">\n    &#123;&#123;datum&#125;&#125; &#123;&#123;projektname&#125;&#125; &#123;&#123;moid&#125;&#125; &#123;&#123;benutzer&#125;&#125; &#123;&#123;kunde&#125;&#125; &#123;&#123;produktionsstufe&#125;&#125; &#123;&#123;version&#125;&#125;\n  </code>\n</div>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "acef5155e6d33582",
        "type": "ui-button",
        "z": "dc0d981398a42d88",
        "group": "6add80470fad5859",
        "name": "Konfig Beenden",
        "label": "Speichern und SchlieÃen",
        "order": 1,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 500,
        "y": 2720,
        "wires": [
            [
                "0bc5460d1e11cf09"
            ]
        ]
    },
    {
        "id": "59762f656dd25a68",
        "type": "function",
        "z": "dc0d981398a42d88",
        "name": "[UI] Projektanlage-Page weiterleiten",
        "func": "msg.payload = {\n    page: 'Projektanlage',  // Seite zu der gewechselt werden soll\n    pages: {\n        disable: ['Konfiguration'],       // Diese Seite wird aktiviert (sichtbar)\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2720,
        "wires": [
            [
                "e7dff078a3ccb0c5"
            ]
        ]
    },
    {
        "id": "e7dff078a3ccb0c5",
        "type": "ui-control",
        "z": "dc0d981398a42d88",
        "name": "",
        "ui": "826de81a1d3da833",
        "events": "all",
        "x": 1110,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "f31c04d58dac383f",
        "type": "fs-ops-dir",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "User-Verzeichnis lesen",
        "path": "activeUserPath",
        "pathType": "msg",
        "filter": "\"immo24\"",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1580,
        "y": 1460,
        "wires": [
            [
                "5e2fd2d2411c3bed"
            ]
        ]
    },
    {
        "id": "5e2fd2d2411c3bed",
        "type": "switch",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "immo24-Verzeichnis vorhanden",
        "property": "files",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 1380,
        "wires": [
            [
                "20b5c1a5c4dbe03d"
            ],
            [
                "4befd131b88b6f45"
            ]
        ],
        "outputLabels": [
            "immo24 nicht vorhanden",
            "immo24 vorhanden"
        ]
    },
    {
        "id": "20b5c1a5c4dbe03d",
        "type": "fs-ops-mkdir",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "immo24 anlegen",
        "path": "activeUserPath",
        "pathType": "msg",
        "dirname": "immo24",
        "dirnameType": "str",
        "recursive": false,
        "mode": "755",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 1890,
        "y": 1260,
        "wires": [
            [
                "4befd131b88b6f45",
                "8764a0809a22eac6"
            ]
        ]
    },
    {
        "id": "8764a0809a22eac6",
        "type": "fs-ops-mkdir",
        "z": "dc0d981398a42d88",
        "g": "a101d0e8677d1f77",
        "name": "template-Verzeichnis anlegen",
        "path": "directory",
        "pathType": "msg",
        "dirname": "templates",
        "dirnameType": "str",
        "recursive": false,
        "mode": "755",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 2150,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "7b87b9d3b685a32f",
        "type": "delay",
        "z": "dc0d981398a42d88",
        "g": "e05512e54561bc65",
        "name": "Delay Loop",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1990,
        "y": 520,
        "wires": [
            [
                "12b3b8916db0a005"
            ]
        ]
    },
    {
        "id": "8bb41dd550361de6",
        "type": "delay",
        "z": "dc0d981398a42d88",
        "g": "2eb8ddaff3cdbe23",
        "name": "Delay Loop",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1990,
        "y": 880,
        "wires": [
            [
                "032a562dc99f4af8"
            ]
        ]
    },
    {
        "id": "e017b3a006d31550",
        "type": "link in",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "Logout",
        "links": [
            "0bc5460d1e11cf09"
        ],
        "x": 585,
        "y": 1560,
        "wires": [
            [
                "3f759076853c1377"
            ]
        ]
    },
    {
        "id": "0bc5460d1e11cf09",
        "type": "link out",
        "z": "dc0d981398a42d88",
        "name": "Logout",
        "mode": "link",
        "links": [
            "e017b3a006d31550"
        ],
        "x": 625,
        "y": 2720,
        "wires": []
    },
    {
        "id": "2c322a0a469a0476",
        "type": "change",
        "z": "dc0d981398a42d88",
        "g": "0e1923748c0d505b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "release",
                "pt": "msg",
                "to": "APP_VERSION",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "ae748b2fe00cc633"
            ]
        ]
    },
    {
        "id": "886fa3dff40f66c4",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Template Pfad setzen",
        "func": "let PathMitarbeiter = global.get('PathMitarbeiter');\nlet activeUser = global.get('activeUser');\nmsg.dir = `${PathMitarbeiter}/${activeUser}/immo24/templates/`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "542d2ab3e9ca86ab"
            ]
        ]
    },
    {
        "id": "542d2ab3e9ca86ab",
        "type": "fs-ops-dir",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Templates lesen",
        "path": "dir",
        "pathType": "msg",
        "filter": "*.ptxt",
        "filterType": "str",
        "dir": "payload",
        "dirType": "msg",
        "x": 620,
        "y": 160,
        "wires": [
            [
                "1783e5703cd84fe4"
            ]
        ]
    },
    {
        "id": "4f280f447ba900e3",
        "type": "file in",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "kunden_stammdaten.json lesen",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "26b26f7ae2735f2c"
            ]
        ]
    },
    {
        "id": "26b26f7ae2735f2c",
        "type": "json",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "JSON parsen",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 620,
        "y": 200,
        "wires": [
            [
                "463b654d92f0757a"
            ]
        ]
    },
    {
        "id": "9354621dcdb0fa1f",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Array filtern",
        "func": "// msg.payload ist das komplette Kunden/Ordner-Array\n\nmsg.options = msg.payload.map(k => ({ label: k.kunde, value: k.kunde }));\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "155d7272748534fd"
            ]
        ]
    },
    {
        "id": "1783e5703cd84fe4",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Array filtern",
        "func": "msg.options = msg.payload.map(e => ({ label: e, value: e }));\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 160,
        "wires": [
            [
                "e3d6822e1a01b3d9"
            ]
        ]
    },
    {
        "id": "adc1ead1c46f301c",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Array filtern",
        "func": "// msg.payload enthÃ¤lt jetzt den gewÃ¤hlten Kundenname\nlet selectedKunde = msg.payload;\n\n// Stammdaten holen\nlet kundenArray = flow.get('kundenStammdaten') || [];\n\n// Passenden Kunden suchen\nlet eintrag = kundenArray.find(k => k.kunde === selectedKunde);\n\n// Ordner-Optionen bauen, aber nur fÃ¼r Produktionsstufen mit Klarname\nmsg.options = (eintrag?.ordner || [])\n    .filter(o => o.ist_Produktionsstufe)\n    .map(o => ({ label: o.label, value: o.name }));\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "0a963be20f1e8016"
            ]
        ]
    },
    {
        "id": "6c770391f80f6f98",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "link in 2",
        "links": [
            "76182b64e9b2d9a8"
        ],
        "x": 185,
        "y": 180,
        "wires": [
            [
                "886fa3dff40f66c4",
                "d980148938fe696d",
                "4f8bcb239e8648f0"
            ]
        ]
    },
    {
        "id": "e3d6822e1a01b3d9",
        "type": "link out",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Template-Dropdown",
        "mode": "link",
        "links": [
            "ae1e298cdec965b1"
        ],
        "x": 1195,
        "y": 160,
        "wires": []
    },
    {
        "id": "155d7272748534fd",
        "type": "link out",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Kunden-Dropdown",
        "mode": "link",
        "links": [
            "d3b77d7fcf6d30e0"
        ],
        "x": 1195,
        "y": 200,
        "wires": []
    },
    {
        "id": "0a963be20f1e8016",
        "type": "link out",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Produktionsstufe-Dropdown",
        "mode": "link",
        "links": [
            "242b8c8906ac8743"
        ],
        "x": 1195,
        "y": 240,
        "wires": []
    },
    {
        "id": "463b654d92f0757a",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Array speichern",
        "func": "// msg.payload ist das komplette Kunden/Ordner-Array\nflow.set('kundenStammdaten', msg.payload); // speichere das Array im Flow-Kontext\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 200,
        "wires": [
            [
                "9354621dcdb0fa1f"
            ]
        ]
    },
    {
        "id": "4ff909ecfe240e72",
        "type": "comment",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Produktionsstufen",
        "info": "",
        "x": 870,
        "y": 240,
        "wires": []
    },
    {
        "id": "5bb2e238bb454a2c",
        "type": "ui-text-input",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "91ae8c83e547fbd7",
        "name": "Projektname",
        "label": "ð Projektname",
        "order": 4,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": true,
        "sendOnClear": true,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "dfcc8cb3d516c81c"
            ]
        ]
    },
    {
        "id": "b5243e0c66e2913c",
        "type": "ui-text-input",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "91ae8c83e547fbd7",
        "name": "Mo-ID",
        "label": "ð Mo-ID",
        "order": 3,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "text",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": true,
        "sendOnClear": true,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "943691cfea40756e"
            ]
        ]
    },
    {
        "id": "e328548f79e528dd",
        "type": "ui-dropdown",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "91ae8c83e547fbd7",
        "name": "Kunde",
        "label": "ð¢ Kunde",
        "tooltip": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": true,
        "msgTrigger": "onChange",
        "x": 470,
        "y": 420,
        "wires": [
            [
                "adc1ead1c46f301c",
                "867b11b1eea5e253"
            ]
        ]
    },
    {
        "id": "3107bbdc156cb1fd",
        "type": "ui-text-input",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "91ae8c83e547fbd7",
        "name": "Datum",
        "label": "ð Datum",
        "order": 2,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "date",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": true,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 470,
        "y": 540,
        "wires": [
            [
                "18ace834940f05cc"
            ]
        ]
    },
    {
        "id": "e1a4d541d27ada53",
        "type": "ui-dropdown",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "91ae8c83e547fbd7",
        "name": "Produktionsstufe",
        "label": "ð Produktionsstufe",
        "tooltip": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": true,
        "msgTrigger": "onChange",
        "x": 510,
        "y": 660,
        "wires": [
            [
                "0cd05b587161c992"
            ]
        ]
    },
    {
        "id": "129513f184e0674f",
        "type": "ui-dropdown",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "91ae8c83e547fbd7",
        "name": "Template",
        "label": "ð Template",
        "tooltip": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": true,
        "msgTrigger": "onChange",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "3595a0c70851faf8"
            ]
        ]
    },
    {
        "id": "0f8b5377268eb5ef",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Datum heute",
        "func": "let today = new Date();\nlet yyyy = today.getFullYear();\nlet mm = String(today.getMonth() + 1).padStart(2, '0');\nlet dd = String(today.getDate()).padStart(2, '0');\nmsg.payload = `${yyyy}-${mm}-${dd}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 540,
        "wires": [
            [
                "3107bbdc156cb1fd"
            ]
        ]
    },
    {
        "id": "cd4727e3b14deeff",
        "type": "ui-button",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "91ae8c83e547fbd7",
        "name": "ZurÃ¼cksetzen",
        "label": "ZurÃ¼cksetzen",
        "order": 8,
        "width": 3,
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "red",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 500,
        "y": 840,
        "wires": [
            [
                "8386ea793ecb5d63",
                "6ee48779a11bb9b2",
                "4f8bcb239e8648f0",
                "5c14c4543faf4c94"
            ]
        ]
    },
    {
        "id": "8386ea793ecb5d63",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Reset Dropdown",
        "func": "msg.payload = [];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 840,
        "wires": [
            [
                "ee69128ef9ab3d71"
            ]
        ]
    },
    {
        "id": "5c14c4543faf4c94",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Initialize Flow",
        "func": "msg.payload = null;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 920,
        "wires": [
            [
                "867b11b1eea5e253",
                "18ace834940f05cc",
                "dfcc8cb3d516c81c",
                "943691cfea40756e",
                "0cd05b587161c992",
                "3595a0c70851faf8"
            ]
        ]
    },
    {
        "id": "6ee48779a11bb9b2",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Reset Text In",
        "func": "msg.payload = null;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 800,
        "wires": [
            [
                "d0cfb42fb9db00ba"
            ]
        ]
    },
    {
        "id": "e1e51838689893d3",
        "type": "ui-radio-group",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "2093508e61440187",
        "name": "Neu / Vorhanden",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 1,
        "columns": "2",
        "passthru": true,
        "options": [
            {
                "label": "neues Projekt",
                "value": "neu",
                "type": "str"
            },
            {
                "label": "vorhandenes Projekt",
                "value": "vorhanden",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 510,
        "y": 460,
        "wires": [
            [
                "3ecfee9bb798f6ec"
            ]
        ]
    },
    {
        "id": "a1b73032b0467d2a",
        "type": "ui-table",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "group": "403731bf400b250a",
        "name": "Projektkartei",
        "label": "",
        "order": 1,
        "width": "6",
        "height": "1",
        "maxrows": 0,
        "passthru": false,
        "autocols": false,
        "showSearch": true,
        "deselect": true,
        "selectionType": "click",
        "columns": [
            {
                "title": "Datum",
                "key": "date",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Projektname",
                "key": "projektname",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Mo-ID",
                "key": "moid",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Mitarbeiter*in",
                "key": "user",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            }
        ],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "18fb279e655df17d"
            ]
        ]
    },
    {
        "id": "18fb279e655df17d",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Formatiere fÃ¼r Textfelder",
        "func": "let moidMsg = { payload: msg.payload.moid };\nlet projektnameMsg = { payload: msg.payload.projektname };\n\n// Datum parsen und formatieren\nlet dateStr = msg.payload.date || \"\";\nlet formattedDate = \"\";\n\nif (dateStr) {\n    // Beispiel: \"2024-07-03 12:44:00\" â \"2024-07-03\"\n    let match = dateStr.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n    if (match) {\n        formattedDate = match[1];\n    }\n}\n\nlet dateMsg = { payload: formattedDate };\n\n// Output 1: an Mo-ID-Textfeld\n// Output 2: an Projektname-Textfeld\n// Output 3: an Datums-Feld\nreturn [moidMsg, projektnameMsg, dateMsg];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "b5243e0c66e2913c"
            ],
            [
                "5bb2e238bb454a2c"
            ],
            [
                "3107bbdc156cb1fd"
            ]
        ]
    },
    {
        "id": "show_group",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "[UI] neu/vorhanden Show/Hide",
        "func": "if (msg.payload === \"vorhanden\") {\n    msg.payload = {\n        groups: {\n            show: [\"Projektkartei\"]\n        }\n    };\n} else if (msg.payload === \"neu\") {\n    msg.payload = {\n        groups: {\n            hide: [\"Projektkartei\"]\n        }\n    };\n} else {\n    // Falls ein anderer Wert, keine Ãnderung\n    return null;\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 460,
        "wires": [
            [
                "65fcec03c7dba8bf"
            ]
        ]
    },
    {
        "id": "65fcec03c7dba8bf",
        "type": "ui-control",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "",
        "ui": "826de81a1d3da833",
        "events": "all",
        "x": 1360,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "4f8bcb239e8648f0",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Reset Radiobutton",
        "func": "msg.payload = \"neu\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 880,
        "wires": [
            [
                "c068a363626d3aac"
            ]
        ]
    },
    {
        "id": "8d69f8ce150fa10a",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "neu = Reset",
        "func": "if (msg.payload === \"neu\") {\n    return msg;           // Nachricht weitergeben\n} else {\n    return null;          // sonst gar nichts schicken!\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 420,
        "wires": [
            [
                "6ee48779a11bb9b2",
                "8386ea793ecb5d63"
            ]
        ]
    },
    {
        "id": "5cd50f15353cd326",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "[UI] Eingabesperre",
        "func": "if (msg.payload === \"vorhanden\") {\n    msg.payload = undefined; // explizit lÃ¶schen (optional)\n    msg.enabled = false;     // Feld sperren\n    return msg;\n} else if (msg.payload === \"neu\") {\n    msg.payload = undefined; // explizit lÃ¶schen (optional)\n    msg.enabled = true;      // Feld freigeben\n    return msg;\n} else {\n    return null;             // nichts tun\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "3107bbdc156cb1fd",
                "5bb2e238bb454a2c",
                "b5243e0c66e2913c"
            ]
        ]
    },
    {
        "id": "867b11b1eea5e253",
        "type": "change",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kunde",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 420,
        "wires": [
            [
                "4f79fc09a4a552d8"
            ]
        ]
    },
    {
        "id": "3ecfee9bb798f6ec",
        "type": "change",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "vorhanden",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 460,
        "wires": [
            [
                "5cd50f15353cd326",
                "8d69f8ce150fa10a",
                "show_group"
            ]
        ]
    },
    {
        "id": "18ace834940f05cc",
        "type": "change",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datum",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "dfcc8cb3d516c81c",
        "type": "change",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "projektname",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "943691cfea40756e",
        "type": "change",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "moid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "0cd05b587161c992",
        "type": "change",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stufe",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3595a0c70851faf8",
        "type": "change",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "template",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "ae1e298cdec965b1",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Template-Dropdown",
        "links": [
            "e3d6822e1a01b3d9",
            "ee69128ef9ab3d71"
        ],
        "x": 345,
        "y": 700,
        "wires": [
            [
                "129513f184e0674f"
            ]
        ]
    },
    {
        "id": "242b8c8906ac8743",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Produktionsstufe-Dropdown",
        "links": [
            "0a963be20f1e8016",
            "ee69128ef9ab3d71"
        ],
        "x": 345,
        "y": 660,
        "wires": [
            [
                "e1a4d541d27ada53"
            ]
        ]
    },
    {
        "id": "d3b77d7fcf6d30e0",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Kunden-Dropdown",
        "links": [
            "155d7272748534fd",
            "ee69128ef9ab3d71"
        ],
        "x": 345,
        "y": 420,
        "wires": [
            [
                "e328548f79e528dd"
            ]
        ]
    },
    {
        "id": "72355bd8351fcc3a",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Projektkartei-Table",
        "links": [
            "d0cfb42fb9db00ba",
            "95d6c49a59226dad"
        ],
        "x": 345,
        "y": 1040,
        "wires": [
            [
                "a1b73032b0467d2a"
            ]
        ]
    },
    {
        "id": "889ad6ac5d382c0c",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Projektname-Textinput",
        "links": [
            "d0cfb42fb9db00ba"
        ],
        "x": 345,
        "y": 500,
        "wires": [
            [
                "5bb2e238bb454a2c"
            ]
        ]
    },
    {
        "id": "1654c193d5f6ae09",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Mo-ID-Textinput",
        "links": [
            "d0cfb42fb9db00ba"
        ],
        "x": 345,
        "y": 620,
        "wires": [
            [
                "b5243e0c66e2913c"
            ]
        ]
    },
    {
        "id": "ee69128ef9ab3d71",
        "type": "link out",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Reset Dropdown",
        "mode": "link",
        "links": [
            "242b8c8906ac8743",
            "ae1e298cdec965b1",
            "d3b77d7fcf6d30e0"
        ],
        "x": 935,
        "y": 840,
        "wires": []
    },
    {
        "id": "d0cfb42fb9db00ba",
        "type": "link out",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Reset Text In",
        "mode": "link",
        "links": [
            "1654c193d5f6ae09",
            "2874bd00f08fcb06",
            "72355bd8351fcc3a",
            "889ad6ac5d382c0c"
        ],
        "x": 935,
        "y": 800,
        "wires": []
    },
    {
        "id": "c068a363626d3aac",
        "type": "link out",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Reset Radiobutton",
        "mode": "link",
        "links": [
            "dcf62c9ed6a0c911"
        ],
        "x": 935,
        "y": 880,
        "wires": []
    },
    {
        "id": "dcf62c9ed6a0c911",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Neu/Vorhanden-Radiobutton",
        "links": [
            "c068a363626d3aac"
        ],
        "x": 345,
        "y": 460,
        "wires": [
            [
                "e1e51838689893d3"
            ]
        ]
    },
    {
        "id": "2874bd00f08fcb06",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Datum-Textinput",
        "links": [
            "d0cfb42fb9db00ba"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "0f8b5377268eb5ef"
            ]
        ]
    },
    {
        "id": "c8ba1d241617ce9c",
        "type": "ui-button",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "group": "91ae8c83e547fbd7",
        "name": "Projekt anlegen",
        "label": "Projekt anlegen",
        "order": 7,
        "width": 3,
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 220,
        "y": 1180,
        "wires": [
            [
                "fca50c1326be8ea0"
            ]
        ]
    },
    {
        "id": "fca50c1326be8ea0",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Pflichtfelder Check",
        "func": "let fehlende = [];\n\nif (!flow.get(\"kunde\")) fehlende.push(\"Kunde\");\nif (!flow.get(\"datum\")) fehlende.push(\"Datum\");\nif (!flow.get(\"moid\")) fehlende.push(\"Mo-ID\");\nif (!flow.get(\"projektname\")) fehlende.push(\"Projektname\");\nif (!flow.get(\"stufe\")) fehlende.push(\"Produktionsstufe\");\nif (!flow.get(\"template\")) fehlende.push(\"Template\");\n\nif (fehlende.length > 0) {\n  msg.payload = `\n  <div>\n    <div style=\"font-size:1.15em;font-weight:bold;\">Pflichtfelder fehlen!</div>\n    <div style=\"margin-top:4px;\">Bitte ausfÃ¼llen:<br>\n      <span style=\"font-weight:500;\">${fehlende.join(\", \")}</span>\n    </div>\n  </div>`;\n\n  msg.ui_update = {\n    color: \"red\",\n    dismissText: \"SchlieÃen\",\n    allowDismiss: true,\n    allowConfirm: false\n  };\n\n\n\n  msg.ok = false;\n  return [msg, null]; // Output 1: Fehler\n} else {\n    msg.ok = true;\n    msg.payload = \"Alle Pflichtfelder sind ausgefÃ¼llt.\";\n    return [null, msg]; // Output 2: Alles ok\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1180,
        "wires": [
            [
                "049d373b283a3afc"
            ],
            [
                "f6c56536578c78fe"
            ]
        ]
    },
    {
        "id": "91c3a5fe4e5eecf4",
        "type": "fs-ops-mkdir",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Projektordner anlegen",
        "path": "",
        "pathType": "str",
        "dirname": "zielPfad",
        "dirnameType": "msg",
        "recursive": false,
        "mode": "755",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 500,
        "y": 1460,
        "wires": [
            [
                "3d4b5f86c5ffa01f"
            ]
        ]
    },
    {
        "id": "b48da6116f6c4a9b",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Unterordner anlegen",
        "func": "msg.payload = msg.unterordner.map(ordnerObj => `${msg.zielPfad}/${ordnerObj.name}`);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1460,
        "wires": [
            [
                "8a63e541bf541b68"
            ]
        ]
    },
    {
        "id": "8a63e541bf541b68",
        "type": "split",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1430,
        "y": 1460,
        "wires": [
            [
                "af8fbaa4a773e082"
            ]
        ]
    },
    {
        "id": "af8fbaa4a773e082",
        "type": "fs-ops-mkdir",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Unterordner anlegen",
        "path": "",
        "pathType": "str",
        "dirname": "payload",
        "dirnameType": "msg",
        "recursive": false,
        "mode": "755",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 1620,
        "y": 1460,
        "wires": [
            [
                "00cb38d09cf73f62"
            ]
        ]
    },
    {
        "id": "00cb38d09cf73f62",
        "type": "join",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1810,
        "y": 1460,
        "wires": [
            [
                "f60de5ae351b2bf4"
            ]
        ]
    },
    {
        "id": "a34bec94987a6255",
        "type": "fs-ops-copy",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Template kopieren",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "templateSource",
        "sourceFilenameType": "msg",
        "destPath": "templateDest",
        "destPathType": "msg",
        "destFilename": "filename",
        "destFilenameType": "msg",
        "link": false,
        "overwrite": false,
        "x": 730,
        "y": 1520,
        "wires": [
            [
                "52dd943e6e75ae72"
            ]
        ]
    },
    {
        "id": "88664cf125d3933c",
        "type": "switch",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "neu/vorhanden",
        "property": "vorhanden",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "neu",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "vorhanden",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 1280,
        "wires": [
            [
                "e2dfeadde161b489"
            ],
            [
                "d008ed5534cdc428"
            ]
        ]
    },
    {
        "id": "e2f65bc098f601a4",
        "type": "fs-ops-access",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Duplikate prÃ¼fen",
        "path": "",
        "pathType": "str",
        "filename": "zielPfad",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 280,
        "y": 1440,
        "wires": [
            [
                "daa77dbe62344f24",
                "4877009023c9a7ca"
            ],
            [
                "91c3a5fe4e5eecf4"
            ]
        ]
    },
    {
        "id": "049d373b283a3afc",
        "type": "ui-notification",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": false,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "Fehlermeldung ausgeben",
        "x": 1630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "daa77dbe62344f24",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Duplikat Fehlermeldung",
        "func": "msg.payload = `\n  <div>\n    <div style=\"font-size:1.15em;font-weight:bold;\">Das Projekt existiert bereits!</div>\n  </div>`;\n\nmsg.ui_update = {\n    color: \"red\",\n    dismissText: \"SchlieÃen\",\n    allowDismiss: true,\n    allowConfirm: false\n}; \n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1400,
        "wires": [
            [
                "049d373b283a3afc"
            ]
        ]
    },
    {
        "id": "52dd943e6e75ae72",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Meldung Text",
        "func": "msg.payload = `\n  <div>\n    <div style=\"font-size:1.15em;font-weight:bold;\">Das Projekt wurde erfolgreich angelegt!</div>\n  </div>`;\n\nmsg.ui_update = {\n    color: \"green\",\n    dismissText: \"SchlieÃen\",\n    confirmText: \"Projekt Ã¶ffnen\",\n    allowDismiss: true,\n    allowConfirm: true\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1520,
        "wires": [
            [
                "5be990aae94e6a3d"
            ]
        ]
    },
    {
        "id": "5be990aae94e6a3d",
        "type": "ui-notification",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": false,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": false,
        "dismissText": "",
        "allowConfirm": false,
        "confirmText": "",
        "raw": true,
        "className": "",
        "name": "Meldung ausgeben",
        "x": 1150,
        "y": 1520,
        "wires": [
            [
                "ea819edcc7fbd28a"
            ]
        ]
    },
    {
        "id": "79d9833babec0616",
        "type": "file",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "immo24-proj.json schreiben",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 1460,
        "wires": [
            [
                "b48da6116f6c4a9b"
            ]
        ]
    },
    {
        "id": "3d4b5f86c5ffa01f",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "JSON formatieren",
        "func": "// let now = msg.datum;\n// let erstellt_am = now.toISOString().replace('T', ' ').substring(0, 19); // SchÃ¶neres Format\n\nmsg.filename = `${msg.zielPfad}/immo24-proj.json`;\nmsg.payload = {\n    erstellt_am: msg.datum,\n    kunde: msg.kunde,\n    projektname: msg.projektname,\n    mo_id: msg.moid,\n    user: msg.activeUser\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1460,
        "wires": [
            [
                "79d9833babec0616"
            ]
        ]
    },
    {
        "id": "f60de5ae351b2bf4",
        "type": "fs-ops-dir",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Session-Files auflisten",
        "path": "templateDest",
        "pathType": "msg",
        "filter": "*.ptx",
        "filterType": "str",
        "dir": "payload",
        "dirType": "msg",
        "x": 300,
        "y": 1520,
        "wires": [
            [
                "740eded456c45a8d"
            ]
        ]
    },
    {
        "id": "740eded456c45a8d",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Nummerierung",
        "func": "function normalize(str) {\n    return (str || \"\").normalize(\"NFC\");\n}\n\n// Alles normalisieren!\nlet files = (msg.payload || []).map(normalize);\n\nlet values = {\n    datum: normalize(msg.datum),\n    projektname: normalize(msg.projektname),\n    moid: normalize(msg.moid),\n    benutzer: normalize(msg.activeUserKuerzel),\n    kunde: normalize(msg.kunde),\n    produktionsstufe: normalize(msg.stufeLabel)\n};\n\nlet baseTemplate = normalize(global.get(\"sessionSchema\") || \"{{projektname}} {{moid}} - {{produktionsstufe}} {{benutzer}} {{version}}\");\n\n// Regex fÃ¼r alles EXKLUSIVE {{version}} bauen:\nlet rePattern = baseTemplate\n    .replace(/\\./g, '\\\\.') // Punkte escapen\n    .replace(/\\{\\{version\\}\\}/g, \"v(\\\\d+)\")\n    .replace(/\\{\\{(\\w+)\\}\\}/g, (match, p1) => {\n        if (p1 === \"version\") return \"\";\n        return values[p1] ? values[p1].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : \".*\";\n    });\n\nlet re = new RegExp('^' + rePattern + '\\\\.ptx$');\n\nnode.warn(\"Regex pattern: \" + re);\nlet maxV = 0;\nlet matches = [];\n\nfiles.forEach(f => {\n    let m = re.exec(f);\n    node.warn(\"Checking file: \" + f + \" -> \" + (m ? \"MATCH\" : \"NO MATCH\"));\n    if (m && m[1]) {\n        matches.push(f);\n        let v = parseInt(m[1]);\n        if (v > maxV) maxV = v;\n    }\n});\n\nlet nextV = maxV + 1;\nvalues.version = `v${nextV}`;\n\nlet filename = baseTemplate.replace(/\\{\\{(\\w+)\\}\\}/g, (match, p1) => values[p1] || \"\");\n\n// .ptx-Endung erzwingen\nfilename = filename.replace(/\\.[^.]+$/, \"\") + \".ptx\";\nmsg.filename = filename;\n\nnode.warn(\"Gefundene Matches: \" + JSON.stringify(matches));\nnode.warn(\"NÃ¤chstes File: \" + filename);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1520,
        "wires": [
            [
                "a34bec94987a6255"
            ]
        ]
    },
    {
        "id": "f6c56536578c78fe",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Projektvariablen laden",
        "func": "// Funktion: Projektvariablen laden\n\nmsg.kunde = flow.get('kunde');\nmsg.vorhanden = flow.get('vorhanden');\nmsg.datum = flow.get('datum');\nmsg.projektname = flow.get('projektname');\nmsg.moid = flow.get('moid');\nmsg.stufe = flow.get('stufe');\nmsg.template = flow.get('template');\n\nmsg.activeUser = global.get('activeUser');\nmsg.activeUserKuerzel = global.get('activeUserKuerzel');\nmsg.projektordnerSchema = global.get(\"projektordnerSchema\") || \"\";\nmsg.kundenStammdaten = flow.get('kundenStammdaten') || [];\nmsg.PathProduktionen = global.get('PathProduktionen') || '';\nmsg.PathMitarbeiter = global.get('PathMitarbeiter') || '';\nmsg.projektRoot = msg.PathProduktionen + '/' + msg.kunde;\n\n// Unterordner & Label hier setzen\nlet kundeObj = msg.kundenStammdaten.find(k => k.kunde === msg.kunde) || {};\nlet unterordner = Array.isArray(kundeObj.ordner) ? kundeObj.ordner : [];\nmsg.unterordner = unterordner;\nlet stufeObj = unterordner.find(o => o.name === msg.stufe);\nmsg.stufeLabel = stufeObj ? stufeObj.label : msg.stufe;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1200,
        "wires": [
            [
                "112134d881c75205"
            ]
        ]
    },
    {
        "id": "e2dfeadde161b489",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "neue Projektordner und Pfade berechnen",
        "func": "\n// Platzhalter ersetzen im Ordnernamen/Schema\nlet values = {\n    datum: msg.datum,\n    projektname: msg.projektname,\n    moid: msg.moid,\n    benutzer: msg.activeUserKuerzel,\n    kunde: msg.kunde\n};\n\nmsg.projektOrdner = msg.projektordnerSchema.replace(/{{(\\w+)}}/g, (_, key) => values[key] || \"\");\nmsg.zielPfad = `${msg.PathProduktionen}/${msg.kunde}/${msg.projektOrdner}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1260,
        "wires": [
            [
                "d86904636be0f112"
            ]
        ]
    },
    {
        "id": "d86904636be0f112",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Template-Pfade auflÃ¶sen",
        "func": "msg.templateSource = `${msg.PathMitarbeiter}/${msg.activeUser}/immo24/templates/${msg.template}`;\nmsg.templateDest = `${msg.zielPfad}/${msg.stufe}`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1260,
        "wires": [
            [
                "e2f65bc098f601a4",
                "d92ffa0a71a5bdab"
            ]
        ]
    },
    {
        "id": "4f79fc09a4a552d8",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c0de7eb24d59090d",
        "name": "Reset Produktionsstufe",
        "func": "msg.payload = [];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 320,
        "wires": [
            [
                "e1a4d541d27ada53",
                "46c089e460663388"
            ]
        ]
    },
    {
        "id": "46c089e460663388",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "Projekt-Pfad",
        "func": "let kunde = flow.get('kunde');\nlet PathProduktionen = global.get('PathProduktionen');\n\nmsg.payload = PathProduktionen + '/' + kunde;\nmsg.projektRoot = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 160,
        "wires": [
            [
                "185acd9882bafd74"
            ]
        ]
    },
    {
        "id": "185acd9882bafd74",
        "type": "fs-ops-dir",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "Projekte lesen",
        "path": "payload",
        "pathType": "msg",
        "filter": "",
        "filterType": "str",
        "dir": "payload",
        "dirType": "msg",
        "x": 1580,
        "y": 160,
        "wires": [
            [
                "5dfefaa79a87b909"
            ]
        ]
    },
    {
        "id": "5dfefaa79a87b909",
        "type": "split",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1750,
        "y": 160,
        "wires": [
            [
                "d827e2987029dd1c"
            ]
        ]
    },
    {
        "id": "95d6c49a59226dad",
        "type": "link out",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "Projektkartei-Table",
        "mode": "link",
        "links": [
            "72355bd8351fcc3a"
        ],
        "x": 2415,
        "y": 220,
        "wires": []
    },
    {
        "id": "94e48f5086781a41",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "nach Ordnern filtern",
        "func": "if (msg.stats && msg.stats.isDirectory()) {\n    msg.filename = msg.payload.path + \"/immo24-proj.json\";\n    msg.projektname = msg.payload.name;\n    return msg;\n}\n// KEIN ORDNER: Dummy-Nachricht erzeugen\nreturn { skip: true, parts: msg.parts };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2280,
        "y": 160,
        "wires": [
            [
                "a304588c2808c1ac"
            ]
        ]
    },
    {
        "id": "477b7d2ef0ea4778",
        "type": "fs-ops-stats",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "",
        "path": "",
        "pathType": "str",
        "filename": "payload.path",
        "filenameType": "msg",
        "stats": "stats",
        "sizeType": "msg",
        "x": 2100,
        "y": 160,
        "wires": [
            [
                "94e48f5086781a41"
            ]
        ]
    },
    {
        "id": "a304588c2808c1ac",
        "type": "fs-ops-access",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "Check immo24-proj.json",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 2510,
        "y": 160,
        "wires": [
            [
                "d4a860faf530cfaf"
            ],
            [
                "40b1713e53fe014e"
            ]
        ]
    },
    {
        "id": "40b1713e53fe014e",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "JSON + Dummys",
        "func": "if (msg.skip) return msg; // Dummy durchreichen\ntry {\n    let data = JSON.parse(msg.payload);\n    msg.payload = {\n        date: data.erstellt_am,\n        projektname: data.projektname,\n        moid: data.mo_id,\n        user: data.user\n    };\n    return msg;\n} catch (e) {\n    // Fehler beim JSON: Dummy setzen\n    msg.skip = true;\n    msg.error = \"Kein valides JSON\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 220,
        "wires": [
            [
                "e456d033730a3863"
            ]
        ]
    },
    {
        "id": "d4a860faf530cfaf",
        "type": "file in",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "immo24-proj.json lesen",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1630,
        "y": 220,
        "wires": [
            [
                "40b1713e53fe014e"
            ]
        ]
    },
    {
        "id": "e456d033730a3863",
        "type": "join",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "",
        "mode": "auto",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "payload",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2090,
        "y": 220,
        "wires": [
            [
                "2f60e367b0acae57"
            ]
        ]
    },
    {
        "id": "d827e2987029dd1c",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "Pfad anreichern",
        "func": "// msg.payload ist z.B. \"Projektname\"\nlet root = msg.projektRoot;\n\n// Erzeuge ein Objekt fÃ¼r jeden Eintrag mit name + vollstÃ¤ndigem Pfad\nmsg.payload = {\n    name: msg.payload,\n    path: root + \"/\" + msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 160,
        "wires": [
            [
                "477b7d2ef0ea4778"
            ]
        ]
    },
    {
        "id": "2f60e367b0acae57",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "4b0349befccb3ec9",
        "name": "Dummys rausfiltern",
        "func": "if (!Array.isArray(msg.payload)) {\n    msg.payload = [];\n    return msg;\n}\nmsg.payload = msg.payload.filter(function (item) {\n    return item\n        && !item.skip\n        && typeof item === \"object\"\n        && item.date\n        && item.projektname\n        && item.moid\n        && item.user;\n});\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2270,
        "y": 220,
        "wires": [
            [
                "95d6c49a59226dad"
            ]
        ]
    },
    {
        "id": "d008ed5534cdc428",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Projektordner fÃ¼r vorhandenes Projekt suchen",
        "func": "\nfunction normalize(str) {\n    return str.normalize(\"NFC\"); // oder \"NFD\", aber am besten Ã¼berall das gleiche!\n}\n\n// Holt Ordnernamen (ohne versteckte Dateien), UND normalisiert sie!\nconst ordnerListe = (msg.folders || []).filter(name => !name.startsWith('.')).map(normalize);\n\n// Werte fÃ¼r Platzhalter aus msg (alle Werte normalisieren!)\nconst values = {\n    datum: normalize(msg.datum),\n    projektname: normalize(msg.projektname),\n    moid: normalize(msg.moid),\n    kunde: normalize(msg.kunde)\n    // ggf. weitere Platzhalter!\n};\n\n// Schema auch normalisieren!\nlet schema = normalize(msg.projektordnerSchema);\n\n// Pattern bauen wie gehabt\nlet pattern = schema\n    .replace(/{{benutzer}}/g, '.+')\n    .replace(/{{(\\w+)}}/g, (m, key) =>\n        values[key] ? values[key].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : '.*'\n    );\npattern = '^' + pattern.replace(/ /g, '\\\\s+') + '$';\n\nconst re = new RegExp(pattern);\n\nordnerListe.forEach(name => {\n    node.warn(\"Teste [\" + name + \"] gegen Pattern [\" + pattern + \"]: \" + (re.test(name) ? \"JA\" : \"NEIN\"));\n});\n\nlet gefunden = ordnerListe.find(name => re.test(name));\n\nif (gefunden) {\n    msg.zielPfad = msg.PathProduktionen + '/' + msg.kunde + '/' + gefunden;\n    // KÃ¼rzel extrahieren\n    const schemaParts = schema.split(' ');\n    const ordnerParts = gefunden.split(' ');\n    const benutzerIndex = schemaParts.findIndex(part => part.includes('benutzer'));\n    msg.benutzerAusOrdner = benutzerIndex > -1 ? ordnerParts[benutzerIndex] : null;\n    return [msg, null];\n} else {\n    msg.error = \"Kein passender Projektordner gefunden! (Unicode-Problem?)\";\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1300,
        "wires": [
            [
                "09f7e3677e960a0d"
            ],
            []
        ]
    },
    {
        "id": "09f7e3677e960a0d",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Template-Pfade auflÃ¶sen",
        "func": "msg.templateSource = `${msg.PathMitarbeiter}/${msg.activeUser}/immo24/templates/${msg.template}`;\nmsg.templateDest = `${msg.zielPfad}/${msg.stufe}`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1300,
        "wires": [
            [
                "f60de5ae351b2bf4"
            ]
        ]
    },
    {
        "id": "196e5db112dae50f",
        "type": "exec",
        "z": "b1c585f0d25b86fd",
        "g": "0d1faa7a2ad224be",
        "command": "",
        "addpay": "command",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Pro Tools Ã¶ffnen",
        "x": 1760,
        "y": 1620,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6629036df320012f",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "0d1faa7a2ad224be",
        "name": "Befehle je nach OS",
        "func": "let fullPath = msg.templateDest + '/' + msg.filename;\nif (msg.payload.platform === \"win32\") {\n    fullPath = fullPath.replace(/\\//g, \"\\\\\");\n    msg.command = 'start \"\" \"' + fullPath + '\"';\n} else if (msg.payload.platform === \"darwin\") {\n    msg.command = 'open \"' + fullPath + '\"';\n} else {\n    msg.command = \"echo OS nicht unterstÃ¼tzt\";\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1620,
        "wires": [
            [
                "196e5db112dae50f"
            ]
        ]
    },
    {
        "id": "30aa15b86c7b3bff",
        "type": "delay",
        "z": "b1c585f0d25b86fd",
        "g": "0d1faa7a2ad224be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1620,
        "y": 1560,
        "wires": [
            [
                "c392a56e56df401e"
            ]
        ]
    },
    {
        "id": "c392a56e56df401e",
        "type": "OS",
        "z": "b1c585f0d25b86fd",
        "g": "0d1faa7a2ad224be",
        "name": "",
        "x": 1370,
        "y": 1620,
        "wires": [
            [
                "6629036df320012f"
            ]
        ]
    },
    {
        "id": "ea819edcc7fbd28a",
        "type": "switch",
        "z": "b1c585f0d25b86fd",
        "g": "0d1faa7a2ad224be",
        "name": "Projekt Ã¶ffnen geklickt",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "confirm_clicked",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1420,
        "y": 1560,
        "wires": [
            [
                "30aa15b86c7b3bff"
            ]
        ]
    },
    {
        "id": "b41e02a9f041aa19",
        "type": "ui-table",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "group": "c32759b3efc667c0",
        "name": "Kundenliste",
        "label": "",
        "order": 2,
        "width": "0",
        "height": "0",
        "maxrows": "",
        "passthru": false,
        "autocols": false,
        "showSearch": false,
        "deselect": false,
        "selectionType": "click",
        "columns": [
            {
                "title": "Kunde",
                "key": "kunde",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Unterordner",
                "key": "ordner_anzahl",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "",
                "key": "ð",
                "keyType": "str",
                "type": "button",
                "width": "10",
                "align": "start"
            }
        ],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 370,
        "y": 1960,
        "wires": [
            [
                "7080ca0422762589",
                "d6cf07277be27381"
            ]
        ]
    },
    {
        "id": "33ba96310cfdeb2a",
        "type": "file in",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "kunden_stammdaten.json lesen",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 1840,
        "wires": [
            [
                "865166a918f8dd7f"
            ]
        ]
    },
    {
        "id": "865166a918f8dd7f",
        "type": "json",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "JSON parsen",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 640,
        "y": 1840,
        "wires": [
            [
                "a4d41af963187fb7",
                "2fe371eb71de6440"
            ]
        ]
    },
    {
        "id": "a4d41af963187fb7",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Daten aufbereiten",
        "func": "\nlet selectedKunde = flow.get('selectedKunde');\nmsg.payload = msg.payload.map(k => ({\n    kunde: k.kunde,\n    ordner_anzahl: k.ordner ? k.ordner.length : 0\n}));\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1860,
        "wires": [
            [
                "b41e02a9f041aa19"
            ]
        ]
    },
    {
        "id": "2ce41bb4bd723b67",
        "type": "ui-form",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Neukunden Formular",
        "group": "9acf74bc666bb115",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Kunde",
                "key": "kunde",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "kunde": ""
        },
        "payload": "",
        "submit": "Anlegen",
        "cancel": "",
        "resetOnSubmit": true,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "passthru": false,
        "dropdownOptions": [],
        "x": 400,
        "y": 2300,
        "wires": [
            [
                "41a1604a42cf8a96",
                "f4601d95bfebf9a0"
            ]
        ]
    },
    {
        "id": "41a1604a42cf8a96",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Kunde hinzufÃ¼gen",
        "func": "// Hole bestehende Kunden aus flow\nlet kunden = flow.get(\"kundenStammdaten\") || [];\nlet neuerKunde = msg.payload;\nneuerKunde.ordner = []; // Leeres Ordner-Array fÃ¼r den Start\n\n// PrÃ¼fen, ob der Kunde schon existiert\nif (kunden.find(k => k.kunde === neuerKunde.kunde)) {\n    msg.payload = \"Kunde existiert bereits!\";\n    msg.topic = \"error\";\n    return [null, msg];\n}\n\nkunden.push(neuerKunde);\nmsg.payload = JSON.stringify(kunden, null, 2);\nmsg.topic = \"ok\";\nmsg.neukunde = neuerKunde;\nreturn [msg, null];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2300,
        "wires": [
            [
                "4a19a26eb247bcfb",
                "3db5bdd353e02f42",
                "5d8cb4ae2aa3f2ec"
            ],
            [
                "a67a2cab1a358d44"
            ]
        ],
        "outputLabels": [
            "Kunde anlegen",
            "Kunde vorhanden"
        ]
    },
    {
        "id": "2fe371eb71de6440",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Array speichern",
        "func": "// msg.payload ist das komplette Kunden/Ordner-Array\nflow.set('kundenStammdaten', msg.payload); // speichere das Array im Flow-Kontext\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "a67a2cab1a358d44",
        "type": "ui-notification",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "Fehlermeldung ausgeben",
        "x": 1470,
        "y": 2020,
        "wires": [
            [
                "027af555cc7c1332"
            ]
        ]
    },
    {
        "id": "d2ddab99473b3656",
        "type": "file",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "kunden_stammdaten.json schreiben",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1510,
        "y": 1980,
        "wires": [
            [
                "027af555cc7c1332"
            ]
        ]
    },
    {
        "id": "027af555cc7c1332",
        "type": "link out",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Refresh Table",
        "mode": "link",
        "links": [
            "7d54c183a3c2f73a"
        ],
        "x": 1715,
        "y": 2000,
        "wires": []
    },
    {
        "id": "7d54c183a3c2f73a",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Refresh Table",
        "links": [
            "027af555cc7c1332"
        ],
        "x": 155,
        "y": 1820,
        "wires": [
            [
                "14f500b7b1de838f"
            ]
        ]
    },
    {
        "id": "f10c3bfa8109cdd0",
        "type": "ui-table",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "group": "c32759b3efc667c0",
        "name": "Ordnerliste",
        "label": "",
        "order": 4,
        "width": "0",
        "height": "0",
        "maxrows": "",
        "passthru": false,
        "autocols": false,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [
            {
                "title": "Name",
                "key": "name",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Label",
                "key": "label",
                "keyType": "key",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "Produktionsstufe",
                "key": "ist_Produktionsstufe",
                "keyType": "key",
                "type": "tickcross",
                "width": "",
                "align": "start"
            },
            {
                "title": "",
                "key": "âï¸",
                "keyType": "str",
                "type": "button",
                "width": "10",
                "align": "end"
            },
            {
                "title": "",
                "key": "ðï¸",
                "keyType": "str",
                "type": "button",
                "width": "10",
                "align": "end"
            }
        ],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 370,
        "y": 2040,
        "wires": [
            [
                "ae55601a9da0c911"
            ]
        ]
    },
    {
        "id": "7080ca0422762589",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Aktuellen Kunden & Ordner setzen",
        "func": "// Kundenliste aus flow holen (oder global)\nlet kunden = flow.get(\"kundenStammdaten\") || [];\nlet gewaehlterKunde = msg.payload.kunde; // z.B. \"SuperVision\"\n\n// Kundenobjekt suchen\nlet kundeObj = kunden.find(k => k.kunde === gewaehlterKunde);\n\nif (kundeObj && Array.isArray(kundeObj.ordner)) {\n    msg.payload = kundeObj.ordner; // vollstÃ¤ndige Ordnerliste fÃ¼r die Tabelle!\n    flow.set(\"currentKunde\", kundeObj); // optional, fÃ¼r spÃ¤tere Aktionen\n} else {\n    msg.payload = []; // falls nichts gefunden\n}\n\nflow.set('selectedKunde', gewaehlterKunde);\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1960,
        "wires": [
            [
                "f10c3bfa8109cdd0"
            ]
        ]
    },
    {
        "id": "18e8a335ef97da21",
        "type": "ui-form",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Ordner Datensatz",
        "group": "1706fadffdc2c0e4",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "key": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Label",
                "key": "label",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Produktionsstufe",
                "key": "ist_Produktionsstufe",
                "type": "checkbox",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "label": "",
            "ist_Produktionsstufe": false
        },
        "payload": "",
        "submit": "Speichern",
        "cancel": "",
        "resetOnSubmit": true,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "passthru": false,
        "dropdownOptions": [],
        "x": 390,
        "y": 2160,
        "wires": [
            [
                "4f7262abea362c2d",
                "9106241422db912a"
            ]
        ]
    },
    {
        "id": "9106241422db912a",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Datensatz bearbeiten",
        "func": "let kunden = flow.get('kundenStammdaten') || [];\nlet selectedKunde = flow.get('selectedKunde') || \"\";\nlet altName = flow.get('bearbeiteAltName'); // Vorher im Flow gesetzt (Bearbeiten) oder undefined/null (Neuanlage)\nlet neuerOrdner = msg.payload;\n\nlet kunde = kunden.find(k => k.kunde === selectedKunde);\nif (!kunde || !Array.isArray(kunde.ordner)) {\n    node.error(\"Kunde oder Ordnerliste nicht gefunden!\");\n    return null;\n}\n\n// --- NEU: Unterscheidung Neu/Bearbeiten ---\nif (!altName) {\n    // NEUANLAGE\n    // PrÃ¼fe, ob der Name schon existiert\n    if (kunde.ordner.some(o => o.name.toLowerCase().trim() === neuerOrdner.name.toLowerCase().trim())) {\n        msg.payload = \"Ordnername existiert bereits!\";\n        msg.topic = \"error\";\n        return [null, msg];\n    }\n    kunde.ordner.push(neuerOrdner);\n    flow.set('kundenStammdaten', kunden);\n    msg.payload = JSON.stringify(kunden, null, 2);\n    msg.topic = \"ok\";\n    return [msg, null];\n} else {\n    // BEARBEITEN\n    // PrÃ¼fe auf doppelten Namen (auÃer der aktuelle ist derselbe wie vorher)\n    let nameVorhanden = kunde.ordner.findIndex(o =>\n        o.name.toLowerCase().trim() === neuerOrdner.name.toLowerCase().trim()\n    );\n    let idxAlt = kunde.ordner.findIndex(o =>\n        o.name.toLowerCase().trim() === altName.toLowerCase().trim()\n    );\n    if (nameVorhanden >= 0 && nameVorhanden !== idxAlt) {\n        msg.payload = \"Ordnername existiert bereits!\";\n        msg.topic = \"error\";\n        return [null, msg];\n    }\n\n    // Ordner ersetzen\n    if (idxAlt >= 0) {\n        kunde.ordner[idxAlt] = neuerOrdner;\n        flow.set('kundenStammdaten', kunden);\n        msg.payload = JSON.stringify(kunden, null, 2);\n        msg.topic = \"ok\";\n        flow.set('bearbeiteAltName', null); // AufrÃ¤umen\n        return [msg, null];\n    } else {\n        node.error(\"Alter Ordnername nicht gefunden!\");\n        return null;\n    }\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 2180,
        "wires": [
            [
                "4a19a26eb247bcfb"
            ],
            [
                "a67a2cab1a358d44"
            ]
        ]
    },
    {
        "id": "f5cd7bb31098eaad",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Loeschen",
        "func": "let kunden = flow.get('kundenStammdaten') || [];\nlet selectedKunde = flow.get('selectedKunde') || \"\";\n\n// Info zur Zeile kommt oft als msg.payload, z.B. { name: \"03_Sounddesign\", ... }\nlet zuLoeschen = msg.payload;\n\n// Kunde suchen\nlet kunde = kunden.find(k => k.kunde === selectedKunde);\nif (!kunde || !Array.isArray(kunde.ordner)) return null;\n\n// Ordner mit gleichem Namen rausfiltern (case-insensitive)\nkunde.ordner = kunde.ordner.filter(o =>\n    o.name.toLowerCase().trim() !== zuLoeschen.name.toLowerCase().trim()\n);\n\n// Speichern & RÃ¼ckgabe\nflow.set('kundenStammdaten', kunden);\nmsg.datensatz = JSON.stringify(kunden, null, 2);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2020,
        "wires": [
            [
                "72c8c1490dfeb838"
            ]
        ]
    },
    {
        "id": "7b6fc7ec6990e925",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Neu / Bearbeiten",
        "func": "// 1. Werte fÃ¼r Bearbeiten im Flow-Kontext speichern (damit sie nach dem Dialog Ã¶ffnen noch da sind)\nflow.set('editFormValue', {\n    name: msg.payload.name,\n    label: msg.payload.label,\n    ist_Produktionsstufe: msg.payload.ist_Produktionsstufe\n});\n// Optional: alten Namen merken, falls du das beim Speichern brauchst\nflow.set('bearbeiteAltName', msg.payload.name);\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 2060,
        "wires": [
            [
                "2fd60a7350f47fb3",
                "0d985a15d4a4a95c"
            ]
        ]
    },
    {
        "id": "ae55601a9da0c911",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Button Selector",
        "func": "// Action kann \"button_click\" sein, column ist entweder \"ðï¸\" (Papierkorb) oder \"âï¸\" (Stift)\n\nif (msg.action !== \"button_click\") {\n    return null; // Nur reagieren, wenn ein Button geklickt wurde\n}\n\nif (msg.column === \"ðï¸\") {\n    // An Output 1: LÃ¶schen-Logik\n    return [msg, null];\n}\nif (msg.column === \"âï¸\") {\n    // An Output 2: Bearbeiten-Logik\n    return [null, msg];\n}\n\n// Falls kein bekannter Button: nichts machen\nreturn null;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 2040,
        "wires": [
            [
                "f5cd7bb31098eaad"
            ],
            [
                "7b6fc7ec6990e925"
            ]
        ]
    },
    {
        "id": "2fd60a7350f47fb3",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "[UI] Bearbeiten-Dialog einblenden",
        "func": "msg.payload = {\n    groups: {\n        show: ['Neuer Datensatz']\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 2120,
        "wires": [
            [
                "dadf337fb5b73a92"
            ]
        ]
    },
    {
        "id": "dadf337fb5b73a92",
        "type": "ui-control",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "",
        "ui": "826de81a1d3da833",
        "events": "all",
        "x": 1680,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "0d985a15d4a4a95c",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Werte ans Formular schicken",
        "func": "msg.payload = flow.get('editFormValue');\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2060,
        "wires": [
            [
                "18e8a335ef97da21"
            ]
        ]
    },
    {
        "id": "4f7262abea362c2d",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "[UI] Bearbeiten-Dialog ausblenden",
        "func": "msg.payload = {\n    groups: {\n        hide: ['Neuer Datensatz']\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 2160,
        "wires": [
            [
                "dadf337fb5b73a92"
            ]
        ]
    },
    {
        "id": "2a3513798f605e53",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "[UI] Neukunden-Dialog einblenden",
        "func": "msg.payload = {\n    groups: {\n        show: ['Neuer Kunde']\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 2200,
        "wires": [
            [
                "dadf337fb5b73a92"
            ]
        ]
    },
    {
        "id": "4cb0d9e7dd76739c",
        "type": "ui-button",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "group": "c32759b3efc667c0",
        "name": "Neuer Kunde",
        "label": "Neuer Kunde",
        "order": 3,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 370,
        "y": 2240,
        "wires": [
            [
                "2a3513798f605e53"
            ]
        ]
    },
    {
        "id": "f4601d95bfebf9a0",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "[UI] Neukunden-Dialog ausblenden",
        "func": "msg.payload = {\n    groups: {\n        hide: ['Neuer Kunde']\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 2240,
        "wires": [
            [
                "dadf337fb5b73a92"
            ]
        ]
    },
    {
        "id": "9d4854382e8cb59d",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Refresh",
        "func": "let kunde = flow.get('selectedKunde');\nif (!kunde) return null;\n\nmsg.payload = { kunde: kunde }; // wie beim Row-Click!\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1880,
        "wires": [
            [
                "7080ca0422762589"
            ]
        ]
    },
    {
        "id": "2c1e3dd3e61d04e7",
        "type": "delay",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 1880,
        "wires": [
            [
                "9d4854382e8cb59d"
            ]
        ]
    },
    {
        "id": "d6cf07277be27381",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Kunde Loeschen",
        "func": "// PrÃ¼fe, ob es ein Button-Click auf die Spalte \"ð\" war\nif (msg.action === \"button_click\" && msg.column === \"ð\") {\n    // Kunden aus flow holen\n    let kunden = flow.get('kundenStammdaten') || [];\n    let zuLoeschen = msg.payload.kunde;\n\n    // Kunden filtern\n    kunden = kunden.filter(k => k.kunde !== zuLoeschen);\n    flow.set('kundenStammdaten', kunden);\n\n    // Optional: Selektion zurÃ¼cksetzen\n    flow.set('selectedKunde', null);\n\n    // JSON fÃ¼r Datei\n    msg.datensatz = JSON.stringify(kunden, null, 2);\n\n    return msg;\n}\n\n// Kein passender Button-Klick: Node tut nichts\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1960,
        "wires": [
            [
                "2beb850f85c03577"
            ]
        ]
    },
    {
        "id": "12c6eb058a6b1e99",
        "type": "ui-button",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "group": "c32759b3efc667c0",
        "name": "Neuer Ordner",
        "label": "Neuer Ordner",
        "order": 5,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 380,
        "y": 2100,
        "wires": [
            [
                "7b6fc7ec6990e925"
            ]
        ]
    },
    {
        "id": "44ed24d9f345abc2",
        "type": "ui-notification",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "ui": "826de81a1d3da833",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Abbrechen",
        "allowConfirm": true,
        "confirmText": "LÃ¶schen",
        "raw": false,
        "className": "",
        "name": "LÃ¶schen bestÃ¤tigen",
        "x": 1510,
        "y": 1820,
        "wires": [
            [
                "9ba181b908f39390"
            ]
        ]
    },
    {
        "id": "2beb850f85c03577",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Meldung Kunde LÃ¶schen",
        "func": "msg.payload = \"Soll der Kunde wirklich gelÃ¶scht werden?\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1800,
        "wires": [
            [
                "44ed24d9f345abc2"
            ]
        ]
    },
    {
        "id": "72c8c1490dfeb838",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Meldung Ordner LÃ¶schen",
        "func": "msg.payload = \"Soll der Ordner wirklich gelÃ¶scht werden?\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1840,
        "wires": [
            [
                "44ed24d9f345abc2"
            ]
        ]
    },
    {
        "id": "9ba181b908f39390",
        "type": "switch",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "LÃ¶schen geklickt",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "confirm_clicked",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1530,
        "y": 1860,
        "wires": [
            [
                "62ba854e72cdf8dd"
            ]
        ]
    },
    {
        "id": "62ba854e72cdf8dd",
        "type": "change",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "datensatz",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 1900,
        "wires": [
            [
                "4a19a26eb247bcfb"
            ]
        ]
    },
    {
        "id": "d980148938fe696d",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "c6bbd2b9b2d5d462",
        "name": "Stammdaten Verzeichnis",
        "func": "msg.filename = global.get('PathStammdaten') + \"/kunden_stammdaten.json\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "4f280f447ba900e3"
            ]
        ]
    },
    {
        "id": "14f500b7b1de838f",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Stammdaten Verzeichnis",
        "func": "msg.filename = global.get('PathStammdaten') + \"/kunden_stammdaten.json\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1780,
        "wires": [
            [
                "33ba96310cfdeb2a",
                "2c1e3dd3e61d04e7"
            ]
        ]
    },
    {
        "id": "a762fc9288921434",
        "type": "link in",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "START",
        "links": [
            "bb49eb64a95fd55b"
        ],
        "x": 155,
        "y": 1780,
        "wires": [
            [
                "14f500b7b1de838f"
            ]
        ]
    },
    {
        "id": "4a19a26eb247bcfb",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Stammdaten Verzeichnis",
        "func": "msg.filename = global.get('PathStammdaten') + \"/kunden_stammdaten.json\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1940,
        "wires": [
            [
                "d2ddab99473b3656"
            ]
        ]
    },
    {
        "id": "125ab90468385839",
        "type": "ui-template",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "group": "c32759b3efc667c0",
        "page": "",
        "ui": "",
        "name": "Text Produktionsbuch",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<div style=\"font-size:1.09em; line-height:1.6;\">\n    <strong style=\"font-size:1.18em;\">Kunden-Stammdaten</strong><br>\n    <span>Hier kÃ¶nnen die Kunden-Stammdaten fÃ¼r das Produktionsbuch angelegt und bearbeitet werden.</span><br>\n</div>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "d92ffa0a71a5bdab",
        "type": "debug",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 1240,
        "wires": []
    },
    {
        "id": "3db5bdd353e02f42",
        "type": "debug",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 2300,
        "wires": []
    },
    {
        "id": "5d8cb4ae2aa3f2ec",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "PathProduktionen abfragen",
        "func": "msg.payload = global.get('PathProduktionen');\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 2340,
        "wires": [
            [
                "373f7b1408a8d8ef"
            ]
        ]
    },
    {
        "id": "373f7b1408a8d8ef",
        "type": "fs-ops-dir",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Ordner abfragen",
        "path": "payload",
        "pathType": "msg",
        "filter": "",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1680,
        "y": 2340,
        "wires": [
            [
                "2377aa45b2403535"
            ]
        ]
    },
    {
        "id": "0972a4a5dd6d6322",
        "type": "debug",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2120,
        "y": 2360,
        "wires": []
    },
    {
        "id": "2377aa45b2403535",
        "type": "function",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Ordner filtern",
        "func": "// msg.files = Liste aller Ordnernamen (Strings), msg.neukunde.kunde = gewÃ¼nschter Name\nconst wanted = (msg.neukunde.kunde || '').toLowerCase();\nconst found = (msg.files || []).some(dir => dir.toLowerCase() === wanted);\n\nif (found) {\n    msg.payload = \"Achtung: Ordner existiert bereits (ggf. mit anderer GroÃ-/Kleinschreibung)!\";\n    return [null, msg]; // Output 2: Info\n} else {\n    msg.payload = global.get('PathProduktionen') + '/' + msg.neukunde.kunde;\n    return [msg, null]; // Output 1: Ordner anlegen\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 2340,
        "wires": [
            [
                "95e85c4c1456807d",
                "0972a4a5dd6d6322"
            ],
            [
                "0972a4a5dd6d6322"
            ]
        ],
        "outputLabels": [
            "Kundenordner anlegen",
            "Kundenordner bereits vorhanden"
        ]
    },
    {
        "id": "95e85c4c1456807d",
        "type": "fs-ops-mkdir",
        "z": "b1c585f0d25b86fd",
        "g": "b38df26cbb8bb4b3",
        "name": "Kundenordner anlegen",
        "path": "",
        "pathType": "str",
        "dirname": "payload",
        "dirnameType": "msg",
        "recursive": false,
        "mode": "755",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 2060,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "112134d881c75205",
        "type": "fs-ops-dir",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "Projektverzeichnis lesen",
        "path": "projektRoot",
        "pathType": "msg",
        "filter": "*",
        "filterType": "str",
        "dir": "folders",
        "dirType": "msg",
        "x": 930,
        "y": 1200,
        "wires": [
            [
                "88664cf125d3933c"
            ]
        ]
    },
    {
        "id": "4877009023c9a7ca",
        "type": "debug",
        "z": "b1c585f0d25b86fd",
        "g": "90a1257292e52c0c",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1420,
        "wires": []
    },
    {
        "id": "63f5b463c89c3169",
        "type": "fs-ops-mkdir",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Zielordner anlegen",
        "path": "",
        "pathType": "str",
        "dirname": "recallItems.dest",
        "dirnameType": "msg",
        "recursive": true,
        "mode": "755",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 990,
        "y": 180,
        "wires": [
            [
                "3f77b019c8edb6bf"
            ]
        ]
    },
    {
        "id": "910c53735d84f790",
        "type": "comment",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "PT-Modul",
        "info": "",
        "x": 270,
        "y": 160,
        "wires": []
    },
    {
        "id": "0cc42adec31147b4",
        "type": "function",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "PT Documents Pfad setzen",
        "func": "global.set(\"PathPTUser\", \"/Volumes/Macintosh HD/Users/philippmenzel/Documents/Pro Tools\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1390220b613fe431",
        "type": "inject",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 280,
        "y": 280,
        "wires": [
            [
                "0cc42adec31147b4"
            ]
        ]
    },
    {
        "id": "2fd0269e7a3327db",
        "type": "debug",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "DEBUG Kopierjob",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 400,
        "wires": []
    },
    {
        "id": "46b6eeab442c1d66",
        "type": "debug",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 420,
        "wires": []
    },
    {
        "id": "6c2a4aeaf0c3a74d",
        "type": "debug",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "3a221d432cfa6e26",
        "type": "debug",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 420,
        "wires": []
    },
    {
        "id": "6aa1830edc542c65",
        "type": "debug",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 460,
        "wires": []
    },
    {
        "id": "cada920e0c496a2a",
        "type": "debug",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 420,
        "wires": []
    },
    {
        "id": "b49ecebf74226b1b",
        "type": "debug",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 460,
        "wires": []
    },
    {
        "id": "eb267ef800bfbb25",
        "type": "debug",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 460,
        "wires": []
    },
    {
        "id": "292a91e702d4b8f2",
        "type": "ui-form",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Settings-Form",
        "group": "2ffd9e5a045727c6",
        "label": "",
        "order": 1,
        "width": "0",
        "height": "0",
        "options": [
            {
                "label": "Templates kopieren",
                "key": "templates",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Track Presets kopieren",
                "key": "trackpresets",
                "type": "checkbox",
                "required": false
            }
        ],
        "formValue": {
            "templates": false,
            "trackpresets": false
        },
        "payload": "",
        "submit": "Recall",
        "cancel": "Store",
        "resetOnSubmit": false,
        "topic": "",
        "topicType": "str",
        "passthru": false,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "9faf9391590124e0"
            ]
        ]
    },
    {
        "id": "9faf9391590124e0",
        "type": "function",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Recall Items erzeugen",
        "func": "// Hole User- und Pfadinfos\nlet activeUser = global.get('activeUser');\nlet PathPTUser = global.get('PathPTUser'); // z.B. /Users/NAME/Documents/Pro Tools\nlet PathMitarbeiter = flow.get('PathMitarbeiter');\n\nlet recallItems = [];\nif (msg.payload.templates) {\n    recallItems.push({\n        src: `${PathMitarbeiter}/${activeUser}/templates`,\n        dest: `${PathPTUser}/Session Templates/${activeUser}`\n    });\n}\nif (msg.payload.trackpresets) {\n    recallItems.push({\n        src: `${PathMitarbeiter}/${activeUser}/Track Presets`,\n        dest: `${PathPTUser}/Track Presets/${activeUser}`\n    });\n}\nmsg.recallItems = recallItems;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "d0a06d0cfd864180"
            ]
        ]
    },
    {
        "id": "d0a06d0cfd864180",
        "type": "split",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Split recallItems",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "recallItems",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "63f5b463c89c3169"
            ]
        ]
    },
    {
        "id": "3f77b019c8edb6bf",
        "type": "fs-ops-dir",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Quellordner auslesen",
        "path": "recallItems.src",
        "pathType": "msg",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "264bc4c695f8dccc"
            ]
        ]
    },
    {
        "id": "264bc4c695f8dccc",
        "type": "function",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Jobs-Objekte erstellen",
        "func": "// msg.files: Array mit Dateinamen\n// msg.recallItems.src / dest\nlet jobs = (msg.files || []).map(file => ({\n    src: `${msg.recallItems.src}/${file}`,\n    dest: msg.recallItems.dest,\n    filename: file\n}));\nmsg.payload = jobs;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "x": 1260,
        "y": 220,
        "wires": [
            [
                "12439cf3be2c7508"
            ]
        ]
    },
    {
        "id": "12439cf3be2c7508",
        "type": "split",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "AuftrÃ¤ge splitten",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1490,
        "y": 220,
        "wires": [
            [
                "07562e46a647ed75"
            ]
        ]
    },
    {
        "id": "07562e46a647ed75",
        "type": "fs-ops-copy",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Kopiere Datei",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.src",
        "sourceFilenameType": "msg",
        "destPath": "payload.dest",
        "destPathType": "msg",
        "destFilename": "payload.filename",
        "destFilenameType": "msg",
        "link": false,
        "overwrite": true,
        "x": 1670,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f28ee83432a5c3b6",
        "type": "split",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Jede Datei einzeln",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "files",
        "x": 780,
        "y": 300,
        "wires": [
            [
                "0d7bcb2c46606757"
            ]
        ]
    },
    {
        "id": "0d7bcb2c46606757",
        "type": "function",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Dateipfad setzen",
        "func": "msg.filepath = `${msg.recallItems.src}/${msg.payload}`;\nmsg.filename = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e3a6280e0cd022c3",
        "type": "function",
        "z": "24039523dcf573b0",
        "g": "f10408fa2622e18b",
        "name": "Nur echte Dateien weiterleiten",
        "func": "if (msg.stat && msg.stat.isFile) {\n    // Ziel und Quelle fÃ¼r Kopierjob setzen\n    msg.payload = {\n        src: msg.filepath,\n        dest: msg.recallItems.dest,\n        filename: msg.filename\n    };\n    return msg;\n}\n// Wenn kein File, verwerfen\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1580,
        "y": 300,
        "wires": [
            []
        ]
    }
]